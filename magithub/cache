#s(hash-table size 487 test equal rehash-size 1.5 rehash-threshold 0.8 data ((nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "shellbj")) (name . "haystack-client-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 103978941) (name . "haystack-client-java") (full_name . "shellbj/haystack-client-java") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork . t) (url . "https://api.github.com/repos/shellbj/haystack-client-java") (forks_url . "https://api.github.com/repos/shellbj/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack-client-java/deployments") (created_at . "2017-09-18T18:54:33Z") (updated_at . "2017-10-13T19:57:21Z") (pushed_at . "2018-01-03T21:34:24Z") (git_url . "git://github.com/shellbj/haystack-client-java.git") (ssh_url . "git@github.com:shellbj/haystack-client-java.git") (clone_url . "https://github.com/shellbj/haystack-client-java.git") (svn_url . "https://github.com/shellbj/haystack-client-java") (homepage) (size . 143) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (source (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (network_count . 2) (subscribers_count . 1)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-client-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:deprecate"))) nil (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))))))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "bshell")) (name . "platform-diagnostics"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 10237) (name . "platform-diagnostics") (full_name . "bshell/platform-diagnostics") (owner (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (private) (html_url . "https://ewegithub.sb.karmalab.net/bshell/platform-diagnostics") (description . "Platform Diagnostic Component") (fork . t) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/platform-diagnostics/deployments") (created_at . "2016-06-24T20:52:57Z") (updated_at . "2017-01-11T21:45:32Z") (pushed_at . "2017-12-06T17:11:50Z") (git_url . "git://ewegithub.sb.karmalab.net/bshell/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:bshell/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/bshell/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/bshell/platform-diagnostics") (homepage) (size . 8646) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (parent (id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master")) (source (id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master")) (network_count . 2) (subscribers_count . 0)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) "master"))) ((state . "pending") (statuses) (sha . "3a4500d101827323ad270ceed560eac138a865db") (total_count . 0) (repository (id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits/3a4500d101827323ad270ceed560eac138a865db") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits/3a4500d101827323ad270ceed560eac138a865db/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))))))) (((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (id . 437895) (number . 223) (title . "Add helper methods for traceId, messageId and parentMessageId") (user (login . "anmcghie") (id . 4668) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/4668?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie") (html_url . "https://ewegithub.sb.karmalab.net/anmcghie") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Andrew McGhie (anmcghie),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-03T06:00:33Z") (updated_at . "2018-01-03T06:00:33Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/223") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.patch")) (body . "The methods on the `Trace` object are not consistent with the language used in the documentation.")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (id . 426874) (number . 211) (title . "Dev kpeswani blobs grpc dispatcher") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-11T09:21:39Z") (updated_at . "2017-12-11T10:17:44Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/211") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (id . 423676) (number . 204) (title . "Dev kpeswani platform transit") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-06T04:03:40Z") (updated_at . "2017-12-06T04:03:40Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/204") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (id . 416673) (number . 187) (title . "Added maven wrapper(3.5.2)") (user (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T20:45:56Z") (updated_at . "2017-11-27T20:45:56Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/187") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (id . 322357) (number . 138) (title . "Remove @Deprecated APPLICATION_PORT constant and method") (user (login . "mlopes") (id . 1099) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1099?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes") (html_url . "https://ewegithub.sb.karmalab.net/mlopes") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Marcos Lopes (mlopes),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-12T03:41:00Z") (updated_at . "2017-07-12T03:41:00Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/138") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.patch")) (body . "https://trello.com/c/Z8BBzHQh/372-remove-all-deprecated-code-from-platform-modules
"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "anmcghie") (id . 4668) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/4668?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie") (html_url . "https://ewegithub.sb.karmalab.net/anmcghie") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Andrew McGhie (anmcghie),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "anmcghie") (id . 4668) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/4668?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie") (html_url . "https://ewegithub.sb.karmalab.net/anmcghie") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Andrew McGhie (anmcghie),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Andrew McGhie (anmcghie)") (company) (blog) (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 1) (followers . 0) (following . 0) (created_at . "2017-06-19T03:45:58Z") (updated_at . "2017-12-11T07:33:55Z") (suspended_at)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Keshav Peswani (kpeswani)") (company) (blog) (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-06-29T07:40:41Z") (updated_at . "2017-09-14T05:15:05Z") (suspended_at)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Bryan Shell") (company) (blog) (location . "Chicago") (email . "bshell@expedia.com") (hireable) (bio) (public_repos . 12) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-12-15T18:05:01Z") (updated_at . "2018-01-04T15:04:43Z") (suspended_at) (private_gists . 0) (total_private_repos . 0) (owned_private_repos . 0) (disk_usage . 0) (collaborators . 0)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mlopes") (id . 1099) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1099?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes") (html_url . "https://ewegithub.sb.karmalab.net/mlopes") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Marcos Lopes (mlopes),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "mlopes") (id . 1099) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1099?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes") (html_url . "https://ewegithub.sb.karmalab.net/mlopes") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Marcos Lopes (mlopes),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Marcos Lopes (mlopes)") (company) (blog) (location) (email) (hireable) (bio) (public_repos . 4) (public_gists . 1) (followers . 1) (following . 1) (created_at . "2015-03-09T04:40:55Z") (updated_at . "2017-11-23T11:01:01Z") (suspended_at)) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))) (quote ((number . 138)))))) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (id . 322357) (number . 138) (title . "Remove @Deprecated APPLICATION_PORT constant and method") (user (login . "mlopes") (id . 1099) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1099?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes") (html_url . "https://ewegithub.sb.karmalab.net/mlopes") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Marcos Lopes (mlopes),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-12T03:41:00Z") (updated_at . "2017-07-12T03:41:00Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/138") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.patch")) (body . "https://trello.com/c/Z8BBzHQh/372-remove-all-deprecated-code-from-platform-modules
") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) (quote ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/138/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (id . 322357) (number . 138) (title . "Remove @Deprecated APPLICATION_PORT constant and method") (user (login . "mlopes") (id . 1099) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1099?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes") (html_url . "https://ewegithub.sb.karmalab.net/mlopes") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mlopes/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Marcos Lopes (mlopes),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-12T03:41:00Z") (updated_at . "2017-07-12T03:41:00Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/138") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/138.patch")) (body . "https://trello.com/c/Z8BBzHQh/372-remove-all-deprecated-code-from-platform-modules
"))))))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))) (quote ((number . 187)))))) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (id . 416673) (number . 187) (title . "Added maven wrapper(3.5.2)") (user (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T20:45:56Z") (updated_at . "2017-11-27T20:45:56Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/187") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.patch")) (body . "") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) (quote ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/187/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (id . 416673) (number . 187) (title . "Added maven wrapper(3.5.2)") (user (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T20:45:56Z") (updated_at . "2017-11-27T20:45:56Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/187") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/187.patch")) (body . ""))))))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))) (quote ((number . 204)))))) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (id . 423676) (number . 204) (title . "Dev kpeswani platform transit") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-06T04:03:40Z") (updated_at . "2017-12-06T04:03:40Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/204") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.patch")) (body . "") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) (quote ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/204/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (id . 423676) (number . 204) (title . "Dev kpeswani platform transit") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-06T04:03:40Z") (updated_at . "2017-12-06T04:03:40Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/204") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/204.patch")) (body . ""))))))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))) (quote ((number . 211)))))) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (id . 426874) (number . 211) (title . "Dev kpeswani blobs grpc dispatcher") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-11T09:21:39Z") (updated_at . "2017-12-11T10:17:44Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/211") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.patch")) (body . "") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) (quote ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/211/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (id . 426874) (number . 211) (title . "Dev kpeswani blobs grpc dispatcher") (user (login . "kpeswani") (id . 3235) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3235?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani") (html_url . "https://ewegithub.sb.karmalab.net/kpeswani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/kpeswani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Keshav Peswani (kpeswani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-11T09:21:39Z") (updated_at . "2017-12-11T10:17:44Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/211") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/211.patch")) (body . ""))))))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "EWE")) (name . "platform-diagnostics"))) (quote ((number . 223)))))) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (id . 437895) (number . 223) (title . "Add helper methods for traceId, messageId and parentMessageId") (user (login . "anmcghie") (id . 4668) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/4668?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie") (html_url . "https://ewegithub.sb.karmalab.net/anmcghie") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Andrew McGhie (anmcghie),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-03T06:00:33Z") (updated_at . "2018-01-03T06:00:33Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/223") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.patch")) (body . "The methods on the `Trace` object are not consistent with the language used in the documentation.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 1623) (name . "platform-diagnostics") (full_name . "EWE/platform-diagnostics") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (description . "Platform Diagnostic Component") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/deployments") (created_at . "2014-12-05T07:15:44Z") (updated_at . "2017-12-19T20:51:58Z") (pushed_at . "2018-01-03T14:12:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform-diagnostics.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics") (homepage) (size . 8711) (stargazers_count . 3) (watchers_count . 3) (language . "Java") (has_issues) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 5) (forks . 2) (open_issues . 5) (watchers . 3) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 229))) (quote ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/issues/223/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (id . 437895) (number . 223) (title . "Add helper methods for traceId, messageId and parentMessageId") (user (login . "anmcghie") (id . 4668) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/4668?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie") (html_url . "https://ewegithub.sb.karmalab.net/anmcghie") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/anmcghie/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Andrew McGhie (anmcghie),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-03T06:00:33Z") (updated_at . "2018-01-03T06:00:33Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform-diagnostics/pulls/223") (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/platform-diagnostics/pull/223.patch")) (body . "The methods on the `Trace` object are not consistent with the language used in the documentation."))))))) nil (nil :user-demographics (magithub-request (ghubp-get-user))) ((login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin) (name . "Bryan Shell") (company . "Expedia") (blog . "") (location . "Chicago, IL") (email) (hireable . t) (bio) (public_repos . 48) (public_gists . 2) (followers . 16) (following . 18) (created_at . "2010-09-13T18:21:54Z") (updated_at . "2018-01-05T20:00:02Z") (private_gists . 1) (total_private_repos . 5) (owned_private_repos . 0) (disk_usage . 11940) (collaborators . 0) (two_factor_authentication . t) (plan (name . "free") (space . 976562499) (collaborators . 0) (private_repos . 0))) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) "master"))) ((state . "success") (statuses ((url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/7087a77aaaf9f4524d49eae36679e8cdb66e4cb5") (id . 4460257418) (state . "success") (description . "The Travis CI build passed") (target_url . "https://travis-ci.org/ExpediaDotCom/haystack-client-java/builds/324766353?utm_source=github_status&utm_medium=notification") (context . "continuous-integration/travis-ci/push") (created_at . "2018-01-03T21:49:54Z") (updated_at . "2018-01-03T21:49:54Z"))) (sha . "7087a77aaaf9f4524d49eae36679e8cdb66e4cb5") (total_count . 1) (repository (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments")) (commit_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits/7087a77aaaf9f4524d49eae36679e8cdb66e4cb5") (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits/7087a77aaaf9f4524d49eae36679e8cdb66e4cb5/status")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:disable-tracing"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 103978941) (name . "haystack-client-java") (full_name . "shellbj/haystack-client-java") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork . t) (url . "https://api.github.com/repos/shellbj/haystack-client-java") (forks_url . "https://api.github.com/repos/shellbj/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack-client-java/deployments") (created_at . "2017-09-18T18:54:33Z") (updated_at . "2017-10-13T19:57:21Z") (pushed_at . "2018-01-03T21:34:24Z") (git_url . "git://github.com/shellbj/haystack-client-java.git") (ssh_url . "git@github.com:shellbj/haystack-client-java.git") (clone_url . "https://github.com/shellbj/haystack-client-java.git") (svn_url . "https://github.com/shellbj/haystack-client-java") (homepage) (size . 143) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (source (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (network_count . 2) (subscribers_count . 1))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 103978941) (name . "haystack-client-java") (full_name . "shellbj/haystack-client-java") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork . t) (url . "https://api.github.com/repos/shellbj/haystack-client-java") (forks_url . "https://api.github.com/repos/shellbj/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack-client-java/deployments") (created_at . "2017-09-18T18:54:33Z") (updated_at . "2017-10-13T19:57:21Z") (pushed_at . "2018-01-05T21:35:37Z") (git_url . "git://github.com/shellbj/haystack-client-java.git") (ssh_url . "git@github.com:shellbj/haystack-client-java.git") (clone_url . "https://github.com/shellbj/haystack-client-java.git") (svn_url . "https://github.com/shellbj/haystack-client-java") (homepage) (size . 143) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (source (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master")) (network_count . 2) (subscribers_count . 1)) (((auth . magithub)) :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-client-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:annotate-service-name"))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-client-java"))) (quote ((number . 26)))))) ((url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26") (repository_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26/comments") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26/events") (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26") (id . 289406837) (number . 26) (title . "Add a @Traced annotation") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-17T20:43:20Z") (updated_at . "2018-01-17T20:43:20Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26") (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26") (diff_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26.diff") (patch_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26.patch")) (body . "Add a @Traced annotation") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-05T22:16:00Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 149) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 1) (default_branch . "master"))) (quote ((url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26") (id . 163547444) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26") (diff_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26.diff") (patch_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26.patch") (issue_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26") (number . 26) (state . "open") (locked) (title . "Add a @Traced annotation") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (body . "Add a @Traced annotation") (created_at . "2018-01-17T20:43:20Z") (updated_at . "2018-01-17T20:43:20Z") (closed_at) (merged_at) (merge_commit_sha) (assignee) (assignees) (requested_reviewers) (milestone) (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26/commits") (review_comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26/comments") (review_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/comments{/number}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26/comments") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/fe5d441d6e431aac64ba8b5cbcc7fd44e9582f42") (head (label . "shellbj:annotate-service-name") (ref . "annotate-service-name") (sha . "fe5d441d6e431aac64ba8b5cbcc7fd44e9582f42") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (repo (id . 103978941) (name . "haystack-client-java") (full_name . "shellbj/haystack-client-java") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork . t) (url . "https://api.github.com/repos/shellbj/haystack-client-java") (forks_url . "https://api.github.com/repos/shellbj/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack-client-java/deployments") (created_at . "2017-09-18T18:54:33Z") (updated_at . "2017-10-13T19:57:21Z") (pushed_at . "2018-01-17T20:36:46Z") (git_url . "git://github.com/shellbj/haystack-client-java.git") (ssh_url . "git@github.com:shellbj/haystack-client-java.git") (clone_url . "https://github.com/shellbj/haystack-client-java.git") (svn_url . "https://github.com/shellbj/haystack-client-java") (homepage) (size . 149) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master"))) (base (label . "ExpediaDotCom:master") (ref . "master") (sha . "9ad61ab0aadd537a185b1b838e74887e33fafaa1") (user (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (repo (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-05T22:16:00Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 149) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 1) (default_branch . "master"))) (_links (self (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26")) (html (href . "https://github.com/ExpediaDotCom/haystack-client-java/pull/26")) (issue (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26")) (comments (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/26/comments")) (review_comments (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26/comments")) (review_comment (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/comments{/number}")) (commits (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/26/commits")) (statuses (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/fe5d441d6e431aac64ba8b5cbcc7fd44e9582f42"))) (author_association . "OWNER") (merged) (mergeable) (rebaseable) (mergeable_state . "unknown") (merged_by) (comments . 0) (review_comments . 0) (maintainer_can_modify . t) (commits . 1) (additions . 300) (deletions . 3) (changed_files . 8))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:http-client"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "shellbj")) (name . "exp-devops"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 51772852) (name . "exp-devops") (full_name . "shellbj/exp-devops") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private . t) (html_url . "https://github.com/shellbj/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork . t) (url . "https://api.github.com/repos/shellbj/exp-devops") (forks_url . "https://api.github.com/repos/shellbj/exp-devops/forks") (keys_url . "https://api.github.com/repos/shellbj/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/exp-devops/teams") (hooks_url . "https://api.github.com/repos/shellbj/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/exp-devops/events") (assignees_url . "https://api.github.com/repos/shellbj/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/exp-devops/tags") (blobs_url . "https://api.github.com/repos/shellbj/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/shellbj/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/exp-devops/subscription") (commits_url . "https://api.github.com/repos/shellbj/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/exp-devops/merges") (archive_url . "https://api.github.com/repos/shellbj/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/exp-devops/downloads") (issues_url . "https://api.github.com/repos/shellbj/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/exp-devops/deployments") (created_at . "2016-02-15T17:33:18Z") (updated_at . "2016-02-15T17:34:10Z") (pushed_at . "2017-10-29T14:22:51Z") (git_url . "git://github.com/shellbj/exp-devops.git") (ssh_url . "git@github.com:shellbj/exp-devops.git") (clone_url . "https://github.com/shellbj/exp-devops.git") (svn_url . "https://github.com/shellbj/exp-devops") (homepage) (size . 711333) (stargazers_count . 0) (watchers_count . 0) (language . "Ruby") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (parent (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (source (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (network_count . 95) (subscribers_count . 276)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaInc")) (name . "exp-devops"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))) "master"))) ((state . "pending") (statuses) (sha . "3146244e6f1f5cd873786084f6cef377c87c931c") (total_count . 0) (repository (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments")) (commit_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits/3146244e6f1f5cd873786084f6cef377c87c931c") (url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits/3146244e6f1f5cd873786084f6cef377c87c931c/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))))))) (((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46111") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46111/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46111/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46111/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46111") (id . 290356698) (number . 46111) (title . "Splunk testing in segmented world") (user (login . "pedbarbosa") (id . 5567593) (avatar_url . "https://avatars1.githubusercontent.com/u/5567593?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pedbarbosa") (html_url . "https://github.com/pedbarbosa") (followers_url . "https://api.github.com/users/pedbarbosa/followers") (following_url . "https://api.github.com/users/pedbarbosa/following{/other_user}") (gists_url . "https://api.github.com/users/pedbarbosa/gists{/gist_id}") (starred_url . "https://api.github.com/users/pedbarbosa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pedbarbosa/subscriptions") (organizations_url . "https://api.github.com/users/pedbarbosa/orgs") (repos_url . "https://api.github.com/users/pedbarbosa/repos") (events_url . "https://api.github.com/users/pedbarbosa/events{/privacy}") (received_events_url . "https://api.github.com/users/pedbarbosa/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-22T05:45:09Z") (updated_at . "2018-01-22T06:43:02Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46111") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46111") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/46111.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/46111.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46083") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46083/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46083/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46083/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46083") (id . 289935296) (number . 46083) (title . "enabling IAM role") (user (login . "sharivijayan") (id . 28917093) (avatar_url . "https://avatars2.githubusercontent.com/u/28917093?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sharivijayan") (html_url . "https://github.com/sharivijayan") (followers_url . "https://api.github.com/users/sharivijayan/followers") (following_url . "https://api.github.com/users/sharivijayan/following{/other_user}") (gists_url . "https://api.github.com/users/sharivijayan/gists{/gist_id}") (starred_url . "https://api.github.com/users/sharivijayan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sharivijayan/subscriptions") (organizations_url . "https://api.github.com/users/sharivijayan/orgs") (repos_url . "https://api.github.com/users/sharivijayan/repos") (events_url . "https://api.github.com/users/sharivijayan/events{/privacy}") (received_events_url . "https://api.github.com/users/sharivijayan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-19T10:51:20Z") (updated_at . "2018-01-19T10:51:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46083") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46083") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/46083.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/46083.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46050") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46050/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46050/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46050/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46050") (id . 289629342) (number . 46050) (title . "removing instance storage") (user (login . "Nitish316") (id . 5319301) (avatar_url . "https://avatars3.githubusercontent.com/u/5319301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nitish316") (html_url . "https://github.com/Nitish316") (followers_url . "https://api.github.com/users/Nitish316/followers") (following_url . "https://api.github.com/users/Nitish316/following{/other_user}") (gists_url . "https://api.github.com/users/Nitish316/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nitish316/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nitish316/subscriptions") (organizations_url . "https://api.github.com/users/Nitish316/orgs") (repos_url . "https://api.github.com/users/Nitish316/repos") (events_url . "https://api.github.com/users/Nitish316/events{/privacy}") (received_events_url . "https://api.github.com/users/Nitish316/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-18T13:31:42Z") (updated_at . "2018-01-18T13:31:42Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46050") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46050") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/46050.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/46050.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45911") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45911/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45911/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45911/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45911") (id . 287867914) (number . 45911) (title . "role tag update") (user (login . "AdrianaMicu") (id . 17982329) (avatar_url . "https://avatars0.githubusercontent.com/u/17982329?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AdrianaMicu") (html_url . "https://github.com/AdrianaMicu") (followers_url . "https://api.github.com/users/AdrianaMicu/followers") (following_url . "https://api.github.com/users/AdrianaMicu/following{/other_user}") (gists_url . "https://api.github.com/users/AdrianaMicu/gists{/gist_id}") (starred_url . "https://api.github.com/users/AdrianaMicu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AdrianaMicu/subscriptions") (organizations_url . "https://api.github.com/users/AdrianaMicu/orgs") (repos_url . "https://api.github.com/users/AdrianaMicu/repos") (events_url . "https://api.github.com/users/AdrianaMicu/events{/privacy}") (received_events_url . "https://api.github.com/users/AdrianaMicu/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin)) (assignees ((login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2018-01-11T17:46:21Z") (updated_at . "2018-01-11T17:46:21Z") (closed_at) (author_association . "FIRST_TIME_CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45911") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45911") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45911.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45911.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45847") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45847/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45847/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45847/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45847") (id . 287288007) (number . 45847) (title . "Merge branch 'master' into pbarbosa/20180110_missing_dns_zone") (user (login . "pedbarbosa") (id . 5567593) (avatar_url . "https://avatars1.githubusercontent.com/u/5567593?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pedbarbosa") (html_url . "https://github.com/pedbarbosa") (followers_url . "https://api.github.com/users/pedbarbosa/followers") (following_url . "https://api.github.com/users/pedbarbosa/following{/other_user}") (gists_url . "https://api.github.com/users/pedbarbosa/gists{/gist_id}") (starred_url . "https://api.github.com/users/pedbarbosa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pedbarbosa/subscriptions") (organizations_url . "https://api.github.com/users/pedbarbosa/orgs") (repos_url . "https://api.github.com/users/pedbarbosa/repos") (events_url . "https://api.github.com/users/pedbarbosa/events{/privacy}") (received_events_url . "https://api.github.com/users/pedbarbosa/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-10T01:38:42Z") (updated_at . "2018-01-10T01:41:01Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45847") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45847") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45847.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45847.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45789") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45789/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45789/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45789/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45789") (id . 286669759) (number . 45789) (title . "Blue green switch") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-08T07:53:42Z") (updated_at . "2018-01-08T07:53:42Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45789") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45789") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45789.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45789.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45714") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45714/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45714/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45714/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45714") (id . 285614768) (number . 45714) (title . "LBCBL-2956: Rename cluster name from 4 to 5") (user (login . "pankajkedia92") (id . 7999535) (avatar_url . "https://avatars3.githubusercontent.com/u/7999535?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pankajkedia92") (html_url . "https://github.com/pankajkedia92") (followers_url . "https://api.github.com/users/pankajkedia92/followers") (following_url . "https://api.github.com/users/pankajkedia92/following{/other_user}") (gists_url . "https://api.github.com/users/pankajkedia92/gists{/gist_id}") (starred_url . "https://api.github.com/users/pankajkedia92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pankajkedia92/subscriptions") (organizations_url . "https://api.github.com/users/pankajkedia92/orgs") (repos_url . "https://api.github.com/users/pankajkedia92/repos") (events_url . "https://api.github.com/users/pankajkedia92/events{/privacy}") (received_events_url . "https://api.github.com/users/pankajkedia92/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-03T07:25:57Z") (updated_at . "2018-01-03T07:31:46Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45714") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45714") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45714.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45714.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45699") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45699/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45699/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45699/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45699") (id . 285453724) (number . 45699) (title . "update to 1.40") (user (login . "anwoolterton") (id . 3848023) (avatar_url . "https://avatars0.githubusercontent.com/u/3848023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anwoolterton") (html_url . "https://github.com/anwoolterton") (followers_url . "https://api.github.com/users/anwoolterton/followers") (following_url . "https://api.github.com/users/anwoolterton/following{/other_user}") (gists_url . "https://api.github.com/users/anwoolterton/gists{/gist_id}") (starred_url . "https://api.github.com/users/anwoolterton/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anwoolterton/subscriptions") (organizations_url . "https://api.github.com/users/anwoolterton/orgs") (repos_url . "https://api.github.com/users/anwoolterton/repos") (events_url . "https://api.github.com/users/anwoolterton/events{/privacy}") (received_events_url . "https://api.github.com/users/anwoolterton/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-02T15:13:18Z") (updated_at . "2018-01-02T15:13:35Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45699") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45699") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45699.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45699.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45663") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45663/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45663/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45663/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45663") (id . 284790660) (number . 45663) (title . "Updating lambda.rb to deploy multiple lambdas") (user (login . "EPCEET-svasquezsoltor") (id . 18616720) (avatar_url . "https://avatars0.githubusercontent.com/u/18616720?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EPCEET-svasquezsoltor") (html_url . "https://github.com/EPCEET-svasquezsoltor") (followers_url . "https://api.github.com/users/EPCEET-svasquezsoltor/followers") (following_url . "https://api.github.com/users/EPCEET-svasquezsoltor/following{/other_user}") (gists_url . "https://api.github.com/users/EPCEET-svasquezsoltor/gists{/gist_id}") (starred_url . "https://api.github.com/users/EPCEET-svasquezsoltor/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EPCEET-svasquezsoltor/subscriptions") (organizations_url . "https://api.github.com/users/EPCEET-svasquezsoltor/orgs") (repos_url . "https://api.github.com/users/EPCEET-svasquezsoltor/repos") (events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/events{/privacy}") (received_events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-27T20:27:57Z") (updated_at . "2017-12-29T22:21:14Z") (closed_at) (author_association . "FIRST_TIMER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45663") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45663") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45663.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45663.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45590") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45590/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45590/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45590/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45590") (id . 283323514) (number . 45590) (title . "Palladium Generated Chef Site Cookbook Creation For ews-tools") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-19T18:15:54Z") (updated_at . "2017-12-19T18:15:54Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45590") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45590") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45590.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45590.patch")) (body . "Palladium Generated Chef Site Cookbook Creation For ews-tools")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45586") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45586/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45586/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45586/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45586") (id . 283311650) (number . 45586) (title . "update expweb frozen-cookbooks metadata and readme with directions to") (user (login . "marcoslopes") (id . 1785111) (avatar_url . "https://avatars3.githubusercontent.com/u/1785111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/marcoslopes") (html_url . "https://github.com/marcoslopes") (followers_url . "https://api.github.com/users/marcoslopes/followers") (following_url . "https://api.github.com/users/marcoslopes/following{/other_user}") (gists_url . "https://api.github.com/users/marcoslopes/gists{/gist_id}") (starred_url . "https://api.github.com/users/marcoslopes/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/marcoslopes/subscriptions") (organizations_url . "https://api.github.com/users/marcoslopes/orgs") (repos_url . "https://api.github.com/users/marcoslopes/repos") (events_url . "https://api.github.com/users/marcoslopes/events{/privacy}") (received_events_url . "https://api.github.com/users/marcoslopes/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-19T17:32:11Z") (updated_at . "2017-12-19T17:36:40Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45586") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45586") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45586.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45586.patch")) (body . "the new repos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45560") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45560/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45560/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45560/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45560") (id . 283038963) (number . 45560) (title . "Product sku") (user (login . "ashwinbalegar87") (id . 26943151) (avatar_url . "https://avatars2.githubusercontent.com/u/26943151?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashwinbalegar87") (html_url . "https://github.com/ashwinbalegar87") (followers_url . "https://api.github.com/users/ashwinbalegar87/followers") (following_url . "https://api.github.com/users/ashwinbalegar87/following{/other_user}") (gists_url . "https://api.github.com/users/ashwinbalegar87/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashwinbalegar87/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashwinbalegar87/subscriptions") (organizations_url . "https://api.github.com/users/ashwinbalegar87/orgs") (repos_url . "https://api.github.com/users/ashwinbalegar87/repos") (events_url . "https://api.github.com/users/ashwinbalegar87/events{/privacy}") (received_events_url . "https://api.github.com/users/ashwinbalegar87/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-18T22:15:15Z") (updated_at . "2017-12-20T01:05:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45560") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45560") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45560.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45560.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45480") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45480/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45480/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45480/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45480") (id . 282166821) (number . 45480) (title . "Dtm remove zombies") (user (login . "dantmcgowan") (id . 1541119) (avatar_url . "https://avatars1.githubusercontent.com/u/1541119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dantmcgowan") (html_url . "https://github.com/dantmcgowan") (followers_url . "https://api.github.com/users/dantmcgowan/followers") (following_url . "https://api.github.com/users/dantmcgowan/following{/other_user}") (gists_url . "https://api.github.com/users/dantmcgowan/gists{/gist_id}") (starred_url . "https://api.github.com/users/dantmcgowan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dantmcgowan/subscriptions") (organizations_url . "https://api.github.com/users/dantmcgowan/orgs") (repos_url . "https://api.github.com/users/dantmcgowan/repos") (events_url . "https://api.github.com/users/dantmcgowan/events{/privacy}") (received_events_url . "https://api.github.com/users/dantmcgowan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-14T16:47:55Z") (updated_at . "2017-12-18T16:08:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45480") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45480") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45480.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45480.patch")) (body . "successfully executed test with jenkins job dmcgowan_test - clone of http://trinity.tools.expedia.com/job/ewetest_release-cloud-formation-stack pointing to dtm-remove-zombies branch of exp-devops")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45460") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45460/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45460/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45460/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/45460") (id . 281978044) (number . 45460) (title . "Insufficient parameters") (user (login . "androidfred") (id . 870822) (avatar_url . "https://avatars2.githubusercontent.com/u/870822?v=4") (gravatar_id . "") (url . "https://api.github.com/users/androidfred") (html_url . "https://github.com/androidfred") (followers_url . "https://api.github.com/users/androidfred/followers") (following_url . "https://api.github.com/users/androidfred/following{/other_user}") (gists_url . "https://api.github.com/users/androidfred/gists{/gist_id}") (starred_url . "https://api.github.com/users/androidfred/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/androidfred/subscriptions") (organizations_url . "https://api.github.com/users/androidfred/orgs") (repos_url . "https://api.github.com/users/androidfred/repos") (events_url . "https://api.github.com/users/androidfred/events{/privacy}") (received_events_url . "https://api.github.com/users/androidfred/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-14T04:26:12Z") (updated_at . "2017-12-14T05:57:18Z") (closed_at) (author_association . "NONE") (body . "STEPS TO REPRODUCE
Attempt to use https://trinity.tools.expedia.com/job/ewetest_create-sqs-queue/build?delay=0sec to create a SQS with

* FIFO
* content-based deduplication
* desired deduplication interval

EXPECTED RESULT
1. Field for FIFO
2. Field for content-based deduplication
3. Field for deduplication interval

ACTUAL RESULT
1. No field for FIFO
2. No field for content-based deduplication
3. No field for deduplication interval

MISC
For FIFO queues, the QUEUE_NAME parameter can be suffixed with \".fifo\". This is not great, the name of the queue should be the only job of the QUEUE_NAME field, it should not have some implicit hidden parameters.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45416") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45416/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45416/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45416/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45416") (id . 281617575) (number . 45416) (title . "Connect metrics") (user (login . "rambabunimmala") (id . 2329492) (avatar_url . "https://avatars3.githubusercontent.com/u/2329492?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rambabunimmala") (html_url . "https://github.com/rambabunimmala") (followers_url . "https://api.github.com/users/rambabunimmala/followers") (following_url . "https://api.github.com/users/rambabunimmala/following{/other_user}") (gists_url . "https://api.github.com/users/rambabunimmala/gists{/gist_id}") (starred_url . "https://api.github.com/users/rambabunimmala/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rambabunimmala/subscriptions") (organizations_url . "https://api.github.com/users/rambabunimmala/orgs") (repos_url . "https://api.github.com/users/rambabunimmala/repos") (events_url . "https://api.github.com/users/rambabunimmala/events{/privacy}") (received_events_url . "https://api.github.com/users/rambabunimmala/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-13T03:56:03Z") (updated_at . "2017-12-13T03:56:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45416") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45416") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45416.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45416.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45382") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45382/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45382/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45382/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45382") (id . 281005315) (number . 45382) (title . "updated JDBC driver with falloverPartner (ewetest-int, ewetest)") (user (login . "EXPEgaborNagy") (id . 17315166) (avatar_url . "https://avatars1.githubusercontent.com/u/17315166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgaborNagy") (html_url . "https://github.com/EXPEgaborNagy") (followers_url . "https://api.github.com/users/EXPEgaborNagy/followers") (following_url . "https://api.github.com/users/EXPEgaborNagy/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgaborNagy/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgaborNagy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgaborNagy/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgaborNagy/orgs") (repos_url . "https://api.github.com/users/EXPEgaborNagy/repos") (events_url . "https://api.github.com/users/EXPEgaborNagy/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgaborNagy/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-11T12:51:32Z") (updated_at . "2017-12-11T12:51:32Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45382") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45382") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45382.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45382.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45356") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45356/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45356/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45356/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45356") (id . 280624259) (number . 45356) (title . "modify watson-cassandra-opscenter instance type") (user (login . "vablaya1") (id . 16231031) (avatar_url . "https://avatars0.githubusercontent.com/u/16231031?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vablaya1") (html_url . "https://github.com/vablaya1") (followers_url . "https://api.github.com/users/vablaya1/followers") (following_url . "https://api.github.com/users/vablaya1/following{/other_user}") (gists_url . "https://api.github.com/users/vablaya1/gists{/gist_id}") (starred_url . "https://api.github.com/users/vablaya1/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vablaya1/subscriptions") (organizations_url . "https://api.github.com/users/vablaya1/orgs") (repos_url . "https://api.github.com/users/vablaya1/repos") (events_url . "https://api.github.com/users/vablaya1/events{/privacy}") (received_events_url . "https://api.github.com/users/vablaya1/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-08T21:37:03Z") (updated_at . "2017-12-08T21:41:23Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45356") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45356") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45356.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45356.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45338") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45338/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45338/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45338/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45338") (id . 280477398) (number . 45338) (title . "Palladium Generated Chef Role Creation For omg-tools") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-08T12:42:12Z") (updated_at . "2017-12-08T12:42:12Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45338") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45338") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45338.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45338.patch")) (body . "Palladium Generated Chef Role Creation For omg-tools")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45304") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45304/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45304/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45304/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45304") (id . 280264745) (number . 45304) (title . "setup cutover aggregators") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-07T20:18:22Z") (updated_at . "2017-12-07T20:21:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45304") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45304") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45304.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45304.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45254") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45254/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45254/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45254/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45254") (id . 279729148) (number . 45254) (title . "Revert \"Revert \"added expusersearchnotifications_settings and nyxnotifications_settin…\"\"") (user (login . "EXPEgaborNagy") (id . 17315166) (avatar_url . "https://avatars1.githubusercontent.com/u/17315166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgaborNagy") (html_url . "https://github.com/EXPEgaborNagy") (followers_url . "https://api.github.com/users/EXPEgaborNagy/followers") (following_url . "https://api.github.com/users/EXPEgaborNagy/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgaborNagy/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgaborNagy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgaborNagy/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgaborNagy/orgs") (repos_url . "https://api.github.com/users/EXPEgaborNagy/repos") (events_url . "https://api.github.com/users/EXPEgaborNagy/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgaborNagy/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-06T12:06:34Z") (updated_at . "2017-12-06T12:06:34Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45254") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45254") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45254.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45254.patch")) (body . "Reverts ExpediaInc/exp-devops#44164")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45224") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45224/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45224/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45224/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/45224") (id . 279496354) (number . 45224) (title . "Can we add support for autoscaling ECS app on customized metrics") (user (login . "tj2013") (id . 4505455) (avatar_url . "https://avatars1.githubusercontent.com/u/4505455?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tj2013") (html_url . "https://github.com/tj2013") (followers_url . "https://api.github.com/users/tj2013/followers") (following_url . "https://api.github.com/users/tj2013/following{/other_user}") (gists_url . "https://api.github.com/users/tj2013/gists{/gist_id}") (starred_url . "https://api.github.com/users/tj2013/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tj2013/subscriptions") (organizations_url . "https://api.github.com/users/tj2013/orgs") (repos_url . "https://api.github.com/users/tj2013/repos") (events_url . "https://api.github.com/users/tj2013/events{/privacy}") (received_events_url . "https://api.github.com/users/tj2013/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-05T19:16:04Z") (updated_at . "2017-12-05T19:16:04Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Currently only support autoscaling on CPUUtilization and MemoryUtilization for ECS app. Can we add support for customized metrics?")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45163") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45163/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45163/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45163/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45163") (id . 279072539) (number . 45163) (title . "Tune GC jvm settings for watson-cassandra-dse-5 recipe") (user (login . "vablaya1") (id . 16231031) (avatar_url . "https://avatars0.githubusercontent.com/u/16231031?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vablaya1") (html_url . "https://github.com/vablaya1") (followers_url . "https://api.github.com/users/vablaya1/followers") (following_url . "https://api.github.com/users/vablaya1/following{/other_user}") (gists_url . "https://api.github.com/users/vablaya1/gists{/gist_id}") (starred_url . "https://api.github.com/users/vablaya1/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vablaya1/subscriptions") (organizations_url . "https://api.github.com/users/vablaya1/orgs") (repos_url . "https://api.github.com/users/vablaya1/repos") (events_url . "https://api.github.com/users/vablaya1/events{/privacy}") (received_events_url . "https://api.github.com/users/vablaya1/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-04T17:05:30Z") (updated_at . "2017-12-04T17:05:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45163") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45163") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45163.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45163.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45135") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45135/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45135/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45135/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45135") (id . 278845401) (number . 45135) (title . "Palladium Generated Chef Role Creation For cat-test-chryan-sbjchef-app1") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-04T01:35:36Z") (updated_at . "2017-12-04T01:42:49Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45135") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45135") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45135.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45135.patch")) (body . "Palladium Generated Chef Role Creation For cat-test-chryan-sbjchef-app1")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45093") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45093/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45093/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45093/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45093") (id . 278367910) (number . 45093) (title . "Palladium Generated Chef Role Creation For findbestflightmobile") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-01T06:10:56Z") (updated_at . "2017-12-01T06:10:56Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45093") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45093") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45093.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45093.patch")) (body . "Palladium Generated Chef Role Creation For findbestflightmobile")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45092") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45092/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45092/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45092/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45092") (id . 278367729) (number . 45092) (title . "Palladium Generated Chef Role Creation For findbestflightmobile") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-01T06:09:43Z") (updated_at . "2017-12-01T06:09:43Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45092") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45092") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45092.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45092.patch")) (body . "Palladium Generated Chef Role Creation For findbestflightmobile")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45091") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45091/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45091/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45091/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45091") (id . 278367569) (number . 45091) (title . "Palladium Generated Chef Role Creation For findbestflightmobile") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-01T06:08:31Z") (updated_at . "2017-12-01T06:08:31Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45091") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45091") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45091.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45091.patch")) (body . "Palladium Generated Chef Role Creation For findbestflightmobile")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45072") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45072/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45072/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45072/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45072") (id . 278067367) (number . 45072) (title . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-30T10:22:09Z") (updated_at . "2017-11-30T10:22:09Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45072") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45072") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45072.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45072.patch")) (body . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45071") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45071/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45071/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45071/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45071") (id . 278066900) (number . 45071) (title . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-30T10:20:35Z") (updated_at . "2017-11-30T10:20:35Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45071") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45071") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45071.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45071.patch")) (body . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45070") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45070/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45070/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/45070/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45070") (id . 278066404) (number . 45070) (title . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-30T10:18:58Z") (updated_at . "2017-11-30T10:18:58Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/45070") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/45070") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/45070.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/45070.patch")) (body . "Palladium Generated Data Pipeline Job Creation For occ-emlresponse-runvacuum-emr-datapipeline")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44994") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44994/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44994/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44994/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44994") (id . 277246216) (number . 44994) (title . "Update template.json") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-28T03:27:27Z") (updated_at . "2017-11-28T03:27:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44994") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44994") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44994.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44994.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44976") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44976/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44976/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44976/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44976") (id . 277122274) (number . 44976) (title . "Palladium Generated Chef Role Deletion For cruise-content-extraction") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T18:33:53Z") (updated_at . "2017-11-27T18:33:53Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44976") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44976") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44976.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44976.patch")) (body . "Palladium Generated Chef Role Deletion For cruise-content-extraction")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44975") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44975/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44975/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44975/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44975") (id . 277121964) (number . 44975) (title . "Palladium Generated Chef Role Deletion For cruise-content-extraction") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T18:32:43Z") (updated_at . "2017-11-27T18:32:43Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44975") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44975") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44975.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44975.patch")) (body . "Palladium Generated Chef Role Deletion For cruise-content-extraction")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44974") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44974/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44974/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44974/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44974") (id . 277121623) (number . 44974) (title . "Palladium Generated Chef Role Deletion For cruise-content-extraction") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-27T18:31:33Z") (updated_at . "2017-11-27T18:31:33Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44974") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44974") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44974.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44974.patch")) (body . "Palladium Generated Chef Role Deletion For cruise-content-extraction")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44941") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44941/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44941/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44941/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44941") (id . 276423550) (number . 44941) (title . "Palladium Generated Chef Role Creation For wsu-mdube-test") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-23T16:06:27Z") (updated_at . "2017-11-23T16:06:27Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44941") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44941") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44941.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44941.patch")) (body . "Palladium Generated Chef Role Creation For wsu-mdube-test")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44940") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44940/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44940/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44940/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44940") (id . 276423239) (number . 44940) (title . "Palladium Generated Chef Role Creation For wsu-mdube-test") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-23T16:05:15Z") (updated_at . "2017-11-23T16:05:15Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44940") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44940") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44940.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44940.patch")) (body . "Palladium Generated Chef Role Creation For wsu-mdube-test")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44939") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44939/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44939/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44939/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44939") (id . 276422951) (number . 44939) (title . "Palladium Generated Chef Role Creation For wsu-mdube-test") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-23T16:04:02Z") (updated_at . "2017-11-23T16:04:02Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44939") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44939") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44939.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44939.patch")) (body . "Palladium Generated Chef Role Creation For wsu-mdube-test")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44922") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44922/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44922/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44922/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44922") (id . 276224096) (number . 44922) (title . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:42:38Z") (updated_at . "2017-11-22T22:42:38Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44922") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44922") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44922.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44922.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44921") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44921/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44921/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44921/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44921") (id . 276224029) (number . 44921) (title . "Palladium Generated Chef Role Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:42:19Z") (updated_at . "2017-11-22T22:42:19Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44921") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44921") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44921.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44921.patch")) (body . "Palladium Generated Chef Role Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44920") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44920/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44920/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44920/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44920") (id . 276223632) (number . 44920) (title . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:40:19Z") (updated_at . "2017-11-22T22:40:19Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44920") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44920") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44920.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44920.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44919") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44919/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44919/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44919/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44919") (id . 276223576) (number . 44919) (title . "Palladium Generated Chef Role Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:39:59Z") (updated_at . "2017-11-22T22:39:59Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44919") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44919") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44919.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44919.patch")) (body . "Palladium Generated Chef Role Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44918") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44918/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44918/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44918/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44918") (id . 276223382) (number . 44918) (title . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:39:01Z") (updated_at . "2017-11-22T22:39:01Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44918") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44918") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44918.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44918.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44917") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44917/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44917/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44917/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44917") (id . 276223358) (number . 44917) (title . "Palladium Generated Chef Role Deletion For expedia-demos") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T22:38:50Z") (updated_at . "2017-11-22T22:38:50Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44917") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44917") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44917.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44917.patch")) (body . "Palladium Generated Chef Role Deletion For expedia-demos")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44880") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44880/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44880/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44880/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44880") (id . 275903634) (number . 44880) (title . "Palladium Generated Data Pipeline Job Deletion For robw-test") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:16:13Z") (updated_at . "2017-11-22T00:16:13Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44880") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44880") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44880.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44880.patch")) (body . "Palladium Generated Data Pipeline Job Deletion For robw-test")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44879") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44879/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44879/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44879/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44879") (id . 275903349) (number . 44879) (title . "Palladium Generated Data Pipeline Job Deletion For robw-test") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:14:37Z") (updated_at . "2017-11-22T00:14:37Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44879") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44879") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44879.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44879.patch")) (body . "Palladium Generated Data Pipeline Job Deletion For robw-test")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44878") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44878/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44878/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44878/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44878") (id . 275902316) (number . 44878) (title . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:08:30Z") (updated_at . "2017-11-22T00:08:30Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44878") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44878") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44878.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44878.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44877") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44877/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44877/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44877/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44877") (id . 275902290) (number . 44877) (title . "Palladium Generated Chef Role Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:08:22Z") (updated_at . "2017-11-22T00:08:22Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44877") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44877") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44877.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44877.patch")) (body . "Palladium Generated Chef Role Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44876") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44876/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44876/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44876/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44876") (id . 275902086) (number . 44876) (title . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:07:12Z") (updated_at . "2017-11-22T00:07:12Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44876") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44876") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44876.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44876.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44875") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44875/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44875/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44875/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44875") (id . 275902083) (number . 44875) (title . "Palladium Generated Chef Role Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:07:12Z") (updated_at . "2017-11-22T00:07:12Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44875") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44875") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44875.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44875.patch")) (body . "Palladium Generated Chef Role Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44874") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44874/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44874/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44874/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44874") (id . 275901945) (number . 44874) (title . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:06:13Z") (updated_at . "2017-11-22T00:06:13Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44874") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44874") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44874.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44874.patch")) (body . "Palladium Generated Chef Site Cookbook Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44873") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44873/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44873/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44873/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44873") (id . 275901901) (number . 44873) (title . "Palladium Generated Chef Role Deletion For jd-test-python") (user (login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T00:06:01Z") (updated_at . "2017-11-22T00:06:01Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44873") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44873") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44873.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44873.patch")) (body . "Palladium Generated Chef Role Deletion For jd-test-python")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44698") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44698/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44698/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44698/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44698") (id . 274302022) (number . 44698) (title . "remove stable environment since its not used in aws") (user (login . "anwoolterton") (id . 3848023) (avatar_url . "https://avatars0.githubusercontent.com/u/3848023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anwoolterton") (html_url . "https://github.com/anwoolterton") (followers_url . "https://api.github.com/users/anwoolterton/followers") (following_url . "https://api.github.com/users/anwoolterton/following{/other_user}") (gists_url . "https://api.github.com/users/anwoolterton/gists{/gist_id}") (starred_url . "https://api.github.com/users/anwoolterton/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anwoolterton/subscriptions") (organizations_url . "https://api.github.com/users/anwoolterton/orgs") (repos_url . "https://api.github.com/users/anwoolterton/repos") (events_url . "https://api.github.com/users/anwoolterton/events{/privacy}") (received_events_url . "https://api.github.com/users/anwoolterton/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-15T20:58:11Z") (updated_at . "2017-11-15T20:58:11Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44698") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44698") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44698.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44698.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44635") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44635/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44635/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44635/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44635") (id . 273648916) (number . 44635) (title . "Revert \"update repo list\"") (user (login . "v-janchen") (id . 7122071) (avatar_url . "https://avatars1.githubusercontent.com/u/7122071?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-janchen") (html_url . "https://github.com/v-janchen") (followers_url . "https://api.github.com/users/v-janchen/followers") (following_url . "https://api.github.com/users/v-janchen/following{/other_user}") (gists_url . "https://api.github.com/users/v-janchen/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-janchen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-janchen/subscriptions") (organizations_url . "https://api.github.com/users/v-janchen/orgs") (repos_url . "https://api.github.com/users/v-janchen/repos") (events_url . "https://api.github.com/users/v-janchen/events{/privacy}") (received_events_url . "https://api.github.com/users/v-janchen/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-14T02:42:55Z") (updated_at . "2017-11-14T02:42:55Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44635") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44635") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44635.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44635.patch")) (body . "Reverts ExpediaInc/exp-devops#44633")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44490") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44490/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44490/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44490/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44490") (id . 271745441) (number . 44490) (title . "Update server.rb") (user (login . "exp-rbhagat") (id . 13133296) (avatar_url . "https://avatars3.githubusercontent.com/u/13133296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-rbhagat") (html_url . "https://github.com/exp-rbhagat") (followers_url . "https://api.github.com/users/exp-rbhagat/followers") (following_url . "https://api.github.com/users/exp-rbhagat/following{/other_user}") (gists_url . "https://api.github.com/users/exp-rbhagat/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-rbhagat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-rbhagat/subscriptions") (organizations_url . "https://api.github.com/users/exp-rbhagat/orgs") (repos_url . "https://api.github.com/users/exp-rbhagat/repos") (events_url . "https://api.github.com/users/exp-rbhagat/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-rbhagat/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-07T08:24:44Z") (updated_at . "2017-11-07T08:24:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44490") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44490") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44490.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44490.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44456") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44456/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44456/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44456/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44456") (id . 271504111) (number . 44456) (title . "Add LCEmailBot cookbook - Split ec2 and lcemailbot attributes") (user (login . "julieta-salvado-expedia") (id . 29803127) (avatar_url . "https://avatars2.githubusercontent.com/u/29803127?v=4") (gravatar_id . "") (url . "https://api.github.com/users/julieta-salvado-expedia") (html_url . "https://github.com/julieta-salvado-expedia") (followers_url . "https://api.github.com/users/julieta-salvado-expedia/followers") (following_url . "https://api.github.com/users/julieta-salvado-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/julieta-salvado-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/julieta-salvado-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/julieta-salvado-expedia/subscriptions") (organizations_url . "https://api.github.com/users/julieta-salvado-expedia/orgs") (repos_url . "https://api.github.com/users/julieta-salvado-expedia/repos") (events_url . "https://api.github.com/users/julieta-salvado-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/julieta-salvado-expedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-06T14:59:13Z") (updated_at . "2017-11-06T15:07:10Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44456") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44456") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44456.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44456.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44338") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44338/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44338/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44338/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44338") (id . 270497489) (number . 44338) (title . "Added FareTagsInRecordAttribute for Mystifly") (user (login . "shpathak") (id . 8323299) (avatar_url . "https://avatars0.githubusercontent.com/u/8323299?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shpathak") (html_url . "https://github.com/shpathak") (followers_url . "https://api.github.com/users/shpathak/followers") (following_url . "https://api.github.com/users/shpathak/following{/other_user}") (gists_url . "https://api.github.com/users/shpathak/gists{/gist_id}") (starred_url . "https://api.github.com/users/shpathak/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shpathak/subscriptions") (organizations_url . "https://api.github.com/users/shpathak/orgs") (repos_url . "https://api.github.com/users/shpathak/repos") (events_url . "https://api.github.com/users/shpathak/events{/privacy}") (received_events_url . "https://api.github.com/users/shpathak/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-02T00:42:35Z") (updated_at . "2017-11-02T00:42:35Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44338") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44338") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44338.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44338.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44318") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44318/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44318/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44318/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44318") (id . 270202416) (number . 44318) (title . "Revert removing airline check for feature config for amadeus bookings") (user (login . "jsthink") (id . 6924874) (avatar_url . "https://avatars1.githubusercontent.com/u/6924874?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jsthink") (html_url . "https://github.com/jsthink") (followers_url . "https://api.github.com/users/jsthink/followers") (following_url . "https://api.github.com/users/jsthink/following{/other_user}") (gists_url . "https://api.github.com/users/jsthink/gists{/gist_id}") (starred_url . "https://api.github.com/users/jsthink/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jsthink/subscriptions") (organizations_url . "https://api.github.com/users/jsthink/orgs") (repos_url . "https://api.github.com/users/jsthink/repos") (events_url . "https://api.github.com/users/jsthink/events{/privacy}") (received_events_url . "https://api.github.com/users/jsthink/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-01T05:54:39Z") (updated_at . "2017-11-01T05:55:07Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44318") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44318") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44318.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44318.patch")) (body . "Revert the following PR:
- Removing airline check for feature config for amadeus bookings
https://github.com/ExpediaInc/exp-devops/pull/44261")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44306") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44306/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44306/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44306/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44306") (id . 270043783) (number . 44306) (title . "Xpresso IAM Role updated for EWETest") (user (login . "BradleyClifford") (id . 25250652) (avatar_url . "https://avatars2.githubusercontent.com/u/25250652?v=4") (gravatar_id . "") (url . "https://api.github.com/users/BradleyClifford") (html_url . "https://github.com/BradleyClifford") (followers_url . "https://api.github.com/users/BradleyClifford/followers") (following_url . "https://api.github.com/users/BradleyClifford/following{/other_user}") (gists_url . "https://api.github.com/users/BradleyClifford/gists{/gist_id}") (starred_url . "https://api.github.com/users/BradleyClifford/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/BradleyClifford/subscriptions") (organizations_url . "https://api.github.com/users/BradleyClifford/orgs") (repos_url . "https://api.github.com/users/BradleyClifford/repos") (events_url . "https://api.github.com/users/BradleyClifford/events{/privacy}") (received_events_url . "https://api.github.com/users/BradleyClifford/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-31T17:14:27Z") (updated_at . "2017-10-31T17:14:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44306") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44306") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44306.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44306.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44226") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44226/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44226/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44226/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44226") (id . 269363599) (number . 44226) (title . "updated to proper bucket") (user (login . "kkunaparaju") (id . 15147723) (avatar_url . "https://avatars3.githubusercontent.com/u/15147723?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkunaparaju") (html_url . "https://github.com/kkunaparaju") (followers_url . "https://api.github.com/users/kkunaparaju/followers") (following_url . "https://api.github.com/users/kkunaparaju/following{/other_user}") (gists_url . "https://api.github.com/users/kkunaparaju/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkunaparaju/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkunaparaju/subscriptions") (organizations_url . "https://api.github.com/users/kkunaparaju/orgs") (repos_url . "https://api.github.com/users/kkunaparaju/repos") (events_url . "https://api.github.com/users/kkunaparaju/events{/privacy}") (received_events_url . "https://api.github.com/users/kkunaparaju/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-29T01:35:19Z") (updated_at . "2017-10-30T15:53:31Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44226") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44226") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44226.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44226.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44188") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44188/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44188/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44188/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/44188") (id . 269189725) (number . 44188) (title . "Update S3 Bucket for GCO") (user (login . "perrydillard") (id . 15878356) (avatar_url . "https://avatars3.githubusercontent.com/u/15878356?v=4") (gravatar_id . "") (url . "https://api.github.com/users/perrydillard") (html_url . "https://github.com/perrydillard") (followers_url . "https://api.github.com/users/perrydillard/followers") (following_url . "https://api.github.com/users/perrydillard/following{/other_user}") (gists_url . "https://api.github.com/users/perrydillard/gists{/gist_id}") (starred_url . "https://api.github.com/users/perrydillard/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/perrydillard/subscriptions") (organizations_url . "https://api.github.com/users/perrydillard/orgs") (repos_url . "https://api.github.com/users/perrydillard/repos") (events_url . "https://api.github.com/users/perrydillard/events{/privacy}") (received_events_url . "https://api.github.com/users/perrydillard/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "perrydillard") (id . 15878356) (avatar_url . "https://avatars3.githubusercontent.com/u/15878356?v=4") (gravatar_id . "") (url . "https://api.github.com/users/perrydillard") (html_url . "https://github.com/perrydillard") (followers_url . "https://api.github.com/users/perrydillard/followers") (following_url . "https://api.github.com/users/perrydillard/following{/other_user}") (gists_url . "https://api.github.com/users/perrydillard/gists{/gist_id}") (starred_url . "https://api.github.com/users/perrydillard/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/perrydillard/subscriptions") (organizations_url . "https://api.github.com/users/perrydillard/orgs") (repos_url . "https://api.github.com/users/perrydillard/repos") (events_url . "https://api.github.com/users/perrydillard/events{/privacy}") (received_events_url . "https://api.github.com/users/perrydillard/received_events") (type . "User") (site_admin)) (assignees ((login . "perrydillard") (id . 15878356) (avatar_url . "https://avatars3.githubusercontent.com/u/15878356?v=4") (gravatar_id . "") (url . "https://api.github.com/users/perrydillard") (html_url . "https://github.com/perrydillard") (followers_url . "https://api.github.com/users/perrydillard/followers") (following_url . "https://api.github.com/users/perrydillard/following{/other_user}") (gists_url . "https://api.github.com/users/perrydillard/gists{/gist_id}") (starred_url . "https://api.github.com/users/perrydillard/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/perrydillard/subscriptions") (organizations_url . "https://api.github.com/users/perrydillard/orgs") (repos_url . "https://api.github.com/users/perrydillard/repos") (events_url . "https://api.github.com/users/perrydillard/events{/privacy}") (received_events_url . "https://api.github.com/users/perrydillard/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-10-27T18:05:23Z") (updated_at . "2017-10-27T18:05:30Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Now that we have an S3 bucket in our lab environment we need to update the env.yml to reflect this.

chef-repo/aws/lambda_config/gco-sbx/us-west-2/env.yml")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44187") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44187/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44187/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44187/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44187") (id . 269173519) (number . 44187) (title . "changes for 28,61,62") (user (login . "mrajendran79") (id . 28869764) (avatar_url . "https://avatars0.githubusercontent.com/u/28869764?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mrajendran79") (html_url . "https://github.com/mrajendran79") (followers_url . "https://api.github.com/users/mrajendran79/followers") (following_url . "https://api.github.com/users/mrajendran79/following{/other_user}") (gists_url . "https://api.github.com/users/mrajendran79/gists{/gist_id}") (starred_url . "https://api.github.com/users/mrajendran79/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mrajendran79/subscriptions") (organizations_url . "https://api.github.com/users/mrajendran79/orgs") (repos_url . "https://api.github.com/users/mrajendran79/repos") (events_url . "https://api.github.com/users/mrajendran79/events{/privacy}") (received_events_url . "https://api.github.com/users/mrajendran79/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-27T17:02:36Z") (updated_at . "2017-10-31T15:15:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44187") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44187") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44187.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44187.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44021") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44021/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44021/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44021/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44021") (id . 266525513) (number . 44021) (title . "adding logging") (user (login . "mchandramouli") (id . 148128) (avatar_url . "https://avatars2.githubusercontent.com/u/148128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mchandramouli") (html_url . "https://github.com/mchandramouli") (followers_url . "https://api.github.com/users/mchandramouli/followers") (following_url . "https://api.github.com/users/mchandramouli/following{/other_user}") (gists_url . "https://api.github.com/users/mchandramouli/gists{/gist_id}") (starred_url . "https://api.github.com/users/mchandramouli/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mchandramouli/subscriptions") (organizations_url . "https://api.github.com/users/mchandramouli/orgs") (repos_url . "https://api.github.com/users/mchandramouli/repos") (events_url . "https://api.github.com/users/mchandramouli/events{/privacy}") (received_events_url . "https://api.github.com/users/mchandramouli/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-18T14:57:39Z") (updated_at . "2017-10-18T14:57:39Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44021") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44021") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44021.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44021.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44018") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44018/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44018/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/44018/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44018") (id . 266508448) (number . 44018) (title . "[Offer Service] Increase nova heap memory") (user (login . "mtarjanyi") (id . 20453491) (avatar_url . "https://avatars2.githubusercontent.com/u/20453491?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mtarjanyi") (html_url . "https://github.com/mtarjanyi") (followers_url . "https://api.github.com/users/mtarjanyi/followers") (following_url . "https://api.github.com/users/mtarjanyi/following{/other_user}") (gists_url . "https://api.github.com/users/mtarjanyi/gists{/gist_id}") (starred_url . "https://api.github.com/users/mtarjanyi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mtarjanyi/subscriptions") (organizations_url . "https://api.github.com/users/mtarjanyi/orgs") (repos_url . "https://api.github.com/users/mtarjanyi/repos") (events_url . "https://api.github.com/users/mtarjanyi/events{/privacy}") (received_events_url . "https://api.github.com/users/mtarjanyi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-18T14:12:01Z") (updated_at . "2017-10-18T14:12:01Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/44018") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/44018") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/44018.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/44018.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43984") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43984/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43984/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43984/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43984") (id . 266209606) (number . 43984) (title . "Revert \"Password update gmanzo\"") (user (login . "guillermomanzo") (id . 19312468) (avatar_url . "https://avatars0.githubusercontent.com/u/19312468?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guillermomanzo") (html_url . "https://github.com/guillermomanzo") (followers_url . "https://api.github.com/users/guillermomanzo/followers") (following_url . "https://api.github.com/users/guillermomanzo/following{/other_user}") (gists_url . "https://api.github.com/users/guillermomanzo/gists{/gist_id}") (starred_url . "https://api.github.com/users/guillermomanzo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guillermomanzo/subscriptions") (organizations_url . "https://api.github.com/users/guillermomanzo/orgs") (repos_url . "https://api.github.com/users/guillermomanzo/repos") (events_url . "https://api.github.com/users/guillermomanzo/events{/privacy}") (received_events_url . "https://api.github.com/users/guillermomanzo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-17T17:16:56Z") (updated_at . "2017-10-17T17:16:56Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43984") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43984") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43984.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43984.patch")) (body . "Reverts ExpediaInc/exp-devops#43982")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43937") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43937/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43937/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43937/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43937") (id . 265851171) (number . 43937) (title . "Changing tomcat default to 8.5.11. Versions below this would show tom…") (user (login . "Derikulous") (id . 4932623) (avatar_url . "https://avatars2.githubusercontent.com/u/4932623?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Derikulous") (html_url . "https://github.com/Derikulous") (followers_url . "https://api.github.com/users/Derikulous/followers") (following_url . "https://api.github.com/users/Derikulous/following{/other_user}") (gists_url . "https://api.github.com/users/Derikulous/gists{/gist_id}") (starred_url . "https://api.github.com/users/Derikulous/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Derikulous/subscriptions") (organizations_url . "https://api.github.com/users/Derikulous/orgs") (repos_url . "https://api.github.com/users/Derikulous/repos") (events_url . "https://api.github.com/users/Derikulous/events{/privacy}") (received_events_url . "https://api.github.com/users/Derikulous/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-16T17:31:02Z") (updated_at . "2017-10-16T17:31:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43937") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43937") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43937.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43937.patch")) (body . "…cat version on error pages")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43780") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43780/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43780/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43780/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43780") (id . 264156266) (number . 43780) (title . "including generic expedia certs into java keystore before deployment") (user (login . "EXPEkarasingh") (id . 19822089) (avatar_url . "https://avatars1.githubusercontent.com/u/19822089?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEkarasingh") (html_url . "https://github.com/EXPEkarasingh") (followers_url . "https://api.github.com/users/EXPEkarasingh/followers") (following_url . "https://api.github.com/users/EXPEkarasingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEkarasingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEkarasingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEkarasingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEkarasingh/orgs") (repos_url . "https://api.github.com/users/EXPEkarasingh/repos") (events_url . "https://api.github.com/users/EXPEkarasingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEkarasingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-10T09:22:20Z") (updated_at . "2017-10-10T09:22:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43780") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43780") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43780.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43780.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43761") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43761/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43761/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43761/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43761") (id . 263996893) (number . 43761) (title . "fix the jdk_home var") (user (login . "EXPEkarasingh") (id . 19822089) (avatar_url . "https://avatars1.githubusercontent.com/u/19822089?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEkarasingh") (html_url . "https://github.com/EXPEkarasingh") (followers_url . "https://api.github.com/users/EXPEkarasingh/followers") (following_url . "https://api.github.com/users/EXPEkarasingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEkarasingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEkarasingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEkarasingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEkarasingh/orgs") (repos_url . "https://api.github.com/users/EXPEkarasingh/repos") (events_url . "https://api.github.com/users/EXPEkarasingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEkarasingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-09T19:09:18Z") (updated_at . "2017-10-09T19:13:34Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43761") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43761") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43761.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43761.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43485") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43485/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43485/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43485/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43485") (id . 261455848) (number . 43485) (title . "renamed widgets in lambda dashboard") (user (login . "EXPEpbollu") (id . 31772060) (avatar_url . "https://avatars0.githubusercontent.com/u/31772060?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpbollu") (html_url . "https://github.com/EXPEpbollu") (followers_url . "https://api.github.com/users/EXPEpbollu/followers") (following_url . "https://api.github.com/users/EXPEpbollu/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpbollu/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpbollu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpbollu/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpbollu/orgs") (repos_url . "https://api.github.com/users/EXPEpbollu/repos") (events_url . "https://api.github.com/users/EXPEpbollu/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpbollu/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-28T20:47:30Z") (updated_at . "2017-09-28T20:49:40Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43485") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43485") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43485.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43485.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43393") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43393/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43393/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43393/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43393") (id . 260387110) (number . 43393) (title . "Update user service hotwire config") (user (login . "juchuang") (id . 20076965) (avatar_url . "https://avatars3.githubusercontent.com/u/20076965?v=4") (gravatar_id . "") (url . "https://api.github.com/users/juchuang") (html_url . "https://github.com/juchuang") (followers_url . "https://api.github.com/users/juchuang/followers") (following_url . "https://api.github.com/users/juchuang/following{/other_user}") (gists_url . "https://api.github.com/users/juchuang/gists{/gist_id}") (starred_url . "https://api.github.com/users/juchuang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/juchuang/subscriptions") (organizations_url . "https://api.github.com/users/juchuang/orgs") (repos_url . "https://api.github.com/users/juchuang/repos") (events_url . "https://api.github.com/users/juchuang/events{/privacy}") (received_events_url . "https://api.github.com/users/juchuang/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-25T19:22:53Z") (updated_at . "2017-09-25T19:22:53Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43393") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43393") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43393.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43393.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43265") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43265/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43265/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43265/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43265") (id . 258683756) (number . 43265) (title . "removing 8080 and 8443 from extra_port checking") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-19T03:19:22Z") (updated_at . "2017-09-20T04:42:00Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43265") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43265") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43265.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43265.patch")) (body . "allowing 8080 and 8443 port as part of extra_port mapping ")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43207") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43207/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43207/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43207/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43207") (id . 258356257) (number . 43207) (title . "adding jenkins log parser") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-18T02:27:17Z") (updated_at . "2017-09-20T05:31:57Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43207") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43207") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43207.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43207.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43073") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43073/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43073/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/43073/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43073") (id . 257533408) (number . 43073) (title . "EWEACT-184: added instance fleet for core instances") (user (login . "mbilenkis") (id . 28301) (avatar_url . "https://avatars0.githubusercontent.com/u/28301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mbilenkis") (html_url . "https://github.com/mbilenkis") (followers_url . "https://api.github.com/users/mbilenkis/followers") (following_url . "https://api.github.com/users/mbilenkis/following{/other_user}") (gists_url . "https://api.github.com/users/mbilenkis/gists{/gist_id}") (starred_url . "https://api.github.com/users/mbilenkis/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mbilenkis/subscriptions") (organizations_url . "https://api.github.com/users/mbilenkis/orgs") (repos_url . "https://api.github.com/users/mbilenkis/repos") (events_url . "https://api.github.com/users/mbilenkis/events{/privacy}") (received_events_url . "https://api.github.com/users/mbilenkis/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-13T21:56:15Z") (updated_at . "2017-09-21T15:27:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/43073") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/43073") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/43073.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/43073.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42996") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42996/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42996/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42996/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42996") (id . 256971450) (number . 42996) (title . "Update ewedr.rb for gulfstream-payment-fee-service") (user (login . "v-presingh") (id . 8372697) (avatar_url . "https://avatars3.githubusercontent.com/u/8372697?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-presingh") (html_url . "https://github.com/v-presingh") (followers_url . "https://api.github.com/users/v-presingh/followers") (following_url . "https://api.github.com/users/v-presingh/following{/other_user}") (gists_url . "https://api.github.com/users/v-presingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-presingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-presingh/subscriptions") (organizations_url . "https://api.github.com/users/v-presingh/orgs") (repos_url . "https://api.github.com/users/v-presingh/repos") (events_url . "https://api.github.com/users/v-presingh/events{/privacy}") (received_events_url . "https://api.github.com/users/v-presingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-12T09:10:04Z") (updated_at . "2017-09-12T09:11:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42996") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42996") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42996.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42996.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42922") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42922/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42922/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42922/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42922") (id . 256287863) (number . 42922) (title . "Change in dept and role") (user (login . "pprasannakumar") (id . 17292996) (avatar_url . "https://avatars0.githubusercontent.com/u/17292996?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pprasannakumar") (html_url . "https://github.com/pprasannakumar") (followers_url . "https://api.github.com/users/pprasannakumar/followers") (following_url . "https://api.github.com/users/pprasannakumar/following{/other_user}") (gists_url . "https://api.github.com/users/pprasannakumar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pprasannakumar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pprasannakumar/subscriptions") (organizations_url . "https://api.github.com/users/pprasannakumar/orgs") (repos_url . "https://api.github.com/users/pprasannakumar/repos") (events_url . "https://api.github.com/users/pprasannakumar/events{/privacy}") (received_events_url . "https://api.github.com/users/pprasannakumar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-08T15:20:38Z") (updated_at . "2017-09-08T15:20:38Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42922") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42922") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42922.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42922.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42846") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42846/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42846/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42846/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42846") (id . 255790191) (number . 42846) (title . "fix the syntax") (user (login . "vasanthsubram") (id . 8943055) (avatar_url . "https://avatars0.githubusercontent.com/u/8943055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthsubram") (html_url . "https://github.com/vasanthsubram") (followers_url . "https://api.github.com/users/vasanthsubram/followers") (following_url . "https://api.github.com/users/vasanthsubram/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthsubram/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthsubram/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthsubram/subscriptions") (organizations_url . "https://api.github.com/users/vasanthsubram/orgs") (repos_url . "https://api.github.com/users/vasanthsubram/repos") (events_url . "https://api.github.com/users/vasanthsubram/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthsubram/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-07T01:46:27Z") (updated_at . "2017-09-07T01:46:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42846") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42846") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42846.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42846.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42737") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42737/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42737/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42737/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42737") (id . 254661831) (number . 42737) (title . "Updates") (user (login . "npereiraexpedia") (id . 16762021) (avatar_url . "https://avatars1.githubusercontent.com/u/16762021?v=4") (gravatar_id . "") (url . "https://api.github.com/users/npereiraexpedia") (html_url . "https://github.com/npereiraexpedia") (followers_url . "https://api.github.com/users/npereiraexpedia/followers") (following_url . "https://api.github.com/users/npereiraexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/npereiraexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/npereiraexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/npereiraexpedia/subscriptions") (organizations_url . "https://api.github.com/users/npereiraexpedia/orgs") (repos_url . "https://api.github.com/users/npereiraexpedia/repos") (events_url . "https://api.github.com/users/npereiraexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/npereiraexpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-01T14:41:04Z") (updated_at . "2017-09-01T14:41:04Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42737") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42737") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42737.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42737.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42723") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42723/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42723/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42723/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42723") (id . 254537623) (number . 42723) (title . "Dt kibana method") (user (login . "danielletran") (id . 11713332) (avatar_url . "https://avatars1.githubusercontent.com/u/11713332?v=4") (gravatar_id . "") (url . "https://api.github.com/users/danielletran") (html_url . "https://github.com/danielletran") (followers_url . "https://api.github.com/users/danielletran/followers") (following_url . "https://api.github.com/users/danielletran/following{/other_user}") (gists_url . "https://api.github.com/users/danielletran/gists{/gist_id}") (starred_url . "https://api.github.com/users/danielletran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/danielletran/subscriptions") (organizations_url . "https://api.github.com/users/danielletran/orgs") (repos_url . "https://api.github.com/users/danielletran/repos") (events_url . "https://api.github.com/users/danielletran/events{/privacy}") (received_events_url . "https://api.github.com/users/danielletran/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-01T05:10:56Z") (updated_at . "2017-09-01T05:10:56Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42723") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42723") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42723.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42723.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42648") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42648/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42648/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42648/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42648") (id . 253875375) (number . 42648) (title . "refactor code and sync environment file") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-30T04:31:30Z") (updated_at . "2017-08-30T04:31:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42648") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42648") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42648.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42648.patch")) (body . "1. syncing environments.rb file from Trinity.
2. refactoring create_elb function.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42608") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42608/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42608/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42608/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42608") (id . 253513902) (number . 42608) (title . "Moving kibana/splunk conditionals to featureswitch") (user (login . "danielletran") (id . 11713332) (avatar_url . "https://avatars1.githubusercontent.com/u/11713332?v=4") (gravatar_id . "") (url . "https://api.github.com/users/danielletran") (html_url . "https://github.com/danielletran") (followers_url . "https://api.github.com/users/danielletran/followers") (following_url . "https://api.github.com/users/danielletran/following{/other_user}") (gists_url . "https://api.github.com/users/danielletran/gists{/gist_id}") (starred_url . "https://api.github.com/users/danielletran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/danielletran/subscriptions") (organizations_url . "https://api.github.com/users/danielletran/orgs") (repos_url . "https://api.github.com/users/danielletran/repos") (events_url . "https://api.github.com/users/danielletran/events{/privacy}") (received_events_url . "https://api.github.com/users/danielletran/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-29T02:52:09Z") (updated_at . "2017-08-29T06:23:16Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42608") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42608") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42608.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42608.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42484") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42484/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42484/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42484/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42484") (id . 252572880) (number . 42484) (title . "moving elb subnets in Separate function function") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-08-24T11:33:52Z") (updated_at . "2017-08-28T14:42:50Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42484") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42484") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42484.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42484.patch")) (body . "1. using Environments class instead of chef_to_exp_env_conv function.
2. moving separate function for elb's subnets
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42441") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42441/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42441/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42441/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42441") (id . 252361386) (number . 42441) (title . "First pass for adding chef_rvm") (user (login . "bartvangeneugden") (id . 3415464) (avatar_url . "https://avatars1.githubusercontent.com/u/3415464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bartvangeneugden") (html_url . "https://github.com/bartvangeneugden") (followers_url . "https://api.github.com/users/bartvangeneugden/followers") (following_url . "https://api.github.com/users/bartvangeneugden/following{/other_user}") (gists_url . "https://api.github.com/users/bartvangeneugden/gists{/gist_id}") (starred_url . "https://api.github.com/users/bartvangeneugden/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bartvangeneugden/subscriptions") (organizations_url . "https://api.github.com/users/bartvangeneugden/orgs") (repos_url . "https://api.github.com/users/bartvangeneugden/repos") (events_url . "https://api.github.com/users/bartvangeneugden/events{/privacy}") (received_events_url . "https://api.github.com/users/bartvangeneugden/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-23T17:38:58Z") (updated_at . "2017-08-23T17:38:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42441") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42441") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42441.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42441.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42414") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42414/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42414/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42414/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42414") (id . 252110164) (number . 42414) (title . "setup ssl cert on the elb for bfs-querymgr int") (user (login . "sakul-kaowvichit") (id . 14897075) (avatar_url . "https://avatars3.githubusercontent.com/u/14897075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sakul-kaowvichit") (html_url . "https://github.com/sakul-kaowvichit") (followers_url . "https://api.github.com/users/sakul-kaowvichit/followers") (following_url . "https://api.github.com/users/sakul-kaowvichit/following{/other_user}") (gists_url . "https://api.github.com/users/sakul-kaowvichit/gists{/gist_id}") (starred_url . "https://api.github.com/users/sakul-kaowvichit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sakul-kaowvichit/subscriptions") (organizations_url . "https://api.github.com/users/sakul-kaowvichit/orgs") (repos_url . "https://api.github.com/users/sakul-kaowvichit/repos") (events_url . "https://api.github.com/users/sakul-kaowvichit/events{/privacy}") (received_events_url . "https://api.github.com/users/sakul-kaowvichit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-22T22:43:14Z") (updated_at . "2017-08-22T22:43:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42414") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42414") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42414.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42414.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42387") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42387/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42387/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42387/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42387") (id . 251790356) (number . 42387) (title . "Loosen version bracketing for platform-diagnostics-blobs cookbook") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-21T22:43:57Z") (updated_at . "2017-08-21T22:43:57Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42387") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42387") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42387.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42387.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42294") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42294/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42294/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42294/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42294") (id . 250909220) (number . 42294) (title . "Update host-loyalty-rabbitmq-aws.rb") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-17T11:14:59Z") (updated_at . "2017-08-17T11:14:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42294") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42294") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42294.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42294.patch")) (body . "Noting override parameters to test clustering through automation")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42286") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42286/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42286/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42286/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42286") (id . 250883173) (number . 42286) (title . "reducing TSS instanceCount for Stress env") (user (login . "EXPElsingla") (id . 14923473) (avatar_url . "https://avatars1.githubusercontent.com/u/14923473?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPElsingla") (html_url . "https://github.com/EXPElsingla") (followers_url . "https://api.github.com/users/EXPElsingla/followers") (following_url . "https://api.github.com/users/EXPElsingla/following{/other_user}") (gists_url . "https://api.github.com/users/EXPElsingla/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPElsingla/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPElsingla/subscriptions") (organizations_url . "https://api.github.com/users/EXPElsingla/orgs") (repos_url . "https://api.github.com/users/EXPElsingla/repos") (events_url . "https://api.github.com/users/EXPElsingla/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPElsingla/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-17T09:31:37Z") (updated_at . "2017-08-17T09:31:37Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42286") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42286") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42286.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42286.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42280") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42280/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42280/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42280/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42280") (id . 250835181) (number . 42280) (title . "Update host-loyalty-rabbitmq-aws.rb") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-17T05:44:06Z") (updated_at . "2017-08-17T05:44:06Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42280") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42280") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42280.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42280.patch")) (body . "adding override attributes to try clustering through automated script")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42046") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42046/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42046/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/42046/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42046") (id . 248633301) (number . 42046) (title . "adding keystore to cookbook") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-08T08:07:21Z") (updated_at . "2017-08-08T08:07:21Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/42046") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/42046") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/42046.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/42046.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41951") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41951/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41951/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41951/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41951") (id . 248072812) (number . 41951) (title . "upgrade java 1.8.0_25 to 1.8.0_131 build") (user (login . "sakul-kaowvichit") (id . 14897075) (avatar_url . "https://avatars3.githubusercontent.com/u/14897075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sakul-kaowvichit") (html_url . "https://github.com/sakul-kaowvichit") (followers_url . "https://api.github.com/users/sakul-kaowvichit/followers") (following_url . "https://api.github.com/users/sakul-kaowvichit/following{/other_user}") (gists_url . "https://api.github.com/users/sakul-kaowvichit/gists{/gist_id}") (starred_url . "https://api.github.com/users/sakul-kaowvichit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sakul-kaowvichit/subscriptions") (organizations_url . "https://api.github.com/users/sakul-kaowvichit/orgs") (repos_url . "https://api.github.com/users/sakul-kaowvichit/repos") (events_url . "https://api.github.com/users/sakul-kaowvichit/events{/privacy}") (received_events_url . "https://api.github.com/users/sakul-kaowvichit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-04T17:46:16Z") (updated_at . "2017-08-04T17:46:16Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41951") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41951") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41951.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41951.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41845") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41845/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41845/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41845/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41845") (id . 247287334) (number . 41845) (title . "Override Levis configuration") (user (login . "antdrums") (id . 2259526) (avatar_url . "https://avatars3.githubusercontent.com/u/2259526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/antdrums") (html_url . "https://github.com/antdrums") (followers_url . "https://api.github.com/users/antdrums/followers") (following_url . "https://api.github.com/users/antdrums/following{/other_user}") (gists_url . "https://api.github.com/users/antdrums/gists{/gist_id}") (starred_url . "https://api.github.com/users/antdrums/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/antdrums/subscriptions") (organizations_url . "https://api.github.com/users/antdrums/orgs") (repos_url . "https://api.github.com/users/antdrums/repos") (events_url . "https://api.github.com/users/antdrums/events{/privacy}") (received_events_url . "https://api.github.com/users/antdrums/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-02T06:36:55Z") (updated_at . "2017-09-01T00:47:47Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41845") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41845") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41845.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41845.patch")) (body . "Allows an override of Levis config from the command line. ")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41601") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41601/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41601/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41601/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41601") (id . 244681385) (number . 41601) (title . "Removing the env vars used by registrator") (user (login . "astewart") (id . 715599) (avatar_url . "https://avatars3.githubusercontent.com/u/715599?v=4") (gravatar_id . "") (url . "https://api.github.com/users/astewart") (html_url . "https://github.com/astewart") (followers_url . "https://api.github.com/users/astewart/followers") (following_url . "https://api.github.com/users/astewart/following{/other_user}") (gists_url . "https://api.github.com/users/astewart/gists{/gist_id}") (starred_url . "https://api.github.com/users/astewart/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/astewart/subscriptions") (organizations_url . "https://api.github.com/users/astewart/orgs") (repos_url . "https://api.github.com/users/astewart/repos") (events_url . "https://api.github.com/users/astewart/events{/privacy}") (received_events_url . "https://api.github.com/users/astewart/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-07-21T14:13:54Z") (updated_at . "2017-11-13T22:05:05Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41601") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41601") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41601.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41601.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41557") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41557/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41557/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41557/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41557") (id . 244299894) (number . 41557) (title . "Update rails projects jvm opts for default encoding") (user (login . "EXPEasinghal") (id . 10918350) (avatar_url . "https://avatars1.githubusercontent.com/u/10918350?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEasinghal") (html_url . "https://github.com/EXPEasinghal") (followers_url . "https://api.github.com/users/EXPEasinghal/followers") (following_url . "https://api.github.com/users/EXPEasinghal/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEasinghal/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEasinghal/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEasinghal/subscriptions") (organizations_url . "https://api.github.com/users/EXPEasinghal/orgs") (repos_url . "https://api.github.com/users/EXPEasinghal/repos") (events_url . "https://api.github.com/users/EXPEasinghal/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEasinghal/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-20T09:31:10Z") (updated_at . "2017-07-20T09:31:10Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41557") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41557") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41557.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41557.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41355") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41355/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41355/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41355/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41355") (id . 242304116) (number . 41355) (title . "Create config.json") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-12T08:47:09Z") (updated_at . "2017-07-12T08:47:09Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41355") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41355") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41355.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41355.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41318") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41318/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41318/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/41318/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41318") (id . 241883366) (number . 41318) (title . "Set up cron job to delete old access files") (user (login . "ttapping333") (id . 7170082) (avatar_url . "https://avatars2.githubusercontent.com/u/7170082?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ttapping333") (html_url . "https://github.com/ttapping333") (followers_url . "https://api.github.com/users/ttapping333/followers") (following_url . "https://api.github.com/users/ttapping333/following{/other_user}") (gists_url . "https://api.github.com/users/ttapping333/gists{/gist_id}") (starred_url . "https://api.github.com/users/ttapping333/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ttapping333/subscriptions") (organizations_url . "https://api.github.com/users/ttapping333/orgs") (repos_url . "https://api.github.com/users/ttapping333/repos") (events_url . "https://api.github.com/users/ttapping333/events{/privacy}") (received_events_url . "https://api.github.com/users/ttapping333/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-10T23:43:14Z") (updated_at . "2017-07-11T17:09:45Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/41318") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/41318") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/41318.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/41318.patch")) (body . "As per  https://stackoverflow.com/questions/2772021/how-to-delete-tomcat-access-log-after-n-days :

- \"Tomcat itself does not do any housekeeping on the old files, the general principle on a Unix system is to have a cron job set up on the system to archive older files into a back up directory and/or delete them.\"
Docs: https://docs.chef.io/resource_cron.html
Expedia references:

- https://github.com/ExpediaInc/exp-devops/blob/dcc43fe8af05fcbeee69726b11da688de07b5426/chef-repo/site-cookbooks/doppler-rollup-reporter/recipes/default.rb

- https://github.com/ExpediaInc/exp-devops/blob/dcc43fe8af05fcbeee69726b11da688de07b5426/chef-repo/site-cookbooks/paandi-past-mongodb/recipes/default.rb


")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40945") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40945/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40945/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40945/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40945") (id . 238673849) (number . 40945) (title . "Deploy Warmup-Slaves on Spot instances.") (user (login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-26T21:23:21Z") (updated_at . "2017-07-07T18:05:11Z") (closed_at) (author_association . "FIRST_TIME_CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40945") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40945") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40945.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40945.patch")) (body . "Corus-node takes an optional parameter (default = 0), SpotPrice. If != 0, launches the instances as SpotInstance. Warmup-Slave sets the SpotPrice to $0.20 (virtually the OnDemand price), to virtually guarantee availability. Availability may be further assured if we choose to change from m4 to m3. Note that small instance type was changed, as the t2.large was always failing to start.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40725") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40725/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40725/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40725/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40725") (id . 236597657) (number . 40725) (title . "Constructicons mongodb creation") (user (login . "narbs91") (id . 29411347) (avatar_url . "https://avatars2.githubusercontent.com/u/29411347?v=4") (gravatar_id . "") (url . "https://api.github.com/users/narbs91") (html_url . "https://github.com/narbs91") (followers_url . "https://api.github.com/users/narbs91/followers") (following_url . "https://api.github.com/users/narbs91/following{/other_user}") (gists_url . "https://api.github.com/users/narbs91/gists{/gist_id}") (starred_url . "https://api.github.com/users/narbs91/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/narbs91/subscriptions") (organizations_url . "https://api.github.com/users/narbs91/orgs") (repos_url . "https://api.github.com/users/narbs91/repos") (events_url . "https://api.github.com/users/narbs91/events{/privacy}") (received_events_url . "https://api.github.com/users/narbs91/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-16T21:12:06Z") (updated_at . "2017-06-16T21:13:01Z") (closed_at) (author_association . "FIRST_TIMER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40725") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40725") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40725.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40725.patch")) (body . "Creation of a mongoDB instance for the Constructicons Hackathon team in the Vancouver, BC Office")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40704") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40704/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40704/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40704/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40704") (id . 236472909) (number . 40704) (title . "Revert \"Kafka instance type support for i3\"") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-16T12:46:46Z") (updated_at . "2017-06-16T12:46:46Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40704") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40704") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40704.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40704.patch")) (body . "Reverts ExpediaInc/exp-devops#40702")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40688") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40688/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40688/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40688/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40688") (id . 236381886) (number . 40688) (title . "adding sleep before ssd mount") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-16T05:14:22Z") (updated_at . "2017-06-16T05:14:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40688") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40688") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40688.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40688.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40570") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40570/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40570/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40570/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40570") (id . 235694121) (number . 40570) (title . "Modified the instance name and added mysql to the cli tools") (user (login . "andreihalici") (id . 1394474) (avatar_url . "https://avatars2.githubusercontent.com/u/1394474?v=4") (gravatar_id . "") (url . "https://api.github.com/users/andreihalici") (html_url . "https://github.com/andreihalici") (followers_url . "https://api.github.com/users/andreihalici/followers") (following_url . "https://api.github.com/users/andreihalici/following{/other_user}") (gists_url . "https://api.github.com/users/andreihalici/gists{/gist_id}") (starred_url . "https://api.github.com/users/andreihalici/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/andreihalici/subscriptions") (organizations_url . "https://api.github.com/users/andreihalici/orgs") (repos_url . "https://api.github.com/users/andreihalici/repos") (events_url . "https://api.github.com/users/andreihalici/events{/privacy}") (received_events_url . "https://api.github.com/users/andreihalici/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-13T21:10:59Z") (updated_at . "2017-06-13T21:10:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40570") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40570") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40570.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40570.patch")) (body . "Modified the instance name and added mysql to the cli tools")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40541") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40541/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40541/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40541/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40541") (id . 235535599) (number . 40541) (title . "Reverted package change as is causing issues in aws") (user (login . "npereiraexpedia") (id . 16762021) (avatar_url . "https://avatars1.githubusercontent.com/u/16762021?v=4") (gravatar_id . "") (url . "https://api.github.com/users/npereiraexpedia") (html_url . "https://github.com/npereiraexpedia") (followers_url . "https://api.github.com/users/npereiraexpedia/followers") (following_url . "https://api.github.com/users/npereiraexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/npereiraexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/npereiraexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/npereiraexpedia/subscriptions") (organizations_url . "https://api.github.com/users/npereiraexpedia/orgs") (repos_url . "https://api.github.com/users/npereiraexpedia/repos") (events_url . "https://api.github.com/users/npereiraexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/npereiraexpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-13T12:23:19Z") (updated_at . "2017-06-13T12:34:29Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40541") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40541") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40541.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40541.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40528") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40528/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40528/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40528/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40528") (id . 235471418) (number . 40528) (title . "changed the AWS secret Key in the databag") (user (login . "exp-rbhagat") (id . 13133296) (avatar_url . "https://avatars3.githubusercontent.com/u/13133296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-rbhagat") (html_url . "https://github.com/exp-rbhagat") (followers_url . "https://api.github.com/users/exp-rbhagat/followers") (following_url . "https://api.github.com/users/exp-rbhagat/following{/other_user}") (gists_url . "https://api.github.com/users/exp-rbhagat/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-rbhagat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-rbhagat/subscriptions") (organizations_url . "https://api.github.com/users/exp-rbhagat/orgs") (repos_url . "https://api.github.com/users/exp-rbhagat/repos") (events_url . "https://api.github.com/users/exp-rbhagat/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-rbhagat/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-13T08:15:27Z") (updated_at . "2017-06-13T08:15:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40528") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40528") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40528.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40528.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40355") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40355/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40355/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40355/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40355") (id . 234064104) (number . 40355) (title . "Add AddPurchaseTaxBreakDownTotal feature flag for AirBoss.") (user (login . "kkktan") (id . 10984992) (avatar_url . "https://avatars0.githubusercontent.com/u/10984992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkktan") (html_url . "https://github.com/kkktan") (followers_url . "https://api.github.com/users/kkktan/followers") (following_url . "https://api.github.com/users/kkktan/following{/other_user}") (gists_url . "https://api.github.com/users/kkktan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkktan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkktan/subscriptions") (organizations_url . "https://api.github.com/users/kkktan/orgs") (repos_url . "https://api.github.com/users/kkktan/repos") (events_url . "https://api.github.com/users/kkktan/events{/privacy}") (received_events_url . "https://api.github.com/users/kkktan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-07T01:00:58Z") (updated_at . "2017-06-07T01:00:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40355") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40355") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40355.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40355.patch")) (body . "Add AddPurchaseTaxBreakDownTotal feature flag to allow TravelFusion to specifically add a specific transaction component (Other - total - specific tax breakdown total)  that is not in other GDSes.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40344") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40344/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40344/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40344/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40344") (id . 233986101) (number . 40344) (title . "rubocop to force a reload to chef") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-06T18:41:20Z") (updated_at . "2017-06-06T18:41:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40344") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40344") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40344.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40344.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40339") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40339/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40339/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40339/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40339") (id . 233969544) (number . 40339) (title . "added sssd.conf from s3") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) (assignees ((login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) ((login . "kumarakom") (id . 5487807) (avatar_url . "https://avatars1.githubusercontent.com/u/5487807?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarakom") (html_url . "https://github.com/kumarakom") (followers_url . "https://api.github.com/users/kumarakom/followers") (following_url . "https://api.github.com/users/kumarakom/following{/other_user}") (gists_url . "https://api.github.com/users/kumarakom/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarakom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarakom/subscriptions") (organizations_url . "https://api.github.com/users/kumarakom/orgs") (repos_url . "https://api.github.com/users/kumarakom/repos") (events_url . "https://api.github.com/users/kumarakom/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarakom/received_events") (type . "User") (site_admin)) ((login . "pedbarbosa") (id . 5567593) (avatar_url . "https://avatars1.githubusercontent.com/u/5567593?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pedbarbosa") (html_url . "https://github.com/pedbarbosa") (followers_url . "https://api.github.com/users/pedbarbosa/followers") (following_url . "https://api.github.com/users/pedbarbosa/following{/other_user}") (gists_url . "https://api.github.com/users/pedbarbosa/gists{/gist_id}") (starred_url . "https://api.github.com/users/pedbarbosa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pedbarbosa/subscriptions") (organizations_url . "https://api.github.com/users/pedbarbosa/orgs") (repos_url . "https://api.github.com/users/pedbarbosa/repos") (events_url . "https://api.github.com/users/pedbarbosa/events{/privacy}") (received_events_url . "https://api.github.com/users/pedbarbosa/received_events") (type . "User") (site_admin)) ((login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin))) (milestone) (comments . 2) (created_at . "2017-06-06T17:38:16Z") (updated_at . "2017-06-15T22:18:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40339") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40339") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40339.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40339.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40213") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40213/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40213/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40213/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40213") (id . 232802867) (number . 40213) (title . "fixing build break") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-06-01T08:30:23Z") (updated_at . "2017-06-01T08:30:23Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40213") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40213") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40213.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40213.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40184") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40184/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40184/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40184/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40184") (id . 232588172) (number . 40184) (title . "Fixing metrics not showing up") (user (login . "abhayjit") (id . 5379853) (avatar_url . "https://avatars0.githubusercontent.com/u/5379853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abhayjit") (html_url . "https://github.com/abhayjit") (followers_url . "https://api.github.com/users/abhayjit/followers") (following_url . "https://api.github.com/users/abhayjit/following{/other_user}") (gists_url . "https://api.github.com/users/abhayjit/gists{/gist_id}") (starred_url . "https://api.github.com/users/abhayjit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abhayjit/subscriptions") (organizations_url . "https://api.github.com/users/abhayjit/orgs") (repos_url . "https://api.github.com/users/abhayjit/repos") (events_url . "https://api.github.com/users/abhayjit/events{/privacy}") (received_events_url . "https://api.github.com/users/abhayjit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-31T14:40:06Z") (updated_at . "2017-06-03T13:24:21Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40184") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40184") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40184.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40184.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40151") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40151/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40151/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40151/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40151") (id . 232409396) (number . 40151) (title . "Keep-Alive for Domain -> Routing connections") (user (login . "DmitriExpedia") (id . 7164276) (avatar_url . "https://avatars3.githubusercontent.com/u/7164276?v=4") (gravatar_id . "") (url . "https://api.github.com/users/DmitriExpedia") (html_url . "https://github.com/DmitriExpedia") (followers_url . "https://api.github.com/users/DmitriExpedia/followers") (following_url . "https://api.github.com/users/DmitriExpedia/following{/other_user}") (gists_url . "https://api.github.com/users/DmitriExpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/DmitriExpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/DmitriExpedia/subscriptions") (organizations_url . "https://api.github.com/users/DmitriExpedia/orgs") (repos_url . "https://api.github.com/users/DmitriExpedia/repos") (events_url . "https://api.github.com/users/DmitriExpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/DmitriExpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-30T23:17:13Z") (updated_at . "2017-05-30T23:17:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40151") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40151") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40151.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40151.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40036") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40036/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40036/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40036/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40036") (id . 231143238) (number . 40036) (title . "Cleanup following creation of Mappings + db-cluster") (user (login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)) (assignees ((login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-05-24T19:15:48Z") (updated_at . "2017-06-14T18:53:45Z") (closed_at) (author_association . "FIRST_TIME_CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40036") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40036") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40036.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40036.patch")) (body . "Cleanup following creation of Mappings + db-cluster")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40032") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40032/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40032/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/40032/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40032") (id . 231116708) (number . 40032) (title . "Update default.rb") (user (login . "EXPEjrajasekaran") (id . 17599263) (avatar_url . "https://avatars0.githubusercontent.com/u/17599263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEjrajasekaran") (html_url . "https://github.com/EXPEjrajasekaran") (followers_url . "https://api.github.com/users/EXPEjrajasekaran/followers") (following_url . "https://api.github.com/users/EXPEjrajasekaran/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEjrajasekaran/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEjrajasekaran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEjrajasekaran/subscriptions") (organizations_url . "https://api.github.com/users/EXPEjrajasekaran/orgs") (repos_url . "https://api.github.com/users/EXPEjrajasekaran/repos") (events_url . "https://api.github.com/users/EXPEjrajasekaran/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEjrajasekaran/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-24T17:35:20Z") (updated_at . "2017-05-24T17:35:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/40032") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/40032") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/40032.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/40032.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39950") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39950/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39950/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39950/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39950") (id . 230547745) (number . 39950) (title . "changing java opts") (user (login . "ttapping333") (id . 7170082) (avatar_url . "https://avatars2.githubusercontent.com/u/7170082?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ttapping333") (html_url . "https://github.com/ttapping333") (followers_url . "https://api.github.com/users/ttapping333/followers") (following_url . "https://api.github.com/users/ttapping333/following{/other_user}") (gists_url . "https://api.github.com/users/ttapping333/gists{/gist_id}") (starred_url . "https://api.github.com/users/ttapping333/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ttapping333/subscriptions") (organizations_url . "https://api.github.com/users/ttapping333/orgs") (repos_url . "https://api.github.com/users/ttapping333/repos") (events_url . "https://api.github.com/users/ttapping333/events{/privacy}") (received_events_url . "https://api.github.com/users/ttapping333/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-22T23:37:02Z") (updated_at . "2017-05-22T23:37:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39950") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39950") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39950.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39950.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39869") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39869/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39869/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39869/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39869") (id . 229862292) (number . 39869) (title . "configs to route amex request to sabre path") (user (login . "bbhuvanadasan") (id . 25220617) (avatar_url . "https://avatars1.githubusercontent.com/u/25220617?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bbhuvanadasan") (html_url . "https://github.com/bbhuvanadasan") (followers_url . "https://api.github.com/users/bbhuvanadasan/followers") (following_url . "https://api.github.com/users/bbhuvanadasan/following{/other_user}") (gists_url . "https://api.github.com/users/bbhuvanadasan/gists{/gist_id}") (starred_url . "https://api.github.com/users/bbhuvanadasan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bbhuvanadasan/subscriptions") (organizations_url . "https://api.github.com/users/bbhuvanadasan/orgs") (repos_url . "https://api.github.com/users/bbhuvanadasan/repos") (events_url . "https://api.github.com/users/bbhuvanadasan/events{/privacy}") (received_events_url . "https://api.github.com/users/bbhuvanadasan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-19T03:35:51Z") (updated_at . "2017-05-19T08:35:51Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39869") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39869") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39869.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39869.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39831") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39831/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39831/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39831/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39831") (id . 229749607) (number . 39831) (title . "Pc2") (user (login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)) (assignees ((login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-05-18T17:32:16Z") (updated_at . "2017-05-18T17:32:31Z") (closed_at) (author_association . "FIRST_TIME_CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39831") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39831") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39831.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39831.patch")) (body . "Creating common geo-mappings template for centralized subnet & related mappings. Simplifies work for switching to multi-AZ deployment.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39589") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39589/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39589/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39589/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39589") (id . 228015983) (number . 39589) (title . "configure DSE product to use https://dse-api-service") (user (login . "htchepannou") (id . 3145222) (avatar_url . "https://avatars2.githubusercontent.com/u/3145222?v=4") (gravatar_id . "") (url . "https://api.github.com/users/htchepannou") (html_url . "https://github.com/htchepannou") (followers_url . "https://api.github.com/users/htchepannou/followers") (following_url . "https://api.github.com/users/htchepannou/following{/other_user}") (gists_url . "https://api.github.com/users/htchepannou/gists{/gist_id}") (starred_url . "https://api.github.com/users/htchepannou/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/htchepannou/subscriptions") (organizations_url . "https://api.github.com/users/htchepannou/orgs") (repos_url . "https://api.github.com/users/htchepannou/repos") (events_url . "https://api.github.com/users/htchepannou/events{/privacy}") (received_events_url . "https://api.github.com/users/htchepannou/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-11T14:42:56Z") (updated_at . "2017-05-11T14:42:56Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39589") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39589") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39589.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39589.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39550") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39550/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39550/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39550/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39550") (id . 227792114) (number . 39550) (title . "removed tcs from aggregation tier") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-10T19:54:41Z") (updated_at . "2017-05-10T20:23:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39550") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39550") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39550.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39550.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39471") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39471/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39471/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39471/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39471") (id . 227193742) (number . 39471) (title . "HPF cookbook") (user (login . "sghosh007") (id . 23222244) (avatar_url . "https://avatars3.githubusercontent.com/u/23222244?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sghosh007") (html_url . "https://github.com/sghosh007") (followers_url . "https://api.github.com/users/sghosh007/followers") (following_url . "https://api.github.com/users/sghosh007/following{/other_user}") (gists_url . "https://api.github.com/users/sghosh007/gists{/gist_id}") (starred_url . "https://api.github.com/users/sghosh007/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sghosh007/subscriptions") (organizations_url . "https://api.github.com/users/sghosh007/orgs") (repos_url . "https://api.github.com/users/sghosh007/repos") (events_url . "https://api.github.com/users/sghosh007/events{/privacy}") (received_events_url . "https://api.github.com/users/sghosh007/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-08T22:28:47Z") (updated_at . "2017-05-08T22:28:47Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39471") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39471") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39471.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39471.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39354") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39354/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39354/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39354/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39354") (id . 226183354) (number . 39354) (title . "Update ews-qe-service.rb") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-04T05:51:15Z") (updated_at . "2017-05-04T05:51:15Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39354") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39354") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39354.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39354.patch")) (body . "JDK version mismatch probably responsible for error with untarring WAR  - unable to open zip file during tomcat start.
Updating it to the one used by jenkins.
If this fixes it, will confirm with dev if this has to be updated as with this PR or jenkins build to be.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39307") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39307/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39307/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39307/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39307") (id . 225849963) (number . 39307) (title . "added install npm in critical css generation to fix the build error") (user (login . "EXPEpaher") (id . 12398894) (avatar_url . "https://avatars0.githubusercontent.com/u/12398894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpaher") (html_url . "https://github.com/EXPEpaher") (followers_url . "https://api.github.com/users/EXPEpaher/followers") (following_url . "https://api.github.com/users/EXPEpaher/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpaher/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpaher/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpaher/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpaher/orgs") (repos_url . "https://api.github.com/users/EXPEpaher/repos") (events_url . "https://api.github.com/users/EXPEpaher/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpaher/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-02T23:28:58Z") (updated_at . "2017-05-02T23:28:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39307") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39307") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39307.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39307.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39217") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39217/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39217/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39217/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39217") (id . 225185383) (number . 39217) (title . "Invicta - rollback http changes") (user (login . "dvelozramirez") (id . 19294800) (avatar_url . "https://avatars1.githubusercontent.com/u/19294800?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dvelozramirez") (html_url . "https://github.com/dvelozramirez") (followers_url . "https://api.github.com/users/dvelozramirez/followers") (following_url . "https://api.github.com/users/dvelozramirez/following{/other_user}") (gists_url . "https://api.github.com/users/dvelozramirez/gists{/gist_id}") (starred_url . "https://api.github.com/users/dvelozramirez/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dvelozramirez/subscriptions") (organizations_url . "https://api.github.com/users/dvelozramirez/orgs") (repos_url . "https://api.github.com/users/dvelozramirez/repos") (events_url . "https://api.github.com/users/dvelozramirez/events{/privacy}") (received_events_url . "https://api.github.com/users/dvelozramirez/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-28T20:30:17Z") (updated_at . "2017-04-28T20:30:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39217") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39217") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39217.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39217.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39167") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39167/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39167/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39167/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39167") (id . 224949314) (number . 39167) (title . "Upgrading splunk version") (user (login . "danielletran") (id . 11713332) (avatar_url . "https://avatars1.githubusercontent.com/u/11713332?v=4") (gravatar_id . "") (url . "https://api.github.com/users/danielletran") (html_url . "https://github.com/danielletran") (followers_url . "https://api.github.com/users/danielletran/followers") (following_url . "https://api.github.com/users/danielletran/following{/other_user}") (gists_url . "https://api.github.com/users/danielletran/gists{/gist_id}") (starred_url . "https://api.github.com/users/danielletran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/danielletran/subscriptions") (organizations_url . "https://api.github.com/users/danielletran/orgs") (repos_url . "https://api.github.com/users/danielletran/repos") (events_url . "https://api.github.com/users/danielletran/events{/privacy}") (received_events_url . "https://api.github.com/users/danielletran/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-04-28T00:33:45Z") (updated_at . "2017-05-02T02:29:28Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39167") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39167") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39167.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39167.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39159") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39159/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39159/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39159/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39159") (id . 224907609) (number . 39159) (title . "remove https config to deploy to prod") (user (login . "dvelozramirez") (id . 19294800) (avatar_url . "https://avatars1.githubusercontent.com/u/19294800?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dvelozramirez") (html_url . "https://github.com/dvelozramirez") (followers_url . "https://api.github.com/users/dvelozramirez/followers") (following_url . "https://api.github.com/users/dvelozramirez/following{/other_user}") (gists_url . "https://api.github.com/users/dvelozramirez/gists{/gist_id}") (starred_url . "https://api.github.com/users/dvelozramirez/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dvelozramirez/subscriptions") (organizations_url . "https://api.github.com/users/dvelozramirez/orgs") (repos_url . "https://api.github.com/users/dvelozramirez/repos") (events_url . "https://api.github.com/users/dvelozramirez/events{/privacy}") (received_events_url . "https://api.github.com/users/dvelozramirez/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-27T20:44:29Z") (updated_at . "2017-04-27T20:44:29Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39159") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39159") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39159.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39159.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39128") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39128/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39128/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39128/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39128") (id . 224700712) (number . 39128) (title . "adding expedia signed needed for new abacus endpoint") (user (login . "ankushjain15") (id . 6978038) (avatar_url . "https://avatars1.githubusercontent.com/u/6978038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankushjain15") (html_url . "https://github.com/ankushjain15") (followers_url . "https://api.github.com/users/ankushjain15/followers") (following_url . "https://api.github.com/users/ankushjain15/following{/other_user}") (gists_url . "https://api.github.com/users/ankushjain15/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankushjain15/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankushjain15/subscriptions") (organizations_url . "https://api.github.com/users/ankushjain15/orgs") (repos_url . "https://api.github.com/users/ankushjain15/repos") (events_url . "https://api.github.com/users/ankushjain15/events{/privacy}") (received_events_url . "https://api.github.com/users/ankushjain15/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-27T07:53:12Z") (updated_at . "2017-04-27T08:24:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39128") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39128") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39128.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39128.patch")) (body . "https://jira.sea.corp.expecn.com/jira/browse/CASSS-5505")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39091") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39091/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39091/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39091/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39091") (id . 224438619) (number . 39091) (title . "Fixing the log rotation") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-26T11:42:01Z") (updated_at . "2017-04-26T11:42:01Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39091") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39091") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39091.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39091.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39066") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39066/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39066/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/39066/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39066") (id . 224232385) (number . 39066) (title . "synced the types with the latest") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin)) (assignees ((login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-04-25T18:32:46Z") (updated_at . "2017-04-25T18:34:39Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/39066") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/39066") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/39066.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/39066.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38993") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38993/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38993/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38993/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38993") (id . 223818593) (number . 38993) (title . "Added Instance type in Test Infrastructure") (user (login . "kamranalinitb") (id . 8807997) (avatar_url . "https://avatars0.githubusercontent.com/u/8807997?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kamranalinitb") (html_url . "https://github.com/kamranalinitb") (followers_url . "https://api.github.com/users/kamranalinitb/followers") (following_url . "https://api.github.com/users/kamranalinitb/following{/other_user}") (gists_url . "https://api.github.com/users/kamranalinitb/gists{/gist_id}") (starred_url . "https://api.github.com/users/kamranalinitb/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kamranalinitb/subscriptions") (organizations_url . "https://api.github.com/users/kamranalinitb/orgs") (repos_url . "https://api.github.com/users/kamranalinitb/repos") (events_url . "https://api.github.com/users/kamranalinitb/events{/privacy}") (received_events_url . "https://api.github.com/users/kamranalinitb/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-24T13:23:24Z") (updated_at . "2017-04-24T15:24:42Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38993") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38993") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38993.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38993.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38808") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38808/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38808/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38808/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38808") (id . 222451077) (number . 38808) (title . "Update default.rb") (user (login . "igellai") (id . 19945789) (avatar_url . "https://avatars2.githubusercontent.com/u/19945789?v=4") (gravatar_id . "") (url . "https://api.github.com/users/igellai") (html_url . "https://github.com/igellai") (followers_url . "https://api.github.com/users/igellai/followers") (following_url . "https://api.github.com/users/igellai/following{/other_user}") (gists_url . "https://api.github.com/users/igellai/gists{/gist_id}") (starred_url . "https://api.github.com/users/igellai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/igellai/subscriptions") (organizations_url . "https://api.github.com/users/igellai/orgs") (repos_url . "https://api.github.com/users/igellai/repos") (events_url . "https://api.github.com/users/igellai/events{/privacy}") (received_events_url . "https://api.github.com/users/igellai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-18T15:15:33Z") (updated_at . "2017-04-18T15:15:33Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38808") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38808") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38808.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38808.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38791") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38791/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38791/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38791/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38791") (id . 222245445) (number . 38791) (title . "removing another instance where we're falling back on ecs cluster con…") (user (login . "jaydee864") (id . 7988064) (avatar_url . "https://avatars2.githubusercontent.com/u/7988064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaydee864") (html_url . "https://github.com/jaydee864") (followers_url . "https://api.github.com/users/jaydee864/followers") (following_url . "https://api.github.com/users/jaydee864/following{/other_user}") (gists_url . "https://api.github.com/users/jaydee864/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaydee864/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaydee864/subscriptions") (organizations_url . "https://api.github.com/users/jaydee864/orgs") (repos_url . "https://api.github.com/users/jaydee864/repos") (events_url . "https://api.github.com/users/jaydee864/events{/privacy}") (received_events_url . "https://api.github.com/users/jaydee864/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-04-17T22:08:44Z") (updated_at . "2017-05-04T05:46:49Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38791") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38791") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38791.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38791.patch")) (body . "…fig json

Branch tester builds:
With valid (default) config, SGs supplied by Levi's: http://trinity.tools.expedia.com/job/ewetest_deploy-docker-ecs_branch-tester/930/console
With invalid config, SG setting in infra json set to empty string: http://trinity.tools.expedia.com/job/ewetest_deploy-docker-ecs_branch-tester/932/console

I'm not sure what I need to do in order to trigger this specific error message. The scenario I tested failed in get_elb_security_groups because config.settings[:elb] and config.settings[:elb][:security_group_ids] were both considered not null. I think this message would only occur if the region/account we attempted to deploy to did not exist in Levi's and the app's own infra json did not supply these values.")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38790") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38790/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38790/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38790/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38790") (id . 222234224) (number . 38790) (title . "Adding logging for c3 ssd drives") (user (login . "gmunisifreddy") (id . 5504246) (avatar_url . "https://avatars0.githubusercontent.com/u/5504246?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gmunisifreddy") (html_url . "https://github.com/gmunisifreddy") (followers_url . "https://api.github.com/users/gmunisifreddy/followers") (following_url . "https://api.github.com/users/gmunisifreddy/following{/other_user}") (gists_url . "https://api.github.com/users/gmunisifreddy/gists{/gist_id}") (starred_url . "https://api.github.com/users/gmunisifreddy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gmunisifreddy/subscriptions") (organizations_url . "https://api.github.com/users/gmunisifreddy/orgs") (repos_url . "https://api.github.com/users/gmunisifreddy/repos") (events_url . "https://api.github.com/users/gmunisifreddy/events{/privacy}") (received_events_url . "https://api.github.com/users/gmunisifreddy/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-17T21:17:25Z") (updated_at . "2017-04-17T21:17:25Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38790") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38790") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38790.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38790.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38708") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38708/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38708/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38708/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38708") (id . 221437629) (number . 38708) (title . "Removing consul registrator support") (user (login . "astewart") (id . 715599) (avatar_url . "https://avatars3.githubusercontent.com/u/715599?v=4") (gravatar_id . "") (url . "https://api.github.com/users/astewart") (html_url . "https://github.com/astewart") (followers_url . "https://api.github.com/users/astewart/followers") (following_url . "https://api.github.com/users/astewart/following{/other_user}") (gists_url . "https://api.github.com/users/astewart/gists{/gist_id}") (starred_url . "https://api.github.com/users/astewart/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/astewart/subscriptions") (organizations_url . "https://api.github.com/users/astewart/orgs") (repos_url . "https://api.github.com/users/astewart/repos") (events_url . "https://api.github.com/users/astewart/events{/privacy}") (received_events_url . "https://api.github.com/users/astewart/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-13T01:57:44Z") (updated_at . "2017-04-13T01:57:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38708") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38708") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38708.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38708.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38551") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38551/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38551/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38551/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38551") (id . 220292159) (number . 38551) (title . "fix the override stack on expweb") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-07T18:26:17Z") (updated_at . "2017-04-07T18:26:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38551") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38551") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38551.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38551.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38491") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38491/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38491/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38491/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38491") (id . 219839964) (number . 38491) (title . "removed rails-web prod configurations from dev-ops") (user (login . "EXPEasinghal") (id . 10918350) (avatar_url . "https://avatars1.githubusercontent.com/u/10918350?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEasinghal") (html_url . "https://github.com/EXPEasinghal") (followers_url . "https://api.github.com/users/EXPEasinghal/followers") (following_url . "https://api.github.com/users/EXPEasinghal/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEasinghal/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEasinghal/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEasinghal/subscriptions") (organizations_url . "https://api.github.com/users/EXPEasinghal/orgs") (repos_url . "https://api.github.com/users/EXPEasinghal/repos") (events_url . "https://api.github.com/users/EXPEasinghal/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEasinghal/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-06T09:36:20Z") (updated_at . "2017-04-06T09:36:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38491") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38491") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38491.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38491.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38447") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38447/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38447/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38447/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38447") (id . 219408379) (number . 38447) (title . "removed not needed jvm parms") (user (login . "sakul-kaowvichit") (id . 14897075) (avatar_url . "https://avatars3.githubusercontent.com/u/14897075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sakul-kaowvichit") (html_url . "https://github.com/sakul-kaowvichit") (followers_url . "https://api.github.com/users/sakul-kaowvichit/followers") (following_url . "https://api.github.com/users/sakul-kaowvichit/following{/other_user}") (gists_url . "https://api.github.com/users/sakul-kaowvichit/gists{/gist_id}") (starred_url . "https://api.github.com/users/sakul-kaowvichit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sakul-kaowvichit/subscriptions") (organizations_url . "https://api.github.com/users/sakul-kaowvichit/orgs") (repos_url . "https://api.github.com/users/sakul-kaowvichit/repos") (events_url . "https://api.github.com/users/sakul-kaowvichit/events{/privacy}") (received_events_url . "https://api.github.com/users/sakul-kaowvichit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-04-04T22:47:14Z") (updated_at . "2017-04-11T21:25:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38447") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38447") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38447.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38447.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38395") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38395/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38395/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38395/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38395") (id . 218977102) (number . 38395) (title . "reverting snapshot id") (user (login . "ragakhar") (id . 12843503) (avatar_url . "https://avatars2.githubusercontent.com/u/12843503?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ragakhar") (html_url . "https://github.com/ragakhar") (followers_url . "https://api.github.com/users/ragakhar/followers") (following_url . "https://api.github.com/users/ragakhar/following{/other_user}") (gists_url . "https://api.github.com/users/ragakhar/gists{/gist_id}") (starred_url . "https://api.github.com/users/ragakhar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ragakhar/subscriptions") (organizations_url . "https://api.github.com/users/ragakhar/orgs") (repos_url . "https://api.github.com/users/ragakhar/repos") (events_url . "https://api.github.com/users/ragakhar/events{/privacy}") (received_events_url . "https://api.github.com/users/ragakhar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-03T15:46:12Z") (updated_at . "2017-04-03T15:46:12Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38395") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38395") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38395.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38395.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38203") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38203/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38203/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38203/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38203") (id . 217659937) (number . 38203) (title . "add new hello-world db cloudformation template") (user (login . "michaelpaquette") (id . 457296) (avatar_url . "https://avatars2.githubusercontent.com/u/457296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelpaquette") (html_url . "https://github.com/michaelpaquette") (followers_url . "https://api.github.com/users/michaelpaquette/followers") (following_url . "https://api.github.com/users/michaelpaquette/following{/other_user}") (gists_url . "https://api.github.com/users/michaelpaquette/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelpaquette/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelpaquette/subscriptions") (organizations_url . "https://api.github.com/users/michaelpaquette/orgs") (repos_url . "https://api.github.com/users/michaelpaquette/repos") (events_url . "https://api.github.com/users/michaelpaquette/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelpaquette/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-28T19:00:29Z") (updated_at . "2017-03-28T19:00:29Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38203") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38203") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38203.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38203.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38193") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38193/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38193/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/38193/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38193") (id . 217583379) (number . 38193) (title . "upped the queu") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-28T14:41:05Z") (updated_at . "2017-03-28T14:41:05Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/38193") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/38193") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/38193.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/38193.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37884") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37884/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37884/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37884/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37884") (id . 214803659) (number . 37884) (title . "adjust write rate for i3s") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-16T18:50:37Z") (updated_at . "2017-03-16T18:50:37Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37884") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37884") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37884.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37884.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37874") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37874/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37874/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37874/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37874") (id . 214621577) (number . 37874) (title . "Updating tags while creating ECS cluster") (user (login . "pmanwatkar") (id . 5390225) (avatar_url . "https://avatars3.githubusercontent.com/u/5390225?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pmanwatkar") (html_url . "https://github.com/pmanwatkar") (followers_url . "https://api.github.com/users/pmanwatkar/followers") (following_url . "https://api.github.com/users/pmanwatkar/following{/other_user}") (gists_url . "https://api.github.com/users/pmanwatkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pmanwatkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pmanwatkar/subscriptions") (organizations_url . "https://api.github.com/users/pmanwatkar/orgs") (repos_url . "https://api.github.com/users/pmanwatkar/repos") (events_url . "https://api.github.com/users/pmanwatkar/events{/privacy}") (received_events_url . "https://api.github.com/users/pmanwatkar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-16T07:43:01Z") (updated_at . "2017-03-17T10:29:09Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37874") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37874") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37874.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37874.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37778") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37778/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37778/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37778/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37778") (id . 213975958) (number . 37778) (title . "Ap healthy hosts count") (user (login . "antdrums") (id . 2259526) (avatar_url . "https://avatars3.githubusercontent.com/u/2259526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/antdrums") (html_url . "https://github.com/antdrums") (followers_url . "https://api.github.com/users/antdrums/followers") (following_url . "https://api.github.com/users/antdrums/following{/other_user}") (gists_url . "https://api.github.com/users/antdrums/gists{/gist_id}") (starred_url . "https://api.github.com/users/antdrums/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/antdrums/subscriptions") (organizations_url . "https://api.github.com/users/antdrums/orgs") (repos_url . "https://api.github.com/users/antdrums/repos") (events_url . "https://api.github.com/users/antdrums/events{/privacy}") (received_events_url . "https://api.github.com/users/antdrums/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-03-14T05:57:31Z") (updated_at . "2017-03-15T03:13:08Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37778") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37778") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37778.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37778.patch")) (body . "If the \"get_elb_health\" flag is set, this code fetches the count of healthy and unhealthy hosts in the ELB. The response looks like this :
```
    \"load_balancers\": [
      {
        \"load_balancer_name\": \"t-r-specimen-sprin-4j9wfz16z3w\",
        \"container_name\": \"specimen-springboot-docker-ecs-service\",
        \"container_port\": 8080,
        \"health\": {
          \"healthy_hosts\": 1,
          \"unhealthy_hosts\": 0
        }
      }
```")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37662") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37662/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37662/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37662/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37662") (id . 212996292) (number . 37662) (title . "removed delivery-pipeline-plugin") (user (login . "exp-rbhagat") (id . 13133296) (avatar_url . "https://avatars3.githubusercontent.com/u/13133296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-rbhagat") (html_url . "https://github.com/exp-rbhagat") (followers_url . "https://api.github.com/users/exp-rbhagat/followers") (following_url . "https://api.github.com/users/exp-rbhagat/following{/other_user}") (gists_url . "https://api.github.com/users/exp-rbhagat/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-rbhagat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-rbhagat/subscriptions") (organizations_url . "https://api.github.com/users/exp-rbhagat/orgs") (repos_url . "https://api.github.com/users/exp-rbhagat/repos") (events_url . "https://api.github.com/users/exp-rbhagat/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-rbhagat/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-09T10:33:56Z") (updated_at . "2017-03-09T10:33:56Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37662") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37662") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37662.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37662.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37501") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37501/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37501/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37501/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37501") (id . 212130451) (number . 37501) (title . "added centos7 support") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-06T14:01:09Z") (updated_at . "2017-03-06T14:01:09Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37501") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37501") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37501.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37501.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37209") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37209/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37209/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37209/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37209") (id . 209770065) (number . 37209) (title . "enabling the ssl for taas") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-23T14:06:26Z") (updated_at . "2017-02-23T14:06:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37209") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37209") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37209.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37209.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37195") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37195/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37195/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37195/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37195") (id . 209629335) (number . 37195) (title . "Ecs autoscaling customization") (user (login . "jaydee864") (id . 7988064) (avatar_url . "https://avatars2.githubusercontent.com/u/7988064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaydee864") (html_url . "https://github.com/jaydee864") (followers_url . "https://api.github.com/users/jaydee864/followers") (following_url . "https://api.github.com/users/jaydee864/following{/other_user}") (gists_url . "https://api.github.com/users/jaydee864/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaydee864/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaydee864/subscriptions") (organizations_url . "https://api.github.com/users/jaydee864/orgs") (repos_url . "https://api.github.com/users/jaydee864/repos") (events_url . "https://api.github.com/users/jaydee864/events{/privacy}") (received_events_url . "https://api.github.com/users/jaydee864/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-23T00:51:55Z") (updated_at . "2017-03-06T21:05:32Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37195") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37195") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37195.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37195.patch")) (body . "DON'T MERGE YET -- IN REVIEW

Adding further user customization options for auto-scaling, allowing users to set the period, evaluation_periods, and thresholds for their auto-scaling policies.

To take advantage of these options, the user will have to add objects to their autoscale_dimensions array like so:
```
{
    \"instances\": {
        \"autoscale_dimensions\": [
            {
                \"name\": string,
                \"scaleout\": {
                    \"threshold\": float,
                    \"period\": int,
                    \"evaluation_periods\": int,
                    \"cooldown\": int
                },
                \"scalein\": {
                    \"threshold\": float,
                    \"period\": int,
                    \"evaluation_periods\": int,
                    \"cooldown\": int
                }
            }
        ]
    }
}
```
Everything except for \"name\" is optional; if the user supplies a value for \"name\" which is not contained in SERVICE_AUTOSCALE_DIMENSIONS (case insensitive comparison), or an object with a missing value for \"name\", the default autoscaling properties will be applied. If any of the optional parameters are omitted, the default values will be used. If the user supplies multiple objects with the same name for some reason, only the first object in their config with that name will be honored.

~~If the user is using the old configuration option where autoscale_dimensions is an array of Strings, then the old behavior will be observed.~~ EDIT: Now if user is using the old configuration option, then we will ignore their configuration and use the default properties.

Branch tester build: https://trinity.tools.expedia.com/job/ewetest_deploy-docker-ecs_branch-tester/696/")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37016") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37016/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37016/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/37016/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37016") (id . 208283554) (number . 37016) (title . "removing profile option") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-16T23:35:25Z") (updated_at . "2017-04-21T01:52:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/37016") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/37016") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/37016.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/37016.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36975") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36975/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36975/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36975/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36975") (id . 208118625) (number . 36975) (title . "Initial commit logstash setup") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-16T13:17:56Z") (updated_at . "2017-02-16T13:17:56Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36975") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36975") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36975.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36975.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36974") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36974/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36974/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36974/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36974") (id . 208110303) (number . 36974) (title . "Initial commit for the p4 sync - notification service") (user (login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-16T12:40:32Z") (updated_at . "2017-02-16T12:40:32Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36974") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36974") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36974.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36974.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36960") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36960/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36960/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36960/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36960") (id . 207963479) (number . 36960) (title . "Update hotel-infosite-web.rb") (user (login . "ttapping333") (id . 7170082) (avatar_url . "https://avatars2.githubusercontent.com/u/7170082?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ttapping333") (html_url . "https://github.com/ttapping333") (followers_url . "https://api.github.com/users/ttapping333/followers") (following_url . "https://api.github.com/users/ttapping333/following{/other_user}") (gists_url . "https://api.github.com/users/ttapping333/gists{/gist_id}") (starred_url . "https://api.github.com/users/ttapping333/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ttapping333/subscriptions") (organizations_url . "https://api.github.com/users/ttapping333/orgs") (repos_url . "https://api.github.com/users/ttapping333/repos") (events_url . "https://api.github.com/users/ttapping333/events{/privacy}") (received_events_url . "https://api.github.com/users/ttapping333/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-15T23:33:24Z") (updated_at . "2017-02-15T23:33:24Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36960") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36960") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36960.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36960.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36915") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36915/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36915/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36915/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36915") (id . 207630134) (number . 36915) (title . "Kubernetes deploy") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-14T20:39:43Z") (updated_at . "2017-02-14T20:39:43Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36915") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36915") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36915.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36915.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36903") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36903/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36903/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36903/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36903") (id . 207590053) (number . 36903) (title . "Mtrivedi taas") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-14T17:57:23Z") (updated_at . "2017-02-14T17:57:23Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36903") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36903") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36903.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36903.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36827") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36827/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36827/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36827/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36827") (id . 206922058) (number . 36827) (title . "added links") (user (login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-02-10T22:23:44Z") (updated_at . "2017-02-10T22:25:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36827") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36827") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36827.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36827.patch")) (body)) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36551") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36551/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36551/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36551/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36551") (id . 204720060) (number . 36551) (title . "adding more supervisors") (user (login . "rbudhbhattiexpedia") (id . 8714681) (avatar_url . "https://avatars1.githubusercontent.com/u/8714681?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbudhbhattiexpedia") (html_url . "https://github.com/rbudhbhattiexpedia") (followers_url . "https://api.github.com/users/rbudhbhattiexpedia/followers") (following_url . "https://api.github.com/users/rbudhbhattiexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/rbudhbhattiexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbudhbhattiexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbudhbhattiexpedia/subscriptions") (organizations_url . "https://api.github.com/users/rbudhbhattiexpedia/orgs") (repos_url . "https://api.github.com/users/rbudhbhattiexpedia/repos") (events_url . "https://api.github.com/users/rbudhbhattiexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/rbudhbhattiexpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-02-01T22:07:23Z") (updated_at . "2017-02-02T22:41:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36551") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36551") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36551.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36551.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36501") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36501/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36501/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36501/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36501") (id . 204488615) (number . 36501) (title . "Fix log info") (user (login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-02-01T03:24:01Z") (updated_at . "2017-02-02T22:41:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36501") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36501") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36501.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36501.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36414") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36414/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36414/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36414/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36414") (id . 203925275) (number . 36414) (title . "ecs cost transperency") (user (login . "pmanwatkar") (id . 5390225) (avatar_url . "https://avatars3.githubusercontent.com/u/5390225?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pmanwatkar") (html_url . "https://github.com/pmanwatkar") (followers_url . "https://api.github.com/users/pmanwatkar/followers") (following_url . "https://api.github.com/users/pmanwatkar/following{/other_user}") (gists_url . "https://api.github.com/users/pmanwatkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pmanwatkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pmanwatkar/subscriptions") (organizations_url . "https://api.github.com/users/pmanwatkar/orgs") (repos_url . "https://api.github.com/users/pmanwatkar/repos") (events_url . "https://api.github.com/users/pmanwatkar/events{/privacy}") (received_events_url . "https://api.github.com/users/pmanwatkar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-30T04:24:19Z") (updated_at . "2017-02-02T22:41:07Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36414") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36414") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36414.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36414.patch")) (body . "Don't Merge it yet!")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36350") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36350/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36350/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36350/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36350") (id . 203241579) (number . 36350) (title . "Update job.yml") (user (login . "dkashettynagar") (id . 18708165) (avatar_url . "https://avatars3.githubusercontent.com/u/18708165?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dkashettynagar") (html_url . "https://github.com/dkashettynagar") (followers_url . "https://api.github.com/users/dkashettynagar/followers") (following_url . "https://api.github.com/users/dkashettynagar/following{/other_user}") (gists_url . "https://api.github.com/users/dkashettynagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/dkashettynagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dkashettynagar/subscriptions") (organizations_url . "https://api.github.com/users/dkashettynagar/orgs") (repos_url . "https://api.github.com/users/dkashettynagar/repos") (events_url . "https://api.github.com/users/dkashettynagar/events{/privacy}") (received_events_url . "https://api.github.com/users/dkashettynagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-25T22:27:43Z") (updated_at . "2017-02-02T22:41:08Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36350") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36350") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36350.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36350.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36349") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36349/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36349/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36349/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36349") (id . 203240967) (number . 36349) (title . "Update job.yml") (user (login . "dkashettynagar") (id . 18708165) (avatar_url . "https://avatars3.githubusercontent.com/u/18708165?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dkashettynagar") (html_url . "https://github.com/dkashettynagar") (followers_url . "https://api.github.com/users/dkashettynagar/followers") (following_url . "https://api.github.com/users/dkashettynagar/following{/other_user}") (gists_url . "https://api.github.com/users/dkashettynagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/dkashettynagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dkashettynagar/subscriptions") (organizations_url . "https://api.github.com/users/dkashettynagar/orgs") (repos_url . "https://api.github.com/users/dkashettynagar/repos") (events_url . "https://api.github.com/users/dkashettynagar/events{/privacy}") (received_events_url . "https://api.github.com/users/dkashettynagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-25T22:24:38Z") (updated_at . "2017-02-02T22:41:09Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36349") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36349") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36349.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36349.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36305") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36305/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36305/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36305/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36305") (id . 202981757) (number . 36305) (title . "Fix Kafka not starting when machine starts") (user (login . "rehevkor5") (id . 16899) (avatar_url . "https://avatars0.githubusercontent.com/u/16899?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rehevkor5") (html_url . "https://github.com/rehevkor5") (followers_url . "https://api.github.com/users/rehevkor5/followers") (following_url . "https://api.github.com/users/rehevkor5/following{/other_user}") (gists_url . "https://api.github.com/users/rehevkor5/gists{/gist_id}") (starred_url . "https://api.github.com/users/rehevkor5/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rehevkor5/subscriptions") (organizations_url . "https://api.github.com/users/rehevkor5/orgs") (repos_url . "https://api.github.com/users/rehevkor5/repos") (events_url . "https://api.github.com/users/rehevkor5/events{/privacy}") (received_events_url . "https://api.github.com/users/rehevkor5/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2017-01-25T00:35:38Z") (updated_at . "2017-05-08T18:49:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36305") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36305") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36305.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36305.patch")) (body . "- Modified Kafka recipe to run scscanboot at startup. Otherwise, Kafka does not start back up if the instance reboots. Same fix as #34579
- Fixed using the wrong directory \"/services\" instead of \"/service\"
- Also updated the \"daemontools\" recipe to use the correct directory \"/service\" instead of \"/services\". If the wrong directory is used, svscanboot doesn't work. See https://github.com/daemontools/daemontools/blob/master/src/svscanboot.sh")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36096") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36096/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36096/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/36096/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36096") (id . 201706920) (number . 36096) (title . "Increase haystack kafka broker count") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-18T22:10:48Z") (updated_at . "2017-02-02T22:41:11Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/36096") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/36096") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/36096.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/36096.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35993") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35993/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35993/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35993/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35993") (id . 200727018) (number . 35993) (title . "changes to add multiRuleMatch configs") (user (login . "Ansujoys") (id . 20520241) (avatar_url . "https://avatars2.githubusercontent.com/u/20520241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Ansujoys") (html_url . "https://github.com/Ansujoys") (followers_url . "https://api.github.com/users/Ansujoys/followers") (following_url . "https://api.github.com/users/Ansujoys/following{/other_user}") (gists_url . "https://api.github.com/users/Ansujoys/gists{/gist_id}") (starred_url . "https://api.github.com/users/Ansujoys/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Ansujoys/subscriptions") (organizations_url . "https://api.github.com/users/Ansujoys/orgs") (repos_url . "https://api.github.com/users/Ansujoys/repos") (events_url . "https://api.github.com/users/Ansujoys/events{/privacy}") (received_events_url . "https://api.github.com/users/Ansujoys/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-13T20:47:23Z") (updated_at . "2017-02-02T22:41:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35993") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35993") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35993.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35993.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35837") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35837/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35837/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35837/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35837") (id . 199737331) (number . 35837) (title . "Changes for haystack-blobs different bucketname in prod") (user (login . "abhayjit") (id . 5379853) (avatar_url . "https://avatars0.githubusercontent.com/u/5379853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abhayjit") (html_url . "https://github.com/abhayjit") (followers_url . "https://api.github.com/users/abhayjit/followers") (following_url . "https://api.github.com/users/abhayjit/following{/other_user}") (gists_url . "https://api.github.com/users/abhayjit/gists{/gist_id}") (starred_url . "https://api.github.com/users/abhayjit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abhayjit/subscriptions") (organizations_url . "https://api.github.com/users/abhayjit/orgs") (repos_url . "https://api.github.com/users/abhayjit/repos") (events_url . "https://api.github.com/users/abhayjit/events{/privacy}") (received_events_url . "https://api.github.com/users/abhayjit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-01-10T05:42:40Z") (updated_at . "2017-02-02T22:41:15Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35837") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35837") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35837.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35837.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35633") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35633/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35633/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35633/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35633") (id . 197793649) (number . 35633) (title . "Allow ecs.extra_port_mappings to specfy ELB port separate to containe…") (user (login . "joedj") (id . 250501) (avatar_url . "https://avatars2.githubusercontent.com/u/250501?v=4") (gravatar_id . "") (url . "https://api.github.com/users/joedj") (html_url . "https://github.com/joedj") (followers_url . "https://api.github.com/users/joedj/followers") (following_url . "https://api.github.com/users/joedj/following{/other_user}") (gists_url . "https://api.github.com/users/joedj/gists{/gist_id}") (starred_url . "https://api.github.com/users/joedj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/joedj/subscriptions") (organizations_url . "https://api.github.com/users/joedj/orgs") (repos_url . "https://api.github.com/users/joedj/repos") (events_url . "https://api.github.com/users/joedj/events{/privacy}") (received_events_url . "https://api.github.com/users/joedj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-12-28T04:18:03Z") (updated_at . "2017-02-02T23:29:54Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35633") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35633") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35633.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35633.patch")) (body . "…r port")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35610") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35610/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35610/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35610/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35610") (id . 197397345) (number . 35610) (title . "Hardcode exclude list until properly implemented (sanitized)") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-23T16:36:54Z") (updated_at . "2017-02-02T22:41:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35610") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35610") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35610.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35610.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35593") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35593/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35593/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35593/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35593") (id . 197209461) (number . 35593) (title . "Update ewetest.rb to chnage blacklisting endpoint to v4") (user (login . "Ansujoys") (id . 20520241) (avatar_url . "https://avatars2.githubusercontent.com/u/20520241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Ansujoys") (html_url . "https://github.com/Ansujoys") (followers_url . "https://api.github.com/users/Ansujoys/followers") (following_url . "https://api.github.com/users/Ansujoys/following{/other_user}") (gists_url . "https://api.github.com/users/Ansujoys/gists{/gist_id}") (starred_url . "https://api.github.com/users/Ansujoys/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Ansujoys/subscriptions") (organizations_url . "https://api.github.com/users/Ansujoys/orgs") (repos_url . "https://api.github.com/users/Ansujoys/repos") (events_url . "https://api.github.com/users/Ansujoys/events{/privacy}") (received_events_url . "https://api.github.com/users/Ansujoys/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-22T16:14:54Z") (updated_at . "2017-02-02T22:41:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35593") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35593") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35593.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35593.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35563") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35563/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35563/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35563/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35563") (id . 196995009) (number . 35563) (title . "FRCS Https ELB application") (user (login . "MaanuK") (id . 16563161) (avatar_url . "https://avatars0.githubusercontent.com/u/16563161?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MaanuK") (html_url . "https://github.com/MaanuK") (followers_url . "https://api.github.com/users/MaanuK/followers") (following_url . "https://api.github.com/users/MaanuK/following{/other_user}") (gists_url . "https://api.github.com/users/MaanuK/gists{/gist_id}") (starred_url . "https://api.github.com/users/MaanuK/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MaanuK/subscriptions") (organizations_url . "https://api.github.com/users/MaanuK/orgs") (repos_url . "https://api.github.com/users/MaanuK/repos") (events_url . "https://api.github.com/users/MaanuK/events{/privacy}") (received_events_url . "https://api.github.com/users/MaanuK/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-21T17:55:47Z") (updated_at . "2017-02-02T22:41:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35563") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35563") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35563.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35563.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35297") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35297/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35297/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35297/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35297") (id . 194954994) (number . 35297) (title . "Deleting old roles which are not reqd anymore") (user (login . "gearora") (id . 8953992) (avatar_url . "https://avatars3.githubusercontent.com/u/8953992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gearora") (html_url . "https://github.com/gearora") (followers_url . "https://api.github.com/users/gearora/followers") (following_url . "https://api.github.com/users/gearora/following{/other_user}") (gists_url . "https://api.github.com/users/gearora/gists{/gist_id}") (starred_url . "https://api.github.com/users/gearora/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gearora/subscriptions") (organizations_url . "https://api.github.com/users/gearora/orgs") (repos_url . "https://api.github.com/users/gearora/repos") (events_url . "https://api.github.com/users/gearora/events{/privacy}") (received_events_url . "https://api.github.com/users/gearora/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-12T11:47:56Z") (updated_at . "2017-02-02T22:41:21Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35297") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35297") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35297.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35297.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35251") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35251/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35251/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35251/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35251") (id . 194644947) (number . 35251) (title . "Adding script to delete lambda functions") (user (login . "jaydee864") (id . 7988064) (avatar_url . "https://avatars2.githubusercontent.com/u/7988064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaydee864") (html_url . "https://github.com/jaydee864") (followers_url . "https://api.github.com/users/jaydee864/followers") (following_url . "https://api.github.com/users/jaydee864/following{/other_user}") (gists_url . "https://api.github.com/users/jaydee864/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaydee864/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaydee864/subscriptions") (organizations_url . "https://api.github.com/users/jaydee864/orgs") (repos_url . "https://api.github.com/users/jaydee864/repos") (events_url . "https://api.github.com/users/jaydee864/events{/privacy}") (received_events_url . "https://api.github.com/users/jaydee864/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-09T16:56:34Z") (updated_at . "2017-02-02T22:41:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35251") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35251") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35251.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35251.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35237") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35237/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35237/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35237/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35237") (id . 194555085) (number . 35237) (title . "use https when checking for services only with https available") (user (login . "v-akerek") (id . 6941834) (avatar_url . "https://avatars1.githubusercontent.com/u/6941834?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-akerek") (html_url . "https://github.com/v-akerek") (followers_url . "https://api.github.com/users/v-akerek/followers") (following_url . "https://api.github.com/users/v-akerek/following{/other_user}") (gists_url . "https://api.github.com/users/v-akerek/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-akerek/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-akerek/subscriptions") (organizations_url . "https://api.github.com/users/v-akerek/orgs") (repos_url . "https://api.github.com/users/v-akerek/repos") (events_url . "https://api.github.com/users/v-akerek/events{/privacy}") (received_events_url . "https://api.github.com/users/v-akerek/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-09T09:56:31Z") (updated_at . "2017-02-02T22:41:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35237") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35237") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35237.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35237.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35087") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35087/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35087/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35087/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35087") (id . 193824891) (number . 35087) (title . "Installing CW scripts and setting up cron") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-12-06T16:51:17Z") (updated_at . "2017-02-02T22:41:23Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35087") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35087") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35087.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35087.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35079") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35079/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35079/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/35079/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35079") (id . 193746398) (number . 35079) (title . "Update FeatureConfig-lab.xml for AirPaymentCategory") (user (login . "v-presingh") (id . 8372697) (avatar_url . "https://avatars3.githubusercontent.com/u/8372697?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-presingh") (html_url . "https://github.com/v-presingh") (followers_url . "https://api.github.com/users/v-presingh/followers") (following_url . "https://api.github.com/users/v-presingh/following{/other_user}") (gists_url . "https://api.github.com/users/v-presingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-presingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-presingh/subscriptions") (organizations_url . "https://api.github.com/users/v-presingh/orgs") (repos_url . "https://api.github.com/users/v-presingh/repos") (events_url . "https://api.github.com/users/v-presingh/events{/privacy}") (received_events_url . "https://api.github.com/users/v-presingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-12-06T11:18:12Z") (updated_at . "2017-02-02T22:41:24Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/35079") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/35079") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/35079.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/35079.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34887") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34887/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34887/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34887/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34887") (id . 192449654) (number . 34887) (title . "Updating clusters to use varied subnets") (user (login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-30T01:21:08Z") (updated_at . "2017-02-02T22:41:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34887") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34887") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34887.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34887.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34860") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34860/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34860/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34860/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34860") (id . 192271889) (number . 34860) (title . "Revert \"adding chef gem and exceptions\"") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-29T12:43:12Z") (updated_at . "2017-02-02T22:41:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34860") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34860") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34860.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34860.patch")) (body . "Reverts ExpediaInc/exp-devops#34852")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34856") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34856/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34856/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34856/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34856") (id . 192264626) (number . 34856) (title . "Trying to get closer to chef best practice") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-29T12:07:12Z") (updated_at . "2017-02-02T22:41:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34856") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34856") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34856.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34856.patch")) (body . "Trying to get closer to chef best practice")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34847") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34847/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34847/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34847/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34847") (id . 192244771) (number . 34847) (title . "adding some exceptions and logs") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-29T10:34:22Z") (updated_at . "2017-02-02T22:41:28Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34847") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34847") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34847.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34847.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34810") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34810/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34810/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34810/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34810") (id . 191986979) (number . 34810) (title . "Fix during prod change window step2") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-28T11:53:15Z") (updated_at . "2017-02-02T22:41:28Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34810") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34810") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34810.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34810.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34780") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34780/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34780/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34780/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34780") (id . 191526010) (number . 34780) (title . "Dev gearora statsd") (user (login . "gearora") (id . 8953992) (avatar_url . "https://avatars3.githubusercontent.com/u/8953992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gearora") (html_url . "https://github.com/gearora") (followers_url . "https://api.github.com/users/gearora/followers") (following_url . "https://api.github.com/users/gearora/following{/other_user}") (gists_url . "https://api.github.com/users/gearora/gists{/gist_id}") (starred_url . "https://api.github.com/users/gearora/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gearora/subscriptions") (organizations_url . "https://api.github.com/users/gearora/orgs") (repos_url . "https://api.github.com/users/gearora/repos") (events_url . "https://api.github.com/users/gearora/events{/privacy}") (received_events_url . "https://api.github.com/users/gearora/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-24T13:56:18Z") (updated_at . "2017-02-02T22:41:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34780") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34780") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34780.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34780.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34684") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34684/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34684/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34684/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34684") (id . 190977773) (number . 34684) (title . "Update default.rb") (user (login . "EXPEv-tzadori") (id . 14938414) (avatar_url . "https://avatars1.githubusercontent.com/u/14938414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEv-tzadori") (html_url . "https://github.com/EXPEv-tzadori") (followers_url . "https://api.github.com/users/EXPEv-tzadori/followers") (following_url . "https://api.github.com/users/EXPEv-tzadori/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEv-tzadori/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEv-tzadori/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEv-tzadori/subscriptions") (organizations_url . "https://api.github.com/users/EXPEv-tzadori/orgs") (repos_url . "https://api.github.com/users/EXPEv-tzadori/repos") (events_url . "https://api.github.com/users/EXPEv-tzadori/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEv-tzadori/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-22T11:43:52Z") (updated_at . "2017-02-02T22:41:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34684") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34684") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34684.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34684.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34639") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34639/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34639/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34639/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34639") (id . 190680537) (number . 34639) (title . "Updates for Upstart") (user (login . "ManishMaheshwari") (id . 1227565) (avatar_url . "https://avatars3.githubusercontent.com/u/1227565?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ManishMaheshwari") (html_url . "https://github.com/ManishMaheshwari") (followers_url . "https://api.github.com/users/ManishMaheshwari/followers") (following_url . "https://api.github.com/users/ManishMaheshwari/following{/other_user}") (gists_url . "https://api.github.com/users/ManishMaheshwari/gists{/gist_id}") (starred_url . "https://api.github.com/users/ManishMaheshwari/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ManishMaheshwari/subscriptions") (organizations_url . "https://api.github.com/users/ManishMaheshwari/orgs") (repos_url . "https://api.github.com/users/ManishMaheshwari/repos") (events_url . "https://api.github.com/users/ManishMaheshwari/events{/privacy}") (received_events_url . "https://api.github.com/users/ManishMaheshwari/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-21T10:48:23Z") (updated_at . "2017-02-02T22:41:31Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34639") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34639") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34639.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34639.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34395") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34395/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34395/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34395/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34395") (id . 188878079) (number . 34395) (title . "Testing out different JVM GC Settings") (user (login . "ternst32") (id . 22227111) (avatar_url . "https://avatars1.githubusercontent.com/u/22227111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ternst32") (html_url . "https://github.com/ternst32") (followers_url . "https://api.github.com/users/ternst32/followers") (following_url . "https://api.github.com/users/ternst32/following{/other_user}") (gists_url . "https://api.github.com/users/ternst32/gists{/gist_id}") (starred_url . "https://api.github.com/users/ternst32/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ternst32/subscriptions") (organizations_url . "https://api.github.com/users/ternst32/orgs") (repos_url . "https://api.github.com/users/ternst32/repos") (events_url . "https://api.github.com/users/ternst32/events{/privacy}") (received_events_url . "https://api.github.com/users/ternst32/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-12T00:16:31Z") (updated_at . "2017-02-02T22:41:34Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34395") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34395") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34395.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34395.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34374") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34374/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34374/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34374/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34374") (id . 188799541) (number . 34374) (title . "Getapplist") (user (login . "pratikp09") (id . 22455143) (avatar_url . "https://avatars1.githubusercontent.com/u/22455143?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pratikp09") (html_url . "https://github.com/pratikp09") (followers_url . "https://api.github.com/users/pratikp09/followers") (following_url . "https://api.github.com/users/pratikp09/following{/other_user}") (gists_url . "https://api.github.com/users/pratikp09/gists{/gist_id}") (starred_url . "https://api.github.com/users/pratikp09/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pratikp09/subscriptions") (organizations_url . "https://api.github.com/users/pratikp09/orgs") (repos_url . "https://api.github.com/users/pratikp09/repos") (events_url . "https://api.github.com/users/pratikp09/events{/privacy}") (received_events_url . "https://api.github.com/users/pratikp09/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-11T16:37:50Z") (updated_at . "2017-02-02T22:41:35Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34374") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34374") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34374.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34374.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34364") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34364/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34364/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34364/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34364") (id . 188715297) (number . 34364) (title . "Update reaper.json") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-11T09:08:09Z") (updated_at . "2017-02-02T22:41:35Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34364") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34364") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34364.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34364.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34281") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34281/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34281/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34281/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34281") (id . 188288021) (number . 34281) (title . "Reverted cookbook without metadata breaking uploads") (user (login . "npereiraexpedia") (id . 16762021) (avatar_url . "https://avatars1.githubusercontent.com/u/16762021?v=4") (gravatar_id . "") (url . "https://api.github.com/users/npereiraexpedia") (html_url . "https://github.com/npereiraexpedia") (followers_url . "https://api.github.com/users/npereiraexpedia/followers") (following_url . "https://api.github.com/users/npereiraexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/npereiraexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/npereiraexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/npereiraexpedia/subscriptions") (organizations_url . "https://api.github.com/users/npereiraexpedia/orgs") (repos_url . "https://api.github.com/users/npereiraexpedia/repos") (events_url . "https://api.github.com/users/npereiraexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/npereiraexpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-09T16:20:24Z") (updated_at . "2017-02-02T22:41:36Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34281") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34281") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34281.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34281.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34094") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34094/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34094/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34094/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34094") (id . 186609105) (number . 34094) (title . "Ecs soak") (user (login . "brobertson19") (id . 20522035) (avatar_url . "https://avatars2.githubusercontent.com/u/20522035?v=4") (gravatar_id . "") (url . "https://api.github.com/users/brobertson19") (html_url . "https://github.com/brobertson19") (followers_url . "https://api.github.com/users/brobertson19/followers") (following_url . "https://api.github.com/users/brobertson19/following{/other_user}") (gists_url . "https://api.github.com/users/brobertson19/gists{/gist_id}") (starred_url . "https://api.github.com/users/brobertson19/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/brobertson19/subscriptions") (organizations_url . "https://api.github.com/users/brobertson19/orgs") (repos_url . "https://api.github.com/users/brobertson19/repos") (events_url . "https://api.github.com/users/brobertson19/events{/privacy}") (received_events_url . "https://api.github.com/users/brobertson19/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 5) (created_at . "2016-11-01T18:25:38Z") (updated_at . "2017-02-02T22:41:38Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34094") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34094") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34094.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34094.patch")) (body . "This Branch adds support to modify AWS traffic policies to enable \"soaking\" a canary stack for ECS. In doing so I refactored the code that manipulates the CNAME and the ELB into it own classes. ")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34086") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34086/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34086/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/34086/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34086") (id . 186543457) (number . 34086) (title . "move copy-swxl-data-from-us-east-1-to-us-west-2 role from us-west-2c …") (user (login . "philipschwarz") (id . 116804) (avatar_url . "https://avatars2.githubusercontent.com/u/116804?v=4") (gravatar_id . "") (url . "https://api.github.com/users/philipschwarz") (html_url . "https://github.com/philipschwarz") (followers_url . "https://api.github.com/users/philipschwarz/followers") (following_url . "https://api.github.com/users/philipschwarz/following{/other_user}") (gists_url . "https://api.github.com/users/philipschwarz/gists{/gist_id}") (starred_url . "https://api.github.com/users/philipschwarz/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/philipschwarz/subscriptions") (organizations_url . "https://api.github.com/users/philipschwarz/orgs") (repos_url . "https://api.github.com/users/philipschwarz/repos") (events_url . "https://api.github.com/users/philipschwarz/events{/privacy}") (received_events_url . "https://api.github.com/users/philipschwarz/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-01T14:12:09Z") (updated_at . "2017-02-02T22:41:40Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/34086") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/34086") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/34086.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/34086.patch")) (body . "…to us-east-1a")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33790") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33790/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33790/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33790/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33790") (id . 184965561) (number . 33790) (title . "add support for latency based routing") (user (login . "ssimfukwe") (id . 8495216) (avatar_url . "https://avatars3.githubusercontent.com/u/8495216?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ssimfukwe") (html_url . "https://github.com/ssimfukwe") (followers_url . "https://api.github.com/users/ssimfukwe/followers") (following_url . "https://api.github.com/users/ssimfukwe/following{/other_user}") (gists_url . "https://api.github.com/users/ssimfukwe/gists{/gist_id}") (starred_url . "https://api.github.com/users/ssimfukwe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ssimfukwe/subscriptions") (organizations_url . "https://api.github.com/users/ssimfukwe/orgs") (repos_url . "https://api.github.com/users/ssimfukwe/repos") (events_url . "https://api.github.com/users/ssimfukwe/events{/privacy}") (received_events_url . "https://api.github.com/users/ssimfukwe/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-24T21:56:17Z") (updated_at . "2017-02-02T22:41:41Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33790") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33790") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33790.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33790.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33650") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33650/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33650/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33650/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33650") (id . 184222329) (number . 33650) (title . "Linkerd role initial cut") (user (login . "ManishMaheshwari") (id . 1227565) (avatar_url . "https://avatars3.githubusercontent.com/u/1227565?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ManishMaheshwari") (html_url . "https://github.com/ManishMaheshwari") (followers_url . "https://api.github.com/users/ManishMaheshwari/followers") (following_url . "https://api.github.com/users/ManishMaheshwari/following{/other_user}") (gists_url . "https://api.github.com/users/ManishMaheshwari/gists{/gist_id}") (starred_url . "https://api.github.com/users/ManishMaheshwari/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ManishMaheshwari/subscriptions") (organizations_url . "https://api.github.com/users/ManishMaheshwari/orgs") (repos_url . "https://api.github.com/users/ManishMaheshwari/repos") (events_url . "https://api.github.com/users/ManishMaheshwari/events{/privacy}") (received_events_url . "https://api.github.com/users/ManishMaheshwari/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-20T12:57:31Z") (updated_at . "2017-02-02T22:41:43Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33650") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33650") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33650.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33650.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33613") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33613/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33613/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33613/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33613") (id . 184037178) (number . 33613) (title . "update the connection jdbc") (user (login . "EXPEyufguo") (id . 14915288) (avatar_url . "https://avatars1.githubusercontent.com/u/14915288?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEyufguo") (html_url . "https://github.com/EXPEyufguo") (followers_url . "https://api.github.com/users/EXPEyufguo/followers") (following_url . "https://api.github.com/users/EXPEyufguo/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEyufguo/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEyufguo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEyufguo/subscriptions") (organizations_url . "https://api.github.com/users/EXPEyufguo/orgs") (repos_url . "https://api.github.com/users/EXPEyufguo/repos") (events_url . "https://api.github.com/users/EXPEyufguo/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEyufguo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-19T18:21:08Z") (updated_at . "2017-02-02T22:41:43Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33613") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33613") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33613.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33613.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33601") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33601/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33601/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33601/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33601") (id . 184008658) (number . 33601) (title . "Taking out extra space in password") (user (login . "skakodkar") (id . 19696649) (avatar_url . "https://avatars0.githubusercontent.com/u/19696649?v=4") (gravatar_id . "") (url . "https://api.github.com/users/skakodkar") (html_url . "https://github.com/skakodkar") (followers_url . "https://api.github.com/users/skakodkar/followers") (following_url . "https://api.github.com/users/skakodkar/following{/other_user}") (gists_url . "https://api.github.com/users/skakodkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/skakodkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/skakodkar/subscriptions") (organizations_url . "https://api.github.com/users/skakodkar/orgs") (repos_url . "https://api.github.com/users/skakodkar/repos") (events_url . "https://api.github.com/users/skakodkar/events{/privacy}") (received_events_url . "https://api.github.com/users/skakodkar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2016-10-19T16:16:33Z") (updated_at . "2017-02-02T22:41:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33601") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33601") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33601.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33601.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33526") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33526/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33526/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33526/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33526") (id . 183744938) (number . 33526) (title . "add Consul tagging to ECS deploys") (user (login . "rickfast") (id . 295068) (avatar_url . "https://avatars1.githubusercontent.com/u/295068?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rickfast") (html_url . "https://github.com/rickfast") (followers_url . "https://api.github.com/users/rickfast/followers") (following_url . "https://api.github.com/users/rickfast/following{/other_user}") (gists_url . "https://api.github.com/users/rickfast/gists{/gist_id}") (starred_url . "https://api.github.com/users/rickfast/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rickfast/subscriptions") (organizations_url . "https://api.github.com/users/rickfast/orgs") (repos_url . "https://api.github.com/users/rickfast/repos") (events_url . "https://api.github.com/users/rickfast/events{/privacy}") (received_events_url . "https://api.github.com/users/rickfast/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-18T16:58:26Z") (updated_at . "2017-02-02T22:41:47Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33526") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33526") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33526.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33526.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33298") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33298/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33298/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/33298/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33298") (id . 182808472) (number . 33298) (title . "Reduce the integration environment's cluster as it's in test") (user (login . "EXPEgzarazaga") (id . 17164722) (avatar_url . "https://avatars3.githubusercontent.com/u/17164722?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgzarazaga") (html_url . "https://github.com/EXPEgzarazaga") (followers_url . "https://api.github.com/users/EXPEgzarazaga/followers") (following_url . "https://api.github.com/users/EXPEgzarazaga/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgzarazaga/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgzarazaga/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgzarazaga/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgzarazaga/orgs") (repos_url . "https://api.github.com/users/EXPEgzarazaga/repos") (events_url . "https://api.github.com/users/EXPEgzarazaga/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgzarazaga/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-13T14:39:18Z") (updated_at . "2017-02-02T22:41:48Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/33298") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/33298") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/33298.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/33298.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32986") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32986/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32986/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32986/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32986") (id . 181285149) (number . 32986) (title . "Fix ECS min cpu and max mem size") (user (login . "dube25") (id . 7274504) (avatar_url . "https://avatars1.githubusercontent.com/u/7274504?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dube25") (html_url . "https://github.com/dube25") (followers_url . "https://api.github.com/users/dube25/followers") (following_url . "https://api.github.com/users/dube25/following{/other_user}") (gists_url . "https://api.github.com/users/dube25/gists{/gist_id}") (starred_url . "https://api.github.com/users/dube25/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dube25/subscriptions") (organizations_url . "https://api.github.com/users/dube25/orgs") (repos_url . "https://api.github.com/users/dube25/repos") (events_url . "https://api.github.com/users/dube25/events{/privacy}") (received_events_url . "https://api.github.com/users/dube25/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-05T22:49:19Z") (updated_at . "2017-02-02T22:41:48Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32986") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32986") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32986.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32986.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32901") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32901/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32901/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32901/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32901") (id . 180974858) (number . 32901) (title . "changes to use cf") (user (login . "krackoder") (id . 6703583) (avatar_url . "https://avatars0.githubusercontent.com/u/6703583?v=4") (gravatar_id . "") (url . "https://api.github.com/users/krackoder") (html_url . "https://github.com/krackoder") (followers_url . "https://api.github.com/users/krackoder/followers") (following_url . "https://api.github.com/users/krackoder/following{/other_user}") (gists_url . "https://api.github.com/users/krackoder/gists{/gist_id}") (starred_url . "https://api.github.com/users/krackoder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/krackoder/subscriptions") (organizations_url . "https://api.github.com/users/krackoder/orgs") (repos_url . "https://api.github.com/users/krackoder/repos") (events_url . "https://api.github.com/users/krackoder/events{/privacy}") (received_events_url . "https://api.github.com/users/krackoder/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-04T18:54:26Z") (updated_at . "2017-02-02T22:41:50Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32901") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32901") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32901.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32901.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32883") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32883/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32883/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32883/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32883") (id . 180901404) (number . 32883) (title . "updating insurance notification with internet facing") (user (login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-04T14:00:30Z") (updated_at . "2017-02-02T22:41:50Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32883") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32883") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32883.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32883.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32848") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32848/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32848/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32848/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32848") (id . 180772826) (number . 32848) (title . "Update Chicago SG") (user (login . "prasadmandore") (id . 16143023) (avatar_url . "https://avatars2.githubusercontent.com/u/16143023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/prasadmandore") (html_url . "https://github.com/prasadmandore") (followers_url . "https://api.github.com/users/prasadmandore/followers") (following_url . "https://api.github.com/users/prasadmandore/following{/other_user}") (gists_url . "https://api.github.com/users/prasadmandore/gists{/gist_id}") (starred_url . "https://api.github.com/users/prasadmandore/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/prasadmandore/subscriptions") (organizations_url . "https://api.github.com/users/prasadmandore/orgs") (repos_url . "https://api.github.com/users/prasadmandore/repos") (events_url . "https://api.github.com/users/prasadmandore/events{/privacy}") (received_events_url . "https://api.github.com/users/prasadmandore/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-10-03T23:30:44Z") (updated_at . "2017-02-02T22:41:51Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32848") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32848") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32848.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32848.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32766") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32766/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32766/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32766/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32766") (id . 180416904) (number . 32766) (title . "Update job.yml") (user (login . "dkashettynagar") (id . 18708165) (avatar_url . "https://avatars3.githubusercontent.com/u/18708165?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dkashettynagar") (html_url . "https://github.com/dkashettynagar") (followers_url . "https://api.github.com/users/dkashettynagar/followers") (following_url . "https://api.github.com/users/dkashettynagar/following{/other_user}") (gists_url . "https://api.github.com/users/dkashettynagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/dkashettynagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dkashettynagar/subscriptions") (organizations_url . "https://api.github.com/users/dkashettynagar/orgs") (repos_url . "https://api.github.com/users/dkashettynagar/repos") (events_url . "https://api.github.com/users/dkashettynagar/events{/privacy}") (received_events_url . "https://api.github.com/users/dkashettynagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-30T22:41:40Z") (updated_at . "2017-02-02T22:41:52Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32766") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32766") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32766.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32766.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32691") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32691/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32691/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32691/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32691") (id . 180149614) (number . 32691) (title . "switch to another subnet having more IPs") (user (login . "vasanthksexp") (id . 16090796) (avatar_url . "https://avatars1.githubusercontent.com/u/16090796?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthksexp") (html_url . "https://github.com/vasanthksexp") (followers_url . "https://api.github.com/users/vasanthksexp/followers") (following_url . "https://api.github.com/users/vasanthksexp/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthksexp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthksexp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthksexp/subscriptions") (organizations_url . "https://api.github.com/users/vasanthksexp/orgs") (repos_url . "https://api.github.com/users/vasanthksexp/repos") (events_url . "https://api.github.com/users/vasanthksexp/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthksexp/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-29T20:09:58Z") (updated_at . "2017-02-02T22:41:54Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32691") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32691") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32691.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32691.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32507") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32507/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32507/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32507/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32507") (id . 179619480) (number . 32507) (title . "Siteapihttps") (user (login . "akhilp") (id . 81716) (avatar_url . "https://avatars3.githubusercontent.com/u/81716?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akhilp") (html_url . "https://github.com/akhilp") (followers_url . "https://api.github.com/users/akhilp/followers") (following_url . "https://api.github.com/users/akhilp/following{/other_user}") (gists_url . "https://api.github.com/users/akhilp/gists{/gist_id}") (starred_url . "https://api.github.com/users/akhilp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akhilp/subscriptions") (organizations_url . "https://api.github.com/users/akhilp/orgs") (repos_url . "https://api.github.com/users/akhilp/repos") (events_url . "https://api.github.com/users/akhilp/events{/privacy}") (received_events_url . "https://api.github.com/users/akhilp/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-27T21:30:29Z") (updated_at . "2017-02-02T22:41:55Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32507") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32507") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32507.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32507.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32076") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32076/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32076/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/32076/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32076") (id . 178477603) (number . 32076) (title . "Updating configs") (user (login . "anandjoshi2016") (id . 18406870) (avatar_url . "https://avatars0.githubusercontent.com/u/18406870?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anandjoshi2016") (html_url . "https://github.com/anandjoshi2016") (followers_url . "https://api.github.com/users/anandjoshi2016/followers") (following_url . "https://api.github.com/users/anandjoshi2016/following{/other_user}") (gists_url . "https://api.github.com/users/anandjoshi2016/gists{/gist_id}") (starred_url . "https://api.github.com/users/anandjoshi2016/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anandjoshi2016/subscriptions") (organizations_url . "https://api.github.com/users/anandjoshi2016/orgs") (repos_url . "https://api.github.com/users/anandjoshi2016/repos") (events_url . "https://api.github.com/users/anandjoshi2016/events{/privacy}") (received_events_url . "https://api.github.com/users/anandjoshi2016/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-21T22:24:57Z") (updated_at . "2017-02-02T22:41:57Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/32076") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/32076") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/32076.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/32076.patch")) (body . "In order to route communication to right team since this service has been handed over to different group.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31953") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31953/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31953/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31953/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31953") (id . 178200211) (number . 31953) (title . "updating eagle to https") (user (login . "rohanvishwasrao") (id . 704635) (avatar_url . "https://avatars0.githubusercontent.com/u/704635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rohanvishwasrao") (html_url . "https://github.com/rohanvishwasrao") (followers_url . "https://api.github.com/users/rohanvishwasrao/followers") (following_url . "https://api.github.com/users/rohanvishwasrao/following{/other_user}") (gists_url . "https://api.github.com/users/rohanvishwasrao/gists{/gist_id}") (starred_url . "https://api.github.com/users/rohanvishwasrao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rohanvishwasrao/subscriptions") (organizations_url . "https://api.github.com/users/rohanvishwasrao/orgs") (repos_url . "https://api.github.com/users/rohanvishwasrao/repos") (events_url . "https://api.github.com/users/rohanvishwasrao/events{/privacy}") (received_events_url . "https://api.github.com/users/rohanvishwasrao/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-20T22:46:22Z") (updated_at . "2017-02-02T22:41:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31953") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31953") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31953.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31953.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31787") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31787/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31787/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31787/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31787") (id . 177850838) (number . 31787) (title . "updating create_update_base_ami to add code to push ami info to levis") (user (login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-19T17:47:31Z") (updated_at . "2017-02-02T22:41:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31787") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31787") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31787.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31787.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31501") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31501/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31501/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31501/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31501") (id . 177173488) (number . 31501) (title . "Mt fix") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-15T13:17:11Z") (updated_at . "2017-02-02T22:42:00Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31501") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31501") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31501.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31501.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31492") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31492/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31492/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31492/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31492") (id . 177150335) (number . 31492) (title . "fixing syntax error") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-15T11:17:29Z") (updated_at . "2017-02-02T22:42:02Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31492") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31492") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31492.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31492.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31249") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31249/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31249/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31249/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31249") (id . 176590641) (number . 31249) (title . "Adding keys") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-13T09:19:42Z") (updated_at . "2017-02-02T22:42:05Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31249") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31249") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31249.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31249.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31075") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31075/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31075/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/31075/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31075") (id . 176029513) (number . 31075) (title . "big data is not for little data right ?") (user (login . "foobarbarfoo") (id . 1737526) (avatar_url . "https://avatars2.githubusercontent.com/u/1737526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/foobarbarfoo") (html_url . "https://github.com/foobarbarfoo") (followers_url . "https://api.github.com/users/foobarbarfoo/followers") (following_url . "https://api.github.com/users/foobarbarfoo/following{/other_user}") (gists_url . "https://api.github.com/users/foobarbarfoo/gists{/gist_id}") (starred_url . "https://api.github.com/users/foobarbarfoo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/foobarbarfoo/subscriptions") (organizations_url . "https://api.github.com/users/foobarbarfoo/orgs") (repos_url . "https://api.github.com/users/foobarbarfoo/repos") (events_url . "https://api.github.com/users/foobarbarfoo/events{/privacy}") (received_events_url . "https://api.github.com/users/foobarbarfoo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-09T14:54:36Z") (updated_at . "2017-02-02T22:42:09Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/31075") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/31075") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/31075.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/31075.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30987") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30987/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30987/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30987/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30987") (id . 175837358) (number . 30987) (title . "attempt to fix deployment issue for topology on integration evn") (user (login . "rbudhbhattiexpedia") (id . 8714681) (avatar_url . "https://avatars1.githubusercontent.com/u/8714681?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbudhbhattiexpedia") (html_url . "https://github.com/rbudhbhattiexpedia") (followers_url . "https://api.github.com/users/rbudhbhattiexpedia/followers") (following_url . "https://api.github.com/users/rbudhbhattiexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/rbudhbhattiexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbudhbhattiexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbudhbhattiexpedia/subscriptions") (organizations_url . "https://api.github.com/users/rbudhbhattiexpedia/orgs") (repos_url . "https://api.github.com/users/rbudhbhattiexpedia/repos") (events_url . "https://api.github.com/users/rbudhbhattiexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/rbudhbhattiexpedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-08T19:09:08Z") (updated_at . "2017-02-02T22:42:10Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30987") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30987") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30987.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30987.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30985") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30985/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30985/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30985/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30985") (id . 175831150) (number . 30985) (title . "AOA bot exe path fix") (user (login . "fuzan") (id . 1542837) (avatar_url . "https://avatars3.githubusercontent.com/u/1542837?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fuzan") (html_url . "https://github.com/fuzan") (followers_url . "https://api.github.com/users/fuzan/followers") (following_url . "https://api.github.com/users/fuzan/following{/other_user}") (gists_url . "https://api.github.com/users/fuzan/gists{/gist_id}") (starred_url . "https://api.github.com/users/fuzan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fuzan/subscriptions") (organizations_url . "https://api.github.com/users/fuzan/orgs") (repos_url . "https://api.github.com/users/fuzan/repos") (events_url . "https://api.github.com/users/fuzan/events{/privacy}") (received_events_url . "https://api.github.com/users/fuzan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-08T18:43:21Z") (updated_at . "2017-02-02T22:42:11Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30985") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30985") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30985.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30985.patch")) (body . "Vlad checked prod AOA windows service exe path as below:
here exe path on Prod server (CHEXPCSLOD01].ch.expeso.com) E:\\EC2\\EC2AOABot\\EC2AOABot.exe
so we have to change according to that
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30823") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30823/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30823/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30823/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30823") (id . 175441743) (number . 30823) (title . "Update config.json") (user (login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-07T08:24:39Z") (updated_at . "2017-02-02T22:42:12Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30823") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30823") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30823.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30823.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30760") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30760/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30760/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30760/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30760") (id . 175351869) (number . 30760) (title . "added roles for us-west-2") (user (login . "anilananthacharya") (id . 7916351) (avatar_url . "https://avatars0.githubusercontent.com/u/7916351?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anilananthacharya") (html_url . "https://github.com/anilananthacharya") (followers_url . "https://api.github.com/users/anilananthacharya/followers") (following_url . "https://api.github.com/users/anilananthacharya/following{/other_user}") (gists_url . "https://api.github.com/users/anilananthacharya/gists{/gist_id}") (starred_url . "https://api.github.com/users/anilananthacharya/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anilananthacharya/subscriptions") (organizations_url . "https://api.github.com/users/anilananthacharya/orgs") (repos_url . "https://api.github.com/users/anilananthacharya/repos") (events_url . "https://api.github.com/users/anilananthacharya/events{/privacy}") (received_events_url . "https://api.github.com/users/anilananthacharya/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-06T21:05:46Z") (updated_at . "2017-02-02T22:42:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30760") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30760") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30760.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30760.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30659") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30659/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30659/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30659/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30659") (id . 175137671) (number . 30659) (title . "role.yml") (user (login . "tawalsh") (id . 12540313) (avatar_url . "https://avatars2.githubusercontent.com/u/12540313?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tawalsh") (html_url . "https://github.com/tawalsh") (followers_url . "https://api.github.com/users/tawalsh/followers") (following_url . "https://api.github.com/users/tawalsh/following{/other_user}") (gists_url . "https://api.github.com/users/tawalsh/gists{/gist_id}") (starred_url . "https://api.github.com/users/tawalsh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tawalsh/subscriptions") (organizations_url . "https://api.github.com/users/tawalsh/orgs") (repos_url . "https://api.github.com/users/tawalsh/repos") (events_url . "https://api.github.com/users/tawalsh/events{/privacy}") (received_events_url . "https://api.github.com/users/tawalsh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-05T23:53:56Z") (updated_at . "2017-02-02T22:42:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30659") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30659") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30659.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30659.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30628") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30628/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30628/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30628/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30628") (id . 175000794) (number . 30628) (title . "Update config.json") (user (login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-05T06:02:09Z") (updated_at . "2017-02-02T22:42:15Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30628") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30628") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30628.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30628.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30627") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30627/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30627/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30627/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30627") (id . 175000721) (number . 30627) (title . "Update config.json") (user (login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-05T06:01:21Z") (updated_at . "2017-02-02T22:42:16Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30627") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30627") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30627.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30627.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30626") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30626/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30626/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30626/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30626") (id . 175000658) (number . 30626) (title . "Update config.json") (user (login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-05T06:00:29Z") (updated_at . "2017-02-02T22:42:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30626") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30626") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30626.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30626.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30624") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30624/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30624/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30624/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30624") (id . 175000557) (number . 30624) (title . "Update config.json") (user (login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-05T05:59:29Z") (updated_at . "2017-02-02T22:42:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30624") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30624") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30624.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30624.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30554") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30554/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30554/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30554/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30554") (id . 174811716) (number . 30554) (title . "Adding us-west-2 to deployment config in prod for flex-template-service") (user (login . "sayali10") (id . 6752141) (avatar_url . "https://avatars1.githubusercontent.com/u/6752141?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sayali10") (html_url . "https://github.com/sayali10") (followers_url . "https://api.github.com/users/sayali10/followers") (following_url . "https://api.github.com/users/sayali10/following{/other_user}") (gists_url . "https://api.github.com/users/sayali10/gists{/gist_id}") (starred_url . "https://api.github.com/users/sayali10/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sayali10/subscriptions") (organizations_url . "https://api.github.com/users/sayali10/orgs") (repos_url . "https://api.github.com/users/sayali10/repos") (events_url . "https://api.github.com/users/sayali10/events{/privacy}") (received_events_url . "https://api.github.com/users/sayali10/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-02T17:38:16Z") (updated_at . "2017-02-02T22:42:19Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30554") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30554") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30554.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30554.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30473") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30473/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30473/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30473/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30473") (id . 174626745) (number . 30473) (title . "Update config.json to support https") (user (login . "Nishant2909") (id . 14986638) (avatar_url . "https://avatars1.githubusercontent.com/u/14986638?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nishant2909") (html_url . "https://github.com/Nishant2909") (followers_url . "https://api.github.com/users/Nishant2909/followers") (following_url . "https://api.github.com/users/Nishant2909/following{/other_user}") (gists_url . "https://api.github.com/users/Nishant2909/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nishant2909/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nishant2909/subscriptions") (organizations_url . "https://api.github.com/users/Nishant2909/orgs") (repos_url . "https://api.github.com/users/Nishant2909/repos") (events_url . "https://api.github.com/users/Nishant2909/events{/privacy}") (received_events_url . "https://api.github.com/users/Nishant2909/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-01T21:09:32Z") (updated_at . "2017-02-02T22:42:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30473") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30473") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30473.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30473.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30466") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30466/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30466/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30466/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30466") (id . 174621685) (number . 30466) (title . "siteparameter-creator: add support for https connections") (user (login . "cpmurphy-ewe") (id . 17604184) (avatar_url . "https://avatars0.githubusercontent.com/u/17604184?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cpmurphy-ewe") (html_url . "https://github.com/cpmurphy-ewe") (followers_url . "https://api.github.com/users/cpmurphy-ewe/followers") (following_url . "https://api.github.com/users/cpmurphy-ewe/following{/other_user}") (gists_url . "https://api.github.com/users/cpmurphy-ewe/gists{/gist_id}") (starred_url . "https://api.github.com/users/cpmurphy-ewe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cpmurphy-ewe/subscriptions") (organizations_url . "https://api.github.com/users/cpmurphy-ewe/orgs") (repos_url . "https://api.github.com/users/cpmurphy-ewe/repos") (events_url . "https://api.github.com/users/cpmurphy-ewe/events{/privacy}") (received_events_url . "https://api.github.com/users/cpmurphy-ewe/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-01T20:46:13Z") (updated_at . "2017-02-02T22:42:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30466") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30466") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30466.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30466.patch")) (body . "Apparently there is an initiative to [remove insecure protocols
for all URLS](https://confluence/pages/viewpage.action?pageId=723720589).
As a first step, we should enable HTTPS on the ELB.  Once we prove
that works, we should update nexus-site-tooling config and verify
that it can talk HTTPS to the siteparameter-creator service.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30405") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30405/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30405/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30405/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30405") (id . 174462940) (number . 30405) (title . "conf change west2-west1") (user (login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-09-01T08:16:29Z") (updated_at . "2017-02-02T22:42:23Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30405") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30405") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30405.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30405.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30355") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30355/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30355/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30355/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/30355") (id . 174382065) (number . 30355) (title . "Repository is much, much too large: redesign into seperate modules") (user (login . "baylesj") (id . 1357263) (avatar_url . "https://avatars2.githubusercontent.com/u/1357263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/baylesj") (html_url . "https://github.com/baylesj") (followers_url . "https://api.github.com/users/baylesj/followers") (following_url . "https://api.github.com/users/baylesj/following{/other_user}") (gists_url . "https://api.github.com/users/baylesj/gists{/gist_id}") (starred_url . "https://api.github.com/users/baylesj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/baylesj/subscriptions") (organizations_url . "https://api.github.com/users/baylesj/orgs") (repos_url . "https://api.github.com/users/baylesj/repos") (events_url . "https://api.github.com/users/baylesj/events{/privacy}") (received_events_url . "https://api.github.com/users/baylesj/received_events") (type . "User") (site_admin)) (labels ((id . 14204531) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-08-31T21:21:39Z") (updated_at . "2016-10-28T14:08:26Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "This github repository is considerably too large. We put up with it for whatever reasons, some valid, but it would be better to split it up. I would propose splitting into a master repository that contains cookbooks, etc., and then have separate submodules/repos for site-cookbooks, perhaps split by part of organization (MTT, etc...) so that we have a more performant git system.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30339") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30339/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30339/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30339/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30339") (id . 174351567) (number . 30339) (title . "Updating check cookbook to use splunk instead of splunk forwarder") (user (login . "kumarvipul1707") (id . 12214995) (avatar_url . "https://avatars1.githubusercontent.com/u/12214995?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarvipul1707") (html_url . "https://github.com/kumarvipul1707") (followers_url . "https://api.github.com/users/kumarvipul1707/followers") (following_url . "https://api.github.com/users/kumarvipul1707/following{/other_user}") (gists_url . "https://api.github.com/users/kumarvipul1707/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarvipul1707/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarvipul1707/subscriptions") (organizations_url . "https://api.github.com/users/kumarvipul1707/orgs") (repos_url . "https://api.github.com/users/kumarvipul1707/repos") (events_url . "https://api.github.com/users/kumarvipul1707/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarvipul1707/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-31T19:00:54Z") (updated_at . "2017-02-02T22:42:24Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30339") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30339") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30339.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30339.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30334") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30334/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30334/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30334/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30334") (id . 174346893) (number . 30334) (title . "updated jar location") (user (login . "vysapanranjan") (id . 16240215) (avatar_url . "https://avatars1.githubusercontent.com/u/16240215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vysapanranjan") (html_url . "https://github.com/vysapanranjan") (followers_url . "https://api.github.com/users/vysapanranjan/followers") (following_url . "https://api.github.com/users/vysapanranjan/following{/other_user}") (gists_url . "https://api.github.com/users/vysapanranjan/gists{/gist_id}") (starred_url . "https://api.github.com/users/vysapanranjan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vysapanranjan/subscriptions") (organizations_url . "https://api.github.com/users/vysapanranjan/orgs") (repos_url . "https://api.github.com/users/vysapanranjan/repos") (events_url . "https://api.github.com/users/vysapanranjan/events{/privacy}") (received_events_url . "https://api.github.com/users/vysapanranjan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-31T18:40:23Z") (updated_at . "2017-02-02T22:42:25Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30334") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30334") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30334.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30334.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30280") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30280/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30280/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30280/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30280") (id . 174204253) (number . 30280) (title . "Update aws.rb") (user (login . "Nitish316") (id . 5319301) (avatar_url . "https://avatars3.githubusercontent.com/u/5319301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nitish316") (html_url . "https://github.com/Nitish316") (followers_url . "https://api.github.com/users/Nitish316/followers") (following_url . "https://api.github.com/users/Nitish316/following{/other_user}") (gists_url . "https://api.github.com/users/Nitish316/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nitish316/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nitish316/subscriptions") (organizations_url . "https://api.github.com/users/Nitish316/orgs") (repos_url . "https://api.github.com/users/Nitish316/repos") (events_url . "https://api.github.com/users/Nitish316/events{/privacy}") (received_events_url . "https://api.github.com/users/Nitish316/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-31T07:34:15Z") (updated_at . "2017-02-02T22:42:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30280") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30280") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30280.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30280.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30236") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30236/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30236/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30236/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30236") (id . 174076425) (number . 30236) (title . "Update config.json") (user (login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-30T17:21:17Z") (updated_at . "2017-02-02T22:42:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30236") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30236") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30236.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30236.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30085") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30085/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30085/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30085/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30085") (id . 173716687) (number . 30085) (title . "Revert \"Creating role for webrouter INT\"") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-29T07:53:52Z") (updated_at . "2017-02-02T22:42:28Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30085") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30085") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30085.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30085.patch")) (body . "Reverts ExpediaInc/exp-devops#30084
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30032") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30032/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30032/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/30032/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30032") (id . 173559844) (number . 30032) (title . "Update config.json") (user (login . "sandeepspatel") (id . 2301241) (avatar_url . "https://avatars0.githubusercontent.com/u/2301241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sandeepspatel") (html_url . "https://github.com/sandeepspatel") (followers_url . "https://api.github.com/users/sandeepspatel/followers") (following_url . "https://api.github.com/users/sandeepspatel/following{/other_user}") (gists_url . "https://api.github.com/users/sandeepspatel/gists{/gist_id}") (starred_url . "https://api.github.com/users/sandeepspatel/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sandeepspatel/subscriptions") (organizations_url . "https://api.github.com/users/sandeepspatel/orgs") (repos_url . "https://api.github.com/users/sandeepspatel/repos") (events_url . "https://api.github.com/users/sandeepspatel/events{/privacy}") (received_events_url . "https://api.github.com/users/sandeepspatel/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-26T23:04:08Z") (updated_at . "2017-02-02T22:42:29Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/30032") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/30032") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/30032.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/30032.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29795") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29795/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29795/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29795/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29795") (id . 172829877) (number . 29795) (title . "Uswest2 move") (user (login . "vasanthsubram") (id . 8943055) (avatar_url . "https://avatars0.githubusercontent.com/u/8943055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthsubram") (html_url . "https://github.com/vasanthsubram") (followers_url . "https://api.github.com/users/vasanthsubram/followers") (following_url . "https://api.github.com/users/vasanthsubram/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthsubram/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthsubram/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthsubram/subscriptions") (organizations_url . "https://api.github.com/users/vasanthsubram/orgs") (repos_url . "https://api.github.com/users/vasanthsubram/repos") (events_url . "https://api.github.com/users/vasanthsubram/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthsubram/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-23T23:18:34Z") (updated_at . "2017-02-02T22:42:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29795") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29795") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29795.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29795.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29763") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29763/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29763/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29763/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29763") (id . 172756279) (number . 29763) (title . "Update config.json") (user (login . "atimbro") (id . 14234831) (avatar_url . "https://avatars2.githubusercontent.com/u/14234831?v=4") (gravatar_id . "") (url . "https://api.github.com/users/atimbro") (html_url . "https://github.com/atimbro") (followers_url . "https://api.github.com/users/atimbro/followers") (following_url . "https://api.github.com/users/atimbro/following{/other_user}") (gists_url . "https://api.github.com/users/atimbro/gists{/gist_id}") (starred_url . "https://api.github.com/users/atimbro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/atimbro/subscriptions") (organizations_url . "https://api.github.com/users/atimbro/orgs") (repos_url . "https://api.github.com/users/atimbro/repos") (events_url . "https://api.github.com/users/atimbro/events{/privacy}") (received_events_url . "https://api.github.com/users/atimbro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-23T17:16:02Z") (updated_at . "2017-02-02T22:42:32Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29763") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29763") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29763.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29763.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29727") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29727/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29727/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29727/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29727") (id . 172618048) (number . 29727) (title . "Removing tasks apart from the first 100 and the running ones") (user (login . "sarpk") (id . 4318934) (avatar_url . "https://avatars1.githubusercontent.com/u/4318934?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sarpk") (html_url . "https://github.com/sarpk") (followers_url . "https://api.github.com/users/sarpk/followers") (following_url . "https://api.github.com/users/sarpk/following{/other_user}") (gists_url . "https://api.github.com/users/sarpk/gists{/gist_id}") (starred_url . "https://api.github.com/users/sarpk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sarpk/subscriptions") (organizations_url . "https://api.github.com/users/sarpk/orgs") (repos_url . "https://api.github.com/users/sarpk/repos") (events_url . "https://api.github.com/users/sarpk/events{/privacy}") (received_events_url . "https://api.github.com/users/sarpk/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-08-23T05:55:28Z") (updated_at . "2017-07-17T06:08:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29727") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29727") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29727.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29727.patch")) (body . "1. prod (east-1): https://trinity.tools.expedia.com/job/eweprod-a_deploy-docker-ecs_branch-tester/43/console
2. prod (west-1) : https://trinity.tools.expedia.com/job/eweprod-e_deploy-docker-ecs_branch-tester/
3. enable for ewetest environment now.
4. change in logic to read all clusters in same env to skip running task definition version
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29712") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29712/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29712/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29712/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29712") (id . 172574658) (number . 29712) (title . "testing out Describe Tags for Ruby") (user (login . "allenpsuner") (id . 10819359) (avatar_url . "https://avatars0.githubusercontent.com/u/10819359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/allenpsuner") (html_url . "https://github.com/allenpsuner") (followers_url . "https://api.github.com/users/allenpsuner/followers") (following_url . "https://api.github.com/users/allenpsuner/following{/other_user}") (gists_url . "https://api.github.com/users/allenpsuner/gists{/gist_id}") (starred_url . "https://api.github.com/users/allenpsuner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/allenpsuner/subscriptions") (organizations_url . "https://api.github.com/users/allenpsuner/orgs") (repos_url . "https://api.github.com/users/allenpsuner/repos") (events_url . "https://api.github.com/users/allenpsuner/events{/privacy}") (received_events_url . "https://api.github.com/users/allenpsuner/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-22T22:57:51Z") (updated_at . "2017-02-02T22:42:35Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29712") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29712") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29712.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29712.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29518") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29518/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29518/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29518/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29518") (id . 171973675) (number . 29518) (title . "recommended Gemfile") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels ((id . 14204531) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-08-18T18:52:17Z") (updated_at . "2017-02-02T22:42:36Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29518") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29518") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29518.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29518.patch")) (body . "Related to https://github.com/ExpediaInc/exp-devops/issues/29504 and https://jira/jira/browse/PIPELINE-2800.

This implies installing 2.2.4 and running bundle install / bundle update.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29504") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29504/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29504/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29504/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/29504") (id . 171950566) (number . 29504) (title . "exp-devops Gemfile ") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels ((id . 14204526) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/bug") (name . "bug") (color . "fc2929") (default . t)) ((id . 14204531) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-08-18T16:58:54Z") (updated_at . "2016-08-18T16:58:54Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "https://github.com/ExpediaInc/exp-devops/blob/master/chef-repo/Gemfile is using:
- a deprecated (EOL) Ruby version - no more bug fixes since February 2014 and security fixes since February 2015 (https://www.ruby-lang.org/en/news/2014/01/10/ruby-1-9-3-will-end-on-2015/)
  Current stable releases:

```
Stable releases:
Ruby 2.3.1
sha256: b87c738cb2032bf4920fef8e3864dc5cf8eae9d89d8d523ce0236945c5797dcd
Ruby 2.2.5
sha256: 30c4b31697a4ca4ea0c8db8ad30cf45e6690a0f09687e5d483c933c03ca335e3
```
- Really old json gem version, with security issues: json (~> 1.4) from 2010;
- Old aws-sdk gem: 1.63 (from Feb 2015, latest is 2.5.4);
- Old Chef gem: 10.28.2 (from October 2013), while we actually use latest 11.\\* (11.18.12), soon to move to 12.\\* (latest);

I'm sure there are plenty of other issues in there...
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29392") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29392/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29392/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29392/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29392") (id . 171614487) (number . 29392) (title . "setting cloneWorkspace to false for blackjack-adpixels praano job") (user (login . "raghvendra-iiita-work") (id . 11025692) (avatar_url . "https://avatars3.githubusercontent.com/u/11025692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raghvendra-iiita-work") (html_url . "https://github.com/raghvendra-iiita-work") (followers_url . "https://api.github.com/users/raghvendra-iiita-work/followers") (following_url . "https://api.github.com/users/raghvendra-iiita-work/following{/other_user}") (gists_url . "https://api.github.com/users/raghvendra-iiita-work/gists{/gist_id}") (starred_url . "https://api.github.com/users/raghvendra-iiita-work/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raghvendra-iiita-work/subscriptions") (organizations_url . "https://api.github.com/users/raghvendra-iiita-work/orgs") (repos_url . "https://api.github.com/users/raghvendra-iiita-work/repos") (events_url . "https://api.github.com/users/raghvendra-iiita-work/events{/privacy}") (received_events_url . "https://api.github.com/users/raghvendra-iiita-work/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-17T09:34:34Z") (updated_at . "2017-02-02T22:42:37Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29392") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29392") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29392.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29392.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29140") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29140/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29140/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29140/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29140") (id . 170924250) (number . 29140) (title . "changing recipe") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-12T17:52:56Z") (updated_at . "2017-02-02T22:42:38Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29140") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29140") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29140.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29140.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29105") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29105/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29105/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29105/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29105") (id . 170802569) (number . 29105) (title . "Update email poi flex module") (user (login . "karlringrose") (id . 5466743) (avatar_url . "https://avatars2.githubusercontent.com/u/5466743?v=4") (gravatar_id . "") (url . "https://api.github.com/users/karlringrose") (html_url . "https://github.com/karlringrose") (followers_url . "https://api.github.com/users/karlringrose/followers") (following_url . "https://api.github.com/users/karlringrose/following{/other_user}") (gists_url . "https://api.github.com/users/karlringrose/gists{/gist_id}") (starred_url . "https://api.github.com/users/karlringrose/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/karlringrose/subscriptions") (organizations_url . "https://api.github.com/users/karlringrose/orgs") (repos_url . "https://api.github.com/users/karlringrose/repos") (events_url . "https://api.github.com/users/karlringrose/events{/privacy}") (received_events_url . "https://api.github.com/users/karlringrose/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-08-12T05:39:53Z") (updated_at . "2017-02-02T22:42:39Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29105") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29105") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29105.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29105.patch")) (body . "From @harshiKapoor
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29080") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29080/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29080/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/29080/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29080") (id . 170751942) (number . 29080) (title . "Change LCS subnet as no more IPs available") (user (login . "pblanchette-expedia") (id . 18538586) (avatar_url . "https://avatars0.githubusercontent.com/u/18538586?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pblanchette-expedia") (html_url . "https://github.com/pblanchette-expedia") (followers_url . "https://api.github.com/users/pblanchette-expedia/followers") (following_url . "https://api.github.com/users/pblanchette-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/pblanchette-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/pblanchette-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pblanchette-expedia/subscriptions") (organizations_url . "https://api.github.com/users/pblanchette-expedia/orgs") (repos_url . "https://api.github.com/users/pblanchette-expedia/repos") (events_url . "https://api.github.com/users/pblanchette-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/pblanchette-expedia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-11T21:29:09Z") (updated_at . "2017-02-02T22:42:40Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/29080") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/29080") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/29080.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/29080.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28862") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28862/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28862/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28862/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28862") (id . 170239802) (number . 28862) (title . "Update role.yml") (user (login . "Vaithia") (id . 20691574) (avatar_url . "https://avatars2.githubusercontent.com/u/20691574?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Vaithia") (html_url . "https://github.com/Vaithia") (followers_url . "https://api.github.com/users/Vaithia/followers") (following_url . "https://api.github.com/users/Vaithia/following{/other_user}") (gists_url . "https://api.github.com/users/Vaithia/gists{/gist_id}") (starred_url . "https://api.github.com/users/Vaithia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Vaithia/subscriptions") (organizations_url . "https://api.github.com/users/Vaithia/orgs") (repos_url . "https://api.github.com/users/Vaithia/repos") (events_url . "https://api.github.com/users/Vaithia/events{/privacy}") (received_events_url . "https://api.github.com/users/Vaithia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-09T18:39:39Z") (updated_at . "2017-02-02T22:42:41Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28862") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28862") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28862.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28862.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28860") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28860/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28860/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28860/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28860") (id . 170238502) (number . 28860) (title . "Update role.yml") (user (login . "Vaithia") (id . 20691574) (avatar_url . "https://avatars2.githubusercontent.com/u/20691574?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Vaithia") (html_url . "https://github.com/Vaithia") (followers_url . "https://api.github.com/users/Vaithia/followers") (following_url . "https://api.github.com/users/Vaithia/following{/other_user}") (gists_url . "https://api.github.com/users/Vaithia/gists{/gist_id}") (starred_url . "https://api.github.com/users/Vaithia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Vaithia/subscriptions") (organizations_url . "https://api.github.com/users/Vaithia/orgs") (repos_url . "https://api.github.com/users/Vaithia/repos") (events_url . "https://api.github.com/users/Vaithia/events{/privacy}") (received_events_url . "https://api.github.com/users/Vaithia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-09T18:34:07Z") (updated_at . "2017-02-02T22:42:42Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28860") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28860") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28860.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28860.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28857") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28857/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28857/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28857/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28857") (id . 170233718) (number . 28857) (title . "Update config.json") (user (login . "Vaithia") (id . 20691574) (avatar_url . "https://avatars2.githubusercontent.com/u/20691574?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Vaithia") (html_url . "https://github.com/Vaithia") (followers_url . "https://api.github.com/users/Vaithia/followers") (following_url . "https://api.github.com/users/Vaithia/following{/other_user}") (gists_url . "https://api.github.com/users/Vaithia/gists{/gist_id}") (starred_url . "https://api.github.com/users/Vaithia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Vaithia/subscriptions") (organizations_url . "https://api.github.com/users/Vaithia/orgs") (repos_url . "https://api.github.com/users/Vaithia/repos") (events_url . "https://api.github.com/users/Vaithia/events{/privacy}") (received_events_url . "https://api.github.com/users/Vaithia/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-09T18:12:30Z") (updated_at . "2017-02-02T22:42:43Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28857") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28857") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28857.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28857.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28822") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28822/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28822/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28822/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28822") (id . 170082188) (number . 28822) (title . "Initial commit for graph changes") (user (login . "tawalsh") (id . 12540313) (avatar_url . "https://avatars2.githubusercontent.com/u/12540313?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tawalsh") (html_url . "https://github.com/tawalsh") (followers_url . "https://api.github.com/users/tawalsh/followers") (following_url . "https://api.github.com/users/tawalsh/following{/other_user}") (gists_url . "https://api.github.com/users/tawalsh/gists{/gist_id}") (starred_url . "https://api.github.com/users/tawalsh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tawalsh/subscriptions") (organizations_url . "https://api.github.com/users/tawalsh/orgs") (repos_url . "https://api.github.com/users/tawalsh/repos") (events_url . "https://api.github.com/users/tawalsh/events{/privacy}") (received_events_url . "https://api.github.com/users/tawalsh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-09T04:59:05Z") (updated_at . "2017-02-02T22:42:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28822") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28822") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28822.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28822.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28788") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28788/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28788/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28788/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28788") (id . 170004580) (number . 28788) (title . "Increasing urgencypricing supervisors from 2 to 3") (user (login . "jwecker") (id . 12177614) (avatar_url . "https://avatars3.githubusercontent.com/u/12177614?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jwecker") (html_url . "https://github.com/jwecker") (followers_url . "https://api.github.com/users/jwecker/followers") (following_url . "https://api.github.com/users/jwecker/following{/other_user}") (gists_url . "https://api.github.com/users/jwecker/gists{/gist_id}") (starred_url . "https://api.github.com/users/jwecker/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jwecker/subscriptions") (organizations_url . "https://api.github.com/users/jwecker/orgs") (repos_url . "https://api.github.com/users/jwecker/repos") (events_url . "https://api.github.com/users/jwecker/events{/privacy}") (received_events_url . "https://api.github.com/users/jwecker/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-08T19:29:15Z") (updated_at . "2017-02-02T22:42:45Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28788") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28788") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28788.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28788.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28727") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28727/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28727/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28727/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28727") (id . 169842575) (number . 28727) (title . "ignoring shared ami and environment from collector proxy") (user (login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-08T04:46:31Z") (updated_at . "2017-02-02T22:42:46Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28727") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28727") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28727.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28727.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28459") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28459/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28459/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28459/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28459") (id . 169016377) (number . 28459) (title . "Adding EPC-A data") (user (login . "gcraddock") (id . 7342396) (avatar_url . "https://avatars3.githubusercontent.com/u/7342396?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gcraddock") (html_url . "https://github.com/gcraddock") (followers_url . "https://api.github.com/users/gcraddock/followers") (following_url . "https://api.github.com/users/gcraddock/following{/other_user}") (gists_url . "https://api.github.com/users/gcraddock/gists{/gist_id}") (starred_url . "https://api.github.com/users/gcraddock/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gcraddock/subscriptions") (organizations_url . "https://api.github.com/users/gcraddock/orgs") (repos_url . "https://api.github.com/users/gcraddock/repos") (events_url . "https://api.github.com/users/gcraddock/events{/privacy}") (received_events_url . "https://api.github.com/users/gcraddock/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-08-02T23:55:59Z") (updated_at . "2017-02-02T22:42:47Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28459") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28459") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28459.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28459.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28226") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28226/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28226/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28226/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28226") (id . 168429892) (number . 28226) (title . "Add 'extra' ssh_configs") (user (login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-29T22:55:09Z") (updated_at . "2017-02-02T22:42:50Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28226") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28226") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28226.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28226.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28219") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28219/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28219/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28219/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28219") (id . 168415859) (number . 28219) (title . "changing the ecs lifecycle lambda ARN for all clusters in ewetest") (user (login . "allenpsuner") (id . 10819359) (avatar_url . "https://avatars0.githubusercontent.com/u/10819359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/allenpsuner") (html_url . "https://github.com/allenpsuner") (followers_url . "https://api.github.com/users/allenpsuner/followers") (following_url . "https://api.github.com/users/allenpsuner/following{/other_user}") (gists_url . "https://api.github.com/users/allenpsuner/gists{/gist_id}") (starred_url . "https://api.github.com/users/allenpsuner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/allenpsuner/subscriptions") (organizations_url . "https://api.github.com/users/allenpsuner/orgs") (repos_url . "https://api.github.com/users/allenpsuner/repos") (events_url . "https://api.github.com/users/allenpsuner/events{/privacy}") (received_events_url . "https://api.github.com/users/allenpsuner/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-07-29T21:14:41Z") (updated_at . "2017-02-02T22:42:52Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28219") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28219") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28219.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28219.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28064") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28064/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28064/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/28064/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28064") (id . 167962441) (number . 28064) (title . "Updating ECS Cloudwatch Alarm Names for cluster") (user (login . "allenpsuner") (id . 10819359) (avatar_url . "https://avatars0.githubusercontent.com/u/10819359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/allenpsuner") (html_url . "https://github.com/allenpsuner") (followers_url . "https://api.github.com/users/allenpsuner/followers") (following_url . "https://api.github.com/users/allenpsuner/following{/other_user}") (gists_url . "https://api.github.com/users/allenpsuner/gists{/gist_id}") (starred_url . "https://api.github.com/users/allenpsuner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/allenpsuner/subscriptions") (organizations_url . "https://api.github.com/users/allenpsuner/orgs") (repos_url . "https://api.github.com/users/allenpsuner/repos") (events_url . "https://api.github.com/users/allenpsuner/events{/privacy}") (received_events_url . "https://api.github.com/users/allenpsuner/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-27T21:35:43Z") (updated_at . "2017-02-02T22:42:53Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/28064") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/28064") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/28064.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/28064.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27913") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27913/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27913/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27913/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27913") (id . 167578042) (number . 27913) (title . "taas-hotels-dataloader recipe addition") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-26T10:49:36Z") (updated_at . "2017-02-02T22:42:54Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27913") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27913") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27913.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27913.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27910") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27910/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27910/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27910/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27910") (id . 167572392) (number . 27910) (title . "Revert \"Revert \"adding the recipe for taas-hotels-dataloader\"\"") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-26T10:17:59Z") (updated_at . "2017-02-02T22:42:55Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27910") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27910") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27910.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27910.patch")) (body . "Reverts ExpediaInc/exp-devops#27904
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27853") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27853/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27853/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27853/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27853") (id . 167478788) (number . 27853) (title . "SubnetChange") (user (login . "akalinski") (id . 7364731) (avatar_url . "https://avatars3.githubusercontent.com/u/7364731?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akalinski") (html_url . "https://github.com/akalinski") (followers_url . "https://api.github.com/users/akalinski/followers") (following_url . "https://api.github.com/users/akalinski/following{/other_user}") (gists_url . "https://api.github.com/users/akalinski/gists{/gist_id}") (starred_url . "https://api.github.com/users/akalinski/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akalinski/subscriptions") (organizations_url . "https://api.github.com/users/akalinski/orgs") (repos_url . "https://api.github.com/users/akalinski/repos") (events_url . "https://api.github.com/users/akalinski/events{/privacy}") (received_events_url . "https://api.github.com/users/akalinski/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-25T22:16:13Z") (updated_at . "2017-02-02T22:42:56Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27853") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27853") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27853.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27853.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27701") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27701/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27701/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27701/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27701") (id . 166913818) (number . 27701) (title . "Alias/version event source") (user (login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-21T20:46:19Z") (updated_at . "2017-02-02T22:42:57Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27701") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27701") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27701.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27701.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27608") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27608/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27608/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27608/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27608") (id . 166654151) (number . 27608) (title . "Auto shutdown the instance after 1 hour of operation") (user (login . "vmalarcon") (id . 5175032) (avatar_url . "https://avatars0.githubusercontent.com/u/5175032?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vmalarcon") (html_url . "https://github.com/vmalarcon") (followers_url . "https://api.github.com/users/vmalarcon/followers") (following_url . "https://api.github.com/users/vmalarcon/following{/other_user}") (gists_url . "https://api.github.com/users/vmalarcon/gists{/gist_id}") (starred_url . "https://api.github.com/users/vmalarcon/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vmalarcon/subscriptions") (organizations_url . "https://api.github.com/users/vmalarcon/orgs") (repos_url . "https://api.github.com/users/vmalarcon/repos") (events_url . "https://api.github.com/users/vmalarcon/events{/privacy}") (received_events_url . "https://api.github.com/users/vmalarcon/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-20T18:49:43Z") (updated_at . "2017-02-02T22:42:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27608") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27608") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27608.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27608.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27563") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27563/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27563/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27563/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27563") (id . 166489001) (number . 27563) (title . "JVM by default omits exceptions if they happen several times, turn that feature off;") (user (login . "marcoslopes") (id . 1785111) (avatar_url . "https://avatars3.githubusercontent.com/u/1785111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/marcoslopes") (html_url . "https://github.com/marcoslopes") (followers_url . "https://api.github.com/users/marcoslopes/followers") (following_url . "https://api.github.com/users/marcoslopes/following{/other_user}") (gists_url . "https://api.github.com/users/marcoslopes/gists{/gist_id}") (starred_url . "https://api.github.com/users/marcoslopes/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/marcoslopes/subscriptions") (organizations_url . "https://api.github.com/users/marcoslopes/orgs") (repos_url . "https://api.github.com/users/marcoslopes/repos") (events_url . "https://api.github.com/users/marcoslopes/events{/privacy}") (received_events_url . "https://api.github.com/users/marcoslopes/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-20T03:52:14Z") (updated_at . "2017-02-02T22:42:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27563") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27563") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27563.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27563.patch")) (body . "task card: https://trello.com/c/VGoX8tMi
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27493") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27493/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27493/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27493/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27493") (id . 166342750) (number . 27493) (title . "fix issue dependency") (user (login . "senli27") (id . 14896300) (avatar_url . "https://avatars0.githubusercontent.com/u/14896300?v=4") (gravatar_id . "") (url . "https://api.github.com/users/senli27") (html_url . "https://github.com/senli27") (followers_url . "https://api.github.com/users/senli27/followers") (following_url . "https://api.github.com/users/senli27/following{/other_user}") (gists_url . "https://api.github.com/users/senli27/gists{/gist_id}") (starred_url . "https://api.github.com/users/senli27/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/senli27/subscriptions") (organizations_url . "https://api.github.com/users/senli27/orgs") (repos_url . "https://api.github.com/users/senli27/repos") (events_url . "https://api.github.com/users/senli27/events{/privacy}") (received_events_url . "https://api.github.com/users/senli27/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-19T14:17:19Z") (updated_at . "2017-02-02T22:43:00Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27493") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27493") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27493.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27493.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27469") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27469/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27469/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27469/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27469") (id . 166250952) (number . 27469) (title . "changed source_repo config") (user (login . "vikash-exp") (id . 13537388) (avatar_url . "https://avatars3.githubusercontent.com/u/13537388?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vikash-exp") (html_url . "https://github.com/vikash-exp") (followers_url . "https://api.github.com/users/vikash-exp/followers") (following_url . "https://api.github.com/users/vikash-exp/following{/other_user}") (gists_url . "https://api.github.com/users/vikash-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vikash-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vikash-exp/subscriptions") (organizations_url . "https://api.github.com/users/vikash-exp/orgs") (repos_url . "https://api.github.com/users/vikash-exp/repos") (events_url . "https://api.github.com/users/vikash-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/vikash-exp/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-19T05:26:51Z") (updated_at . "2017-02-02T22:43:01Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27469") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27469") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27469.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27469.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27413") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27413/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27413/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27413/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27413") (id . 166021081) (number . 27413) (title . "flight stats service configuration changes") (user (login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-18T05:33:49Z") (updated_at . "2017-02-02T22:43:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27413") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27413") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27413.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27413.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27357") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27357/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27357/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/27357/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27357") (id . 165795844) (number . 27357) (title . "Update config.json") (user (login . "vgiguere") (id . 502406) (avatar_url . "https://avatars1.githubusercontent.com/u/502406?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vgiguere") (html_url . "https://github.com/vgiguere") (followers_url . "https://api.github.com/users/vgiguere/followers") (following_url . "https://api.github.com/users/vgiguere/following{/other_user}") (gists_url . "https://api.github.com/users/vgiguere/gists{/gist_id}") (starred_url . "https://api.github.com/users/vgiguere/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vgiguere/subscriptions") (organizations_url . "https://api.github.com/users/vgiguere/orgs") (repos_url . "https://api.github.com/users/vgiguere/repos") (events_url . "https://api.github.com/users/vgiguere/events{/privacy}") (received_events_url . "https://api.github.com/users/vgiguere/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-15T14:13:45Z") (updated_at . "2017-02-02T22:43:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/27357") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/27357") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/27357.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/27357.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26772") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26772/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26772/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26772/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26772") (id . 163786412) (number . 26772) (title . "Mtb deployment config") (user (login . "karlringrose") (id . 5466743) (avatar_url . "https://avatars2.githubusercontent.com/u/5466743?v=4") (gravatar_id . "") (url . "https://api.github.com/users/karlringrose") (html_url . "https://github.com/karlringrose") (followers_url . "https://api.github.com/users/karlringrose/followers") (following_url . "https://api.github.com/users/karlringrose/following{/other_user}") (gists_url . "https://api.github.com/users/karlringrose/gists{/gist_id}") (starred_url . "https://api.github.com/users/karlringrose/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/karlringrose/subscriptions") (organizations_url . "https://api.github.com/users/karlringrose/orgs") (repos_url . "https://api.github.com/users/karlringrose/repos") (events_url . "https://api.github.com/users/karlringrose/events{/privacy}") (received_events_url . "https://api.github.com/users/karlringrose/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-05T07:20:49Z") (updated_at . "2017-02-02T22:43:05Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26772") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26772") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26772.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26772.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26699") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26699/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26699/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26699/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26699") (id . 163601436) (number . 26699) (title . "ecs: Remove references to Docker 1.7") (user (login . "mattcallanan") (id . 876423) (avatar_url . "https://avatars1.githubusercontent.com/u/876423?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mattcallanan") (html_url . "https://github.com/mattcallanan") (followers_url . "https://api.github.com/users/mattcallanan/followers") (following_url . "https://api.github.com/users/mattcallanan/following{/other_user}") (gists_url . "https://api.github.com/users/mattcallanan/gists{/gist_id}") (starred_url . "https://api.github.com/users/mattcallanan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mattcallanan/subscriptions") (organizations_url . "https://api.github.com/users/mattcallanan/orgs") (repos_url . "https://api.github.com/users/mattcallanan/repos") (events_url . "https://api.github.com/users/mattcallanan/events{/privacy}") (received_events_url . "https://api.github.com/users/mattcallanan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-07-04T04:36:19Z") (updated_at . "2017-02-02T22:43:06Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26699") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26699") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26699.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26699.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26487") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26487/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26487/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26487/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26487") (id . 162842080) (number . 26487) (title . "New cluster request for jobtracker") (user (login . "avgupta") (id . 10864247) (avatar_url . "https://avatars0.githubusercontent.com/u/10864247?v=4") (gravatar_id . "") (url . "https://api.github.com/users/avgupta") (html_url . "https://github.com/avgupta") (followers_url . "https://api.github.com/users/avgupta/followers") (following_url . "https://api.github.com/users/avgupta/following{/other_user}") (gists_url . "https://api.github.com/users/avgupta/gists{/gist_id}") (starred_url . "https://api.github.com/users/avgupta/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/avgupta/subscriptions") (organizations_url . "https://api.github.com/users/avgupta/orgs") (repos_url . "https://api.github.com/users/avgupta/repos") (events_url . "https://api.github.com/users/avgupta/events{/privacy}") (received_events_url . "https://api.github.com/users/avgupta/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-29T05:11:18Z") (updated_at . "2017-02-02T22:43:08Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26487") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26487") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26487.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26487.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26452") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26452/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26452/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26452/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26452") (id . 162754049) (number . 26452) (title . "Ews car threadhold") (user (login . "NinaQ") (id . 13465673) (avatar_url . "https://avatars0.githubusercontent.com/u/13465673?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NinaQ") (html_url . "https://github.com/NinaQ") (followers_url . "https://api.github.com/users/NinaQ/followers") (following_url . "https://api.github.com/users/NinaQ/following{/other_user}") (gists_url . "https://api.github.com/users/NinaQ/gists{/gist_id}") (starred_url . "https://api.github.com/users/NinaQ/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NinaQ/subscriptions") (organizations_url . "https://api.github.com/users/NinaQ/orgs") (repos_url . "https://api.github.com/users/NinaQ/repos") (events_url . "https://api.github.com/users/NinaQ/events{/privacy}") (received_events_url . "https://api.github.com/users/NinaQ/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-28T18:28:29Z") (updated_at . "2017-02-02T22:43:09Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26452") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26452") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26452.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26452.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26285") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26285/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26285/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26285/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26285") (id . 162085834) (number . 26285) (title . "Update config.json") (user (login . "my3raj") (id . 18277183) (avatar_url . "https://avatars2.githubusercontent.com/u/18277183?v=4") (gravatar_id . "") (url . "https://api.github.com/users/my3raj") (html_url . "https://github.com/my3raj") (followers_url . "https://api.github.com/users/my3raj/followers") (following_url . "https://api.github.com/users/my3raj/following{/other_user}") (gists_url . "https://api.github.com/users/my3raj/gists{/gist_id}") (starred_url . "https://api.github.com/users/my3raj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/my3raj/subscriptions") (organizations_url . "https://api.github.com/users/my3raj/orgs") (repos_url . "https://api.github.com/users/my3raj/repos") (events_url . "https://api.github.com/users/my3raj/events{/privacy}") (received_events_url . "https://api.github.com/users/my3raj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "ashishagg") (id . 4974230) (avatar_url . "https://avatars3.githubusercontent.com/u/4974230?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishagg") (html_url . "https://github.com/ashishagg") (followers_url . "https://api.github.com/users/ashishagg/followers") (following_url . "https://api.github.com/users/ashishagg/following{/other_user}") (gists_url . "https://api.github.com/users/ashishagg/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishagg/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishagg/subscriptions") (organizations_url . "https://api.github.com/users/ashishagg/orgs") (repos_url . "https://api.github.com/users/ashishagg/repos") (events_url . "https://api.github.com/users/ashishagg/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishagg/received_events") (type . "User") (site_admin)) (assignees ((login . "ashishagg") (id . 4974230) (avatar_url . "https://avatars3.githubusercontent.com/u/4974230?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishagg") (html_url . "https://github.com/ashishagg") (followers_url . "https://api.github.com/users/ashishagg/followers") (following_url . "https://api.github.com/users/ashishagg/following{/other_user}") (gists_url . "https://api.github.com/users/ashishagg/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishagg/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishagg/subscriptions") (organizations_url . "https://api.github.com/users/ashishagg/orgs") (repos_url . "https://api.github.com/users/ashishagg/repos") (events_url . "https://api.github.com/users/ashishagg/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishagg/received_events") (type . "User") (site_admin))) (milestone) (comments . 1) (created_at . "2016-06-24T06:40:11Z") (updated_at . "2017-02-02T22:43:11Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26285") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26285") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26285.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26285.patch")) (body . "The differences I see in config jsons between int and test is very minimal.
Zones have been left the same.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26283") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26283/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26283/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26283/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26283") (id . 162084748) (number . 26283) (title . "Top dataloop") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-24T06:30:16Z") (updated_at . "2017-02-02T22:43:11Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26283") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26283") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26283.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26283.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26258") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26258/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26258/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26258/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26258") (id . 162021462) (number . 26258) (title . "Update vagrantfile for excom") (user (login . "jeremyscully") (id . 5140906) (avatar_url . "https://avatars0.githubusercontent.com/u/5140906?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jeremyscully") (html_url . "https://github.com/jeremyscully") (followers_url . "https://api.github.com/users/jeremyscully/followers") (following_url . "https://api.github.com/users/jeremyscully/following{/other_user}") (gists_url . "https://api.github.com/users/jeremyscully/gists{/gist_id}") (starred_url . "https://api.github.com/users/jeremyscully/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jeremyscully/subscriptions") (organizations_url . "https://api.github.com/users/jeremyscully/orgs") (repos_url . "https://api.github.com/users/jeremyscully/repos") (events_url . "https://api.github.com/users/jeremyscully/events{/privacy}") (received_events_url . "https://api.github.com/users/jeremyscully/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-23T20:57:22Z") (updated_at . "2017-02-02T22:43:12Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26258") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26258") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26258.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26258.patch")) (body . "Adding anicli and ipmapping mongodb vagrant boxes
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26243") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26243/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26243/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26243/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26243") (id . 161961920) (number . 26243) (title . "updating expweb release version") (user (login . "foobarbarfoo") (id . 1737526) (avatar_url . "https://avatars2.githubusercontent.com/u/1737526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/foobarbarfoo") (html_url . "https://github.com/foobarbarfoo") (followers_url . "https://api.github.com/users/foobarbarfoo/followers") (following_url . "https://api.github.com/users/foobarbarfoo/following{/other_user}") (gists_url . "https://api.github.com/users/foobarbarfoo/gists{/gist_id}") (starred_url . "https://api.github.com/users/foobarbarfoo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/foobarbarfoo/subscriptions") (organizations_url . "https://api.github.com/users/foobarbarfoo/orgs") (repos_url . "https://api.github.com/users/foobarbarfoo/repos") (events_url . "https://api.github.com/users/foobarbarfoo/events{/privacy}") (received_events_url . "https://api.github.com/users/foobarbarfoo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-23T16:08:19Z") (updated_at . "2017-02-02T22:43:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26243") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26243") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26243.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26243.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26101") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26101/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26101/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26101/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26101") (id . 161468590) (number . 26101) (title . "updating directory structure ") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-21T15:31:20Z") (updated_at . "2017-02-02T22:43:14Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26101") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26101") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26101.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26101.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26004") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26004/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26004/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/26004/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26004") (id . 161124898) (number . 26004) (title . "force acs to use snapshots in int") (user (login . "rirossi") (id . 16587511) (avatar_url . "https://avatars3.githubusercontent.com/u/16587511?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rirossi") (html_url . "https://github.com/rirossi") (followers_url . "https://api.github.com/users/rirossi/followers") (following_url . "https://api.github.com/users/rirossi/following{/other_user}") (gists_url . "https://api.github.com/users/rirossi/gists{/gist_id}") (starred_url . "https://api.github.com/users/rirossi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rirossi/subscriptions") (organizations_url . "https://api.github.com/users/rirossi/orgs") (repos_url . "https://api.github.com/users/rirossi/repos") (events_url . "https://api.github.com/users/rirossi/events{/privacy}") (received_events_url . "https://api.github.com/users/rirossi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-20T06:26:03Z") (updated_at . "2017-02-02T22:43:15Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/26004") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/26004") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/26004.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/26004.patch")) (body . "force acs to use snapshots in int
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25866") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25866/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25866/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25866/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25866") (id . 160596824) (number . 25866) (title . "[WIP] change all hipchat rooms related to abacus to Experiment Engineering …") (user (login . "EXPEaneparaczki") (id . 19188570) (avatar_url . "https://avatars2.githubusercontent.com/u/19188570?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEaneparaczki") (html_url . "https://github.com/EXPEaneparaczki") (followers_url . "https://api.github.com/users/EXPEaneparaczki/followers") (following_url . "https://api.github.com/users/EXPEaneparaczki/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEaneparaczki/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEaneparaczki/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEaneparaczki/subscriptions") (organizations_url . "https://api.github.com/users/EXPEaneparaczki/orgs") (repos_url . "https://api.github.com/users/EXPEaneparaczki/repos") (events_url . "https://api.github.com/users/EXPEaneparaczki/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEaneparaczki/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-16T07:39:55Z") (updated_at . "2017-02-02T22:43:16Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25866") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25866") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25866.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25866.patch")) (body . "…Notifications
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25715") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25715/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25715/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25715/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25715") (id . 160093134) (number . 25715) (title . "Making two ECS task defs instead of one for canary and release.") (user (login . "astewart") (id . 715599) (avatar_url . "https://avatars3.githubusercontent.com/u/715599?v=4") (gravatar_id . "") (url . "https://api.github.com/users/astewart") (html_url . "https://github.com/astewart") (followers_url . "https://api.github.com/users/astewart/followers") (following_url . "https://api.github.com/users/astewart/following{/other_user}") (gists_url . "https://api.github.com/users/astewart/gists{/gist_id}") (starred_url . "https://api.github.com/users/astewart/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/astewart/subscriptions") (organizations_url . "https://api.github.com/users/astewart/orgs") (repos_url . "https://api.github.com/users/astewart/repos") (events_url . "https://api.github.com/users/astewart/events{/privacy}") (received_events_url . "https://api.github.com/users/astewart/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-14T04:03:21Z") (updated_at . "2017-02-02T22:43:17Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25715") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25715") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25715.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25715.patch")) (body . "Do Not Merge.  Just a first pass.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25606") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25606/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25606/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25606/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25606") (id . 159702118) (number . 25606) (title . "Adding proper app_type to the templates") (user (login . "nitishagar") (id . 1592163) (avatar_url . "https://avatars0.githubusercontent.com/u/1592163?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nitishagar") (html_url . "https://github.com/nitishagar") (followers_url . "https://api.github.com/users/nitishagar/followers") (following_url . "https://api.github.com/users/nitishagar/following{/other_user}") (gists_url . "https://api.github.com/users/nitishagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/nitishagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nitishagar/subscriptions") (organizations_url . "https://api.github.com/users/nitishagar/orgs") (repos_url . "https://api.github.com/users/nitishagar/repos") (events_url . "https://api.github.com/users/nitishagar/events{/privacy}") (received_events_url . "https://api.github.com/users/nitishagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-10T19:09:55Z") (updated_at . "2017-02-02T22:43:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25606") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25606") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25606.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25606.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25266") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25266/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25266/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25266/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25266") (id . 158391739) (number . 25266) (title . "fixing the broken file") (user (login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-03T15:21:25Z") (updated_at . "2017-02-02T22:43:20Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25266") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25266") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25266.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25266.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25221") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25221/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25221/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25221/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25221") (id . 158253863) (number . 25221) (title . "Creating again pull request just so others can contribute to the code") (user (login . "EXPEchdesai") (id . 15839628) (avatar_url . "https://avatars3.githubusercontent.com/u/15839628?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEchdesai") (html_url . "https://github.com/EXPEchdesai") (followers_url . "https://api.github.com/users/EXPEchdesai/followers") (following_url . "https://api.github.com/users/EXPEchdesai/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEchdesai/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEchdesai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEchdesai/subscriptions") (organizations_url . "https://api.github.com/users/EXPEchdesai/orgs") (repos_url . "https://api.github.com/users/EXPEchdesai/repos") (events_url . "https://api.github.com/users/EXPEchdesai/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEchdesai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-02T22:27:49Z") (updated_at . "2017-02-02T22:43:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25221") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25221") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25221.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25221.patch")) (body . "Reverts ExpediaInc/exp-devops#25219
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25182") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25182/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25182/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25182/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25182") (id . 158047647) (number . 25182) (title . "Updating dhcp for expweb aws") (user (login . "foobarbarfoo") (id . 1737526) (avatar_url . "https://avatars2.githubusercontent.com/u/1737526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/foobarbarfoo") (html_url . "https://github.com/foobarbarfoo") (followers_url . "https://api.github.com/users/foobarbarfoo/followers") (following_url . "https://api.github.com/users/foobarbarfoo/following{/other_user}") (gists_url . "https://api.github.com/users/foobarbarfoo/gists{/gist_id}") (starred_url . "https://api.github.com/users/foobarbarfoo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/foobarbarfoo/subscriptions") (organizations_url . "https://api.github.com/users/foobarbarfoo/orgs") (repos_url . "https://api.github.com/users/foobarbarfoo/repos") (events_url . "https://api.github.com/users/foobarbarfoo/events{/privacy}") (received_events_url . "https://api.github.com/users/foobarbarfoo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-02T02:37:07Z") (updated_at . "2017-02-02T22:43:24Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25182") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25182") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25182.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25182.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25102") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25102/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25102/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/25102/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25102") (id . 157825511) (number . 25102) (title . "adding redo ec2 to ecs migration option") (user (login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-06-01T05:22:32Z") (updated_at . "2017-02-02T22:43:26Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/25102") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/25102") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/25102.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/25102.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24973") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24973/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24973/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24973/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24973") (id . 157255472) (number . 24973) (title . "changing the subnet back to the old one") (user (login . "exp-snatesan") (id . 4307447) (avatar_url . "https://avatars2.githubusercontent.com/u/4307447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-snatesan") (html_url . "https://github.com/exp-snatesan") (followers_url . "https://api.github.com/users/exp-snatesan/followers") (following_url . "https://api.github.com/users/exp-snatesan/following{/other_user}") (gists_url . "https://api.github.com/users/exp-snatesan/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-snatesan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-snatesan/subscriptions") (organizations_url . "https://api.github.com/users/exp-snatesan/orgs") (repos_url . "https://api.github.com/users/exp-snatesan/repos") (events_url . "https://api.github.com/users/exp-snatesan/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-snatesan/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-05-27T17:32:09Z") (updated_at . "2017-02-02T22:43:27Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/24973") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24973") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/24973.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/24973.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24491") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24491/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24491/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24491/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24491") (id . 155537563) (number . 24491) (title . "Yp/add one field in databag") (user (login . "yanizhang") (id . 8484128) (avatar_url . "https://avatars0.githubusercontent.com/u/8484128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yanizhang") (html_url . "https://github.com/yanizhang") (followers_url . "https://api.github.com/users/yanizhang/followers") (following_url . "https://api.github.com/users/yanizhang/following{/other_user}") (gists_url . "https://api.github.com/users/yanizhang/gists{/gist_id}") (starred_url . "https://api.github.com/users/yanizhang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yanizhang/subscriptions") (organizations_url . "https://api.github.com/users/yanizhang/orgs") (repos_url . "https://api.github.com/users/yanizhang/repos") (events_url . "https://api.github.com/users/yanizhang/events{/privacy}") (received_events_url . "https://api.github.com/users/yanizhang/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-05-18T15:51:32Z") (updated_at . "2017-02-02T22:43:30Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/24491") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24491") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/24491.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/24491.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24075") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24075/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24075/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24075/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24075") (id . 154069320) (number . 24075) (title . "adding engine version") (user (login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-05-10T18:01:47Z") (updated_at . "2017-02-02T22:43:32Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/24075") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24075") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/24075.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/24075.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24023") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24023/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24023/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/24023/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24023") (id . 153827937) (number . 24023) (title . "Expweb config") (user (login . "ruroy") (id . 7848133) (avatar_url . "https://avatars3.githubusercontent.com/u/7848133?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ruroy") (html_url . "https://github.com/ruroy") (followers_url . "https://api.github.com/users/ruroy/followers") (following_url . "https://api.github.com/users/ruroy/following{/other_user}") (gists_url . "https://api.github.com/users/ruroy/gists{/gist_id}") (starred_url . "https://api.github.com/users/ruroy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ruroy/subscriptions") (organizations_url . "https://api.github.com/users/ruroy/orgs") (repos_url . "https://api.github.com/users/ruroy/repos") (events_url . "https://api.github.com/users/ruroy/events{/privacy}") (received_events_url . "https://api.github.com/users/ruroy/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-05-09T17:30:16Z") (updated_at . "2017-02-02T22:43:33Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/24023") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/24023") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/24023.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/24023.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23609") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23609/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23609/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23609/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23609") (id . 151973524) (number . 23609) (title . "Revert \"Kstaiger/lambda vpc\"") (user (login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-29T21:34:42Z") (updated_at . "2017-02-02T22:43:34Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/23609") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23609") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/23609.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/23609.patch")) (body . "Reverts ExpediaInc/exp-devops#23494
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23412") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23412/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23412/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23412/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23412") (id . 151250022) (number . 23412) (title . "Don't merge this, just for conversation.") (user (login . "mroark-exp") (id . 16804850) (avatar_url . "https://avatars2.githubusercontent.com/u/16804850?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mroark-exp") (html_url . "https://github.com/mroark-exp") (followers_url . "https://api.github.com/users/mroark-exp/followers") (following_url . "https://api.github.com/users/mroark-exp/following{/other_user}") (gists_url . "https://api.github.com/users/mroark-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/mroark-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mroark-exp/subscriptions") (organizations_url . "https://api.github.com/users/mroark-exp/orgs") (repos_url . "https://api.github.com/users/mroark-exp/repos") (events_url . "https://api.github.com/users/mroark-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/mroark-exp/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-04-26T22:01:06Z") (updated_at . "2017-02-02T23:31:10Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/23412") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23412") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/23412.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/23412.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23376") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23376/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23376/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23376/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23376") (id . 151165993) (number . 23376) (title . "Add alerting lambda programmatically") (user (login . "malonem") (id . 2077805) (avatar_url . "https://avatars1.githubusercontent.com/u/2077805?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malonem") (html_url . "https://github.com/malonem") (followers_url . "https://api.github.com/users/malonem/followers") (following_url . "https://api.github.com/users/malonem/following{/other_user}") (gists_url . "https://api.github.com/users/malonem/gists{/gist_id}") (starred_url . "https://api.github.com/users/malonem/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malonem/subscriptions") (organizations_url . "https://api.github.com/users/malonem/orgs") (repos_url . "https://api.github.com/users/malonem/repos") (events_url . "https://api.github.com/users/malonem/events{/privacy}") (received_events_url . "https://api.github.com/users/malonem/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-26T15:29:33Z") (updated_at . "2017-02-02T22:43:36Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/23376") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23376") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/23376.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/23376.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23351") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23351/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23351/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23351/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23351") (id . 151043801) (number . 23351) (title . "Ews edgy apim") (user (login . "kgolodets") (id . 17054091) (avatar_url . "https://avatars1.githubusercontent.com/u/17054091?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kgolodets") (html_url . "https://github.com/kgolodets") (followers_url . "https://api.github.com/users/kgolodets/followers") (following_url . "https://api.github.com/users/kgolodets/following{/other_user}") (gists_url . "https://api.github.com/users/kgolodets/gists{/gist_id}") (starred_url . "https://api.github.com/users/kgolodets/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kgolodets/subscriptions") (organizations_url . "https://api.github.com/users/kgolodets/orgs") (repos_url . "https://api.github.com/users/kgolodets/repos") (events_url . "https://api.github.com/users/kgolodets/events{/privacy}") (received_events_url . "https://api.github.com/users/kgolodets/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-26T05:19:06Z") (updated_at . "2017-02-02T22:43:36Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/23351") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23351") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/23351.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/23351.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23149") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23149/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23149/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/23149/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23149") (id . 150010503) (number . 23149) (title . "Adding security key for doppler-d") (user (login . "ashishagg") (id . 4974230) (avatar_url . "https://avatars3.githubusercontent.com/u/4974230?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishagg") (html_url . "https://github.com/ashishagg") (followers_url . "https://api.github.com/users/ashishagg/followers") (following_url . "https://api.github.com/users/ashishagg/following{/other_user}") (gists_url . "https://api.github.com/users/ashishagg/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishagg/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishagg/subscriptions") (organizations_url . "https://api.github.com/users/ashishagg/orgs") (repos_url . "https://api.github.com/users/ashishagg/repos") (events_url . "https://api.github.com/users/ashishagg/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishagg/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-21T08:53:06Z") (updated_at . "2017-02-02T22:43:37Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/23149") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/23149") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/23149.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/23149.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22988") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22988/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22988/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22988/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22988") (id . 149421300) (number . 22988) (title . "Changing to latest release version") (user (login . "aamitsingh") (id . 17641407) (avatar_url . "https://avatars2.githubusercontent.com/u/17641407?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aamitsingh") (html_url . "https://github.com/aamitsingh") (followers_url . "https://api.github.com/users/aamitsingh/followers") (following_url . "https://api.github.com/users/aamitsingh/following{/other_user}") (gists_url . "https://api.github.com/users/aamitsingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/aamitsingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aamitsingh/subscriptions") (organizations_url . "https://api.github.com/users/aamitsingh/orgs") (repos_url . "https://api.github.com/users/aamitsingh/repos") (events_url . "https://api.github.com/users/aamitsingh/events{/privacy}") (received_events_url . "https://api.github.com/users/aamitsingh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-19T10:45:55Z") (updated_at . "2017-02-02T22:43:38Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22988") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22988") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22988.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22988.patch")) (body . "Changing artifactVersion & repositoryName
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22739") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22739/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22739/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22739/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22739") (id . 148178522) (number . 22739) (title . "Trying to remove the tomcat_next flags") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-04-13T20:44:15Z") (updated_at . "2017-02-02T22:43:40Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22739") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22739") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22739.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22739.patch")) (body . "Trying to remove the tomcat_next flags.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22610") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22610/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22610/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22610/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22610") (id . 147600801) (number . 22610) (title . "We don't need to execute indexesadd anymore") (user (login . "kzmeyao") (id . 2180692) (avatar_url . "https://avatars2.githubusercontent.com/u/2180692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kzmeyao") (html_url . "https://github.com/kzmeyao") (followers_url . "https://api.github.com/users/kzmeyao/followers") (following_url . "https://api.github.com/users/kzmeyao/following{/other_user}") (gists_url . "https://api.github.com/users/kzmeyao/gists{/gist_id}") (starred_url . "https://api.github.com/users/kzmeyao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kzmeyao/subscriptions") (organizations_url . "https://api.github.com/users/kzmeyao/orgs") (repos_url . "https://api.github.com/users/kzmeyao/repos") (events_url . "https://api.github.com/users/kzmeyao/events{/privacy}") (received_events_url . "https://api.github.com/users/kzmeyao/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-04-12T00:55:38Z") (updated_at . "2017-02-02T22:43:41Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22610") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22610") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22610.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22610.patch")) (body . "We have mongodb engineers create indexes for us instead of relying on deployments to do this.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22489") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22489/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22489/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22489/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22489") (id . 146996085) (number . 22489) (title . "Agadhave") (user (login . "AnujGadhave") (id . 14205605) (avatar_url . "https://avatars2.githubusercontent.com/u/14205605?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AnujGadhave") (html_url . "https://github.com/AnujGadhave") (followers_url . "https://api.github.com/users/AnujGadhave/followers") (following_url . "https://api.github.com/users/AnujGadhave/following{/other_user}") (gists_url . "https://api.github.com/users/AnujGadhave/gists{/gist_id}") (starred_url . "https://api.github.com/users/AnujGadhave/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AnujGadhave/subscriptions") (organizations_url . "https://api.github.com/users/AnujGadhave/orgs") (repos_url . "https://api.github.com/users/AnujGadhave/repos") (events_url . "https://api.github.com/users/AnujGadhave/events{/privacy}") (received_events_url . "https://api.github.com/users/AnujGadhave/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-08T18:00:13Z") (updated_at . "2017-02-02T22:43:43Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22489") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22489") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22489.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22489.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22364") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22364/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22364/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22364/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22364") (id . 146548969) (number . 22364) (title . "Update job.yml") (user (login . "ankitsjain22") (id . 17722121) (avatar_url . "https://avatars1.githubusercontent.com/u/17722121?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankitsjain22") (html_url . "https://github.com/ankitsjain22") (followers_url . "https://api.github.com/users/ankitsjain22/followers") (following_url . "https://api.github.com/users/ankitsjain22/following{/other_user}") (gists_url . "https://api.github.com/users/ankitsjain22/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankitsjain22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankitsjain22/subscriptions") (organizations_url . "https://api.github.com/users/ankitsjain22/orgs") (repos_url . "https://api.github.com/users/ankitsjain22/repos") (events_url . "https://api.github.com/users/ankitsjain22/events{/privacy}") (received_events_url . "https://api.github.com/users/ankitsjain22/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-07T08:44:39Z") (updated_at . "2017-02-02T22:43:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22364") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22364") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22364.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22364.patch")) (body . "some syntax issue
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22239") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22239/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22239/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22239/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22239") (id . 146078324) (number . 22239) (title . "allowing older roles to be reused and removing role deletion on cluster removal") (user (login . "raghvendra-iiita-work") (id . 11025692) (avatar_url . "https://avatars3.githubusercontent.com/u/11025692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raghvendra-iiita-work") (html_url . "https://github.com/raghvendra-iiita-work") (followers_url . "https://api.github.com/users/raghvendra-iiita-work/followers") (following_url . "https://api.github.com/users/raghvendra-iiita-work/following{/other_user}") (gists_url . "https://api.github.com/users/raghvendra-iiita-work/gists{/gist_id}") (starred_url . "https://api.github.com/users/raghvendra-iiita-work/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raghvendra-iiita-work/subscriptions") (organizations_url . "https://api.github.com/users/raghvendra-iiita-work/orgs") (repos_url . "https://api.github.com/users/raghvendra-iiita-work/repos") (events_url . "https://api.github.com/users/raghvendra-iiita-work/events{/privacy}") (received_events_url . "https://api.github.com/users/raghvendra-iiita-work/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-04-05T18:51:46Z") (updated_at . "2017-02-02T22:43:45Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22239") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22239") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22239.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22239.patch")) (body . "This will help users who get changes in role done and lose them on deleting cluster
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22148") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22148/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22148/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22148/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22148") (id . 144482481) (number . 22148) (title . "rotating prod aws keys") (user (login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-30T07:04:26Z") (updated_at . "2017-02-02T22:43:46Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22148") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22148") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22148.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22148.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22142") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22142/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22142/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22142/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22142") (id . 143585999) (number . 22142) (title . "Fix jenkins admin and super user permission problem.") (user (login . "mfeibig") (id . 18014422) (avatar_url . "https://avatars3.githubusercontent.com/u/18014422?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mfeibig") (html_url . "https://github.com/mfeibig") (followers_url . "https://api.github.com/users/mfeibig/followers") (following_url . "https://api.github.com/users/mfeibig/following{/other_user}") (gists_url . "https://api.github.com/users/mfeibig/gists{/gist_id}") (starred_url . "https://api.github.com/users/mfeibig/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mfeibig/subscriptions") (organizations_url . "https://api.github.com/users/mfeibig/orgs") (repos_url . "https://api.github.com/users/mfeibig/repos") (events_url . "https://api.github.com/users/mfeibig/events{/privacy}") (received_events_url . "https://api.github.com/users/mfeibig/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-25T20:11:24Z") (updated_at . "2017-02-02T22:43:47Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22142") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22142") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22142.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22142.patch")) (body . "The current template prepends ROLE_ to the EWE Jenkins Admins, and EWE Jenkins Super users which breaks LDAPs ability to look up the SG. This has the side effect of not allowing persons who are in the groups to have the correct rights.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22122") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22122/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22122/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/22122/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22122") (id . 142506591) (number . 22122) (title . "reverting back coco-service timeout change") (user (login . "lalwanirenu") (id . 16724929) (avatar_url . "https://avatars0.githubusercontent.com/u/16724929?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lalwanirenu") (html_url . "https://github.com/lalwanirenu") (followers_url . "https://api.github.com/users/lalwanirenu/followers") (following_url . "https://api.github.com/users/lalwanirenu/following{/other_user}") (gists_url . "https://api.github.com/users/lalwanirenu/gists{/gist_id}") (starred_url . "https://api.github.com/users/lalwanirenu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lalwanirenu/subscriptions") (organizations_url . "https://api.github.com/users/lalwanirenu/orgs") (repos_url . "https://api.github.com/users/lalwanirenu/repos") (events_url . "https://api.github.com/users/lalwanirenu/events{/privacy}") (received_events_url . "https://api.github.com/users/lalwanirenu/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-22T00:06:58Z") (updated_at . "2017-02-02T22:43:48Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/22122") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/22122") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/22122.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/22122.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21951") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21951/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21951/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21951/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21951") (id . 141519291) (number . 21951) (title . "Zookeeperupgrade") (user (login . "rambabunimmala") (id . 2329492) (avatar_url . "https://avatars3.githubusercontent.com/u/2329492?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rambabunimmala") (html_url . "https://github.com/rambabunimmala") (followers_url . "https://api.github.com/users/rambabunimmala/followers") (following_url . "https://api.github.com/users/rambabunimmala/following{/other_user}") (gists_url . "https://api.github.com/users/rambabunimmala/gists{/gist_id}") (starred_url . "https://api.github.com/users/rambabunimmala/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rambabunimmala/subscriptions") (organizations_url . "https://api.github.com/users/rambabunimmala/orgs") (repos_url . "https://api.github.com/users/rambabunimmala/repos") (events_url . "https://api.github.com/users/rambabunimmala/events{/privacy}") (received_events_url . "https://api.github.com/users/rambabunimmala/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-17T08:57:51Z") (updated_at . "2017-02-02T22:43:49Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21951") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21951") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21951.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21951.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21936") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21936/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21936/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21936/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21936") (id . 141463891) (number . 21936) (title . "updating asg settings for collector") (user (login . "vnamuduri") (id . 2289444) (avatar_url . "https://avatars1.githubusercontent.com/u/2289444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vnamuduri") (html_url . "https://github.com/vnamuduri") (followers_url . "https://api.github.com/users/vnamuduri/followers") (following_url . "https://api.github.com/users/vnamuduri/following{/other_user}") (gists_url . "https://api.github.com/users/vnamuduri/gists{/gist_id}") (starred_url . "https://api.github.com/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vnamuduri/subscriptions") (organizations_url . "https://api.github.com/users/vnamuduri/orgs") (repos_url . "https://api.github.com/users/vnamuduri/repos") (events_url . "https://api.github.com/users/vnamuduri/events{/privacy}") (received_events_url . "https://api.github.com/users/vnamuduri/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-17T02:51:03Z") (updated_at . "2017-02-02T22:43:49Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21936") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21936") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21936.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21936.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21834") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21834/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21834/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21834/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21834") (id . 140890737) (number . 21834) (title . "Modified SabreProviderAdapter spoofer service url") (user (login . "manukbenjamin") (id . 17172207) (avatar_url . "https://avatars3.githubusercontent.com/u/17172207?v=4") (gravatar_id . "") (url . "https://api.github.com/users/manukbenjamin") (html_url . "https://github.com/manukbenjamin") (followers_url . "https://api.github.com/users/manukbenjamin/followers") (following_url . "https://api.github.com/users/manukbenjamin/following{/other_user}") (gists_url . "https://api.github.com/users/manukbenjamin/gists{/gist_id}") (starred_url . "https://api.github.com/users/manukbenjamin/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/manukbenjamin/subscriptions") (organizations_url . "https://api.github.com/users/manukbenjamin/orgs") (repos_url . "https://api.github.com/users/manukbenjamin/repos") (events_url . "https://api.github.com/users/manukbenjamin/events{/privacy}") (received_events_url . "https://api.github.com/users/manukbenjamin/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-15T06:59:19Z") (updated_at . "2017-02-02T22:43:51Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21834") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21834") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21834.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21834.patch")) (body . "Modified SabreProviderAdapter spoofer service url : http://air-spoofer-service.us-west-2.test.expedia.com/soap
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21796") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21796/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21796/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21796/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21796") (id . 140709132) (number . 21796) (title . "Azure2") (user (login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-14T15:33:45Z") (updated_at . "2017-02-02T22:43:51Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21796") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21796") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21796.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21796.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21716") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21716/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21716/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21716/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21716") (id . 140085845) (number . 21716) (title . "Change reviews-rtr-flights to WT and piops") (user (login . "tawalsh") (id . 12540313) (avatar_url . "https://avatars2.githubusercontent.com/u/12540313?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tawalsh") (html_url . "https://github.com/tawalsh") (followers_url . "https://api.github.com/users/tawalsh/followers") (following_url . "https://api.github.com/users/tawalsh/following{/other_user}") (gists_url . "https://api.github.com/users/tawalsh/gists{/gist_id}") (starred_url . "https://api.github.com/users/tawalsh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tawalsh/subscriptions") (organizations_url . "https://api.github.com/users/tawalsh/orgs") (repos_url . "https://api.github.com/users/tawalsh/repos") (events_url . "https://api.github.com/users/tawalsh/events{/privacy}") (received_events_url . "https://api.github.com/users/tawalsh/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "mintekhab") (id . 4941055) (avatar_url . "https://avatars2.githubusercontent.com/u/4941055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mintekhab") (html_url . "https://github.com/mintekhab") (followers_url . "https://api.github.com/users/mintekhab/followers") (following_url . "https://api.github.com/users/mintekhab/following{/other_user}") (gists_url . "https://api.github.com/users/mintekhab/gists{/gist_id}") (starred_url . "https://api.github.com/users/mintekhab/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mintekhab/subscriptions") (organizations_url . "https://api.github.com/users/mintekhab/orgs") (repos_url . "https://api.github.com/users/mintekhab/repos") (events_url . "https://api.github.com/users/mintekhab/events{/privacy}") (received_events_url . "https://api.github.com/users/mintekhab/received_events") (type . "User") (site_admin)) (assignees ((login . "mintekhab") (id . 4941055) (avatar_url . "https://avatars2.githubusercontent.com/u/4941055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mintekhab") (html_url . "https://github.com/mintekhab") (followers_url . "https://api.github.com/users/mintekhab/followers") (following_url . "https://api.github.com/users/mintekhab/following{/other_user}") (gists_url . "https://api.github.com/users/mintekhab/gists{/gist_id}") (starred_url . "https://api.github.com/users/mintekhab/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mintekhab/subscriptions") (organizations_url . "https://api.github.com/users/mintekhab/orgs") (repos_url . "https://api.github.com/users/mintekhab/repos") (events_url . "https://api.github.com/users/mintekhab/events{/privacy}") (received_events_url . "https://api.github.com/users/mintekhab/received_events") (type . "User") (site_admin))) (milestone) (comments . 1) (created_at . "2016-03-11T04:51:24Z") (updated_at . "2017-02-02T22:43:52Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21716") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21716") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21716.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21716.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21615") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21615/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21615/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21615/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21615") (id . 139601536) (number . 21615) (title . "Update trunk to deploy using Java 8") (user (login . "ashishsaxena86") (id . 11831126) (avatar_url . "https://avatars3.githubusercontent.com/u/11831126?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishsaxena86") (html_url . "https://github.com/ashishsaxena86") (followers_url . "https://api.github.com/users/ashishsaxena86/followers") (following_url . "https://api.github.com/users/ashishsaxena86/following{/other_user}") (gists_url . "https://api.github.com/users/ashishsaxena86/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishsaxena86/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishsaxena86/subscriptions") (organizations_url . "https://api.github.com/users/ashishsaxena86/orgs") (repos_url . "https://api.github.com/users/ashishsaxena86/repos") (events_url . "https://api.github.com/users/ashishsaxena86/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishsaxena86/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-09T15:02:39Z") (updated_at . "2017-02-02T22:43:53Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21615") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21615") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21615.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21615.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21573") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21573/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21573/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21573/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21573") (id . 139434036) (number . 21573) (title . "Use snapshots instead of release for stable (Milan) verison") (user (login . "jsthink") (id . 6924874) (avatar_url . "https://avatars1.githubusercontent.com/u/6924874?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jsthink") (html_url . "https://github.com/jsthink") (followers_url . "https://api.github.com/users/jsthink/followers") (following_url . "https://api.github.com/users/jsthink/following{/other_user}") (gists_url . "https://api.github.com/users/jsthink/gists{/gist_id}") (starred_url . "https://api.github.com/users/jsthink/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jsthink/subscriptions") (organizations_url . "https://api.github.com/users/jsthink/orgs") (repos_url . "https://api.github.com/users/jsthink/repos") (events_url . "https://api.github.com/users/jsthink/events{/privacy}") (received_events_url . "https://api.github.com/users/jsthink/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-09T00:20:02Z") (updated_at . "2017-02-02T22:43:54Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21573") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21573") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21573.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21573.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21566") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21566/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21566/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21566/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21566") (id . 139412198) (number . 21566) (title . "Removed Us-West for Integration environment and added FRCS@expedia.com address") (user (login . "MaanuK") (id . 16563161) (avatar_url . "https://avatars0.githubusercontent.com/u/16563161?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MaanuK") (html_url . "https://github.com/MaanuK") (followers_url . "https://api.github.com/users/MaanuK/followers") (following_url . "https://api.github.com/users/MaanuK/following{/other_user}") (gists_url . "https://api.github.com/users/MaanuK/gists{/gist_id}") (starred_url . "https://api.github.com/users/MaanuK/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MaanuK/subscriptions") (organizations_url . "https://api.github.com/users/MaanuK/orgs") (repos_url . "https://api.github.com/users/MaanuK/repos") (events_url . "https://api.github.com/users/MaanuK/events{/privacy}") (received_events_url . "https://api.github.com/users/MaanuK/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-08T22:24:56Z") (updated_at . "2017-02-02T22:43:54Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21566") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21566") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21566.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21566.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21549") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21549/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21549/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21549/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21549") (id . 139284309) (number . 21549) (title . "Fix the repl set template") (user (login . "a-fgingras") (id . 12202894) (avatar_url . "https://avatars1.githubusercontent.com/u/12202894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/a-fgingras") (html_url . "https://github.com/a-fgingras") (followers_url . "https://api.github.com/users/a-fgingras/followers") (following_url . "https://api.github.com/users/a-fgingras/following{/other_user}") (gists_url . "https://api.github.com/users/a-fgingras/gists{/gist_id}") (starred_url . "https://api.github.com/users/a-fgingras/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/a-fgingras/subscriptions") (organizations_url . "https://api.github.com/users/a-fgingras/orgs") (repos_url . "https://api.github.com/users/a-fgingras/repos") (events_url . "https://api.github.com/users/a-fgingras/events{/privacy}") (received_events_url . "https://api.github.com/users/a-fgingras/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-08T13:56:49Z") (updated_at . "2017-02-02T22:43:55Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21549") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21549") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21549.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21549.patch")) (body . "Fix the repl set template
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21544") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21544/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21544/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21544/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21544") (id . 139200606) (number . 21544) (title . "URS app to use splunk::forwarder rather than splunkforwarder recipe") (user (login . "NehaSood") (id . 5012419) (avatar_url . "https://avatars0.githubusercontent.com/u/5012419?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NehaSood") (html_url . "https://github.com/NehaSood") (followers_url . "https://api.github.com/users/NehaSood/followers") (following_url . "https://api.github.com/users/NehaSood/following{/other_user}") (gists_url . "https://api.github.com/users/NehaSood/gists{/gist_id}") (starred_url . "https://api.github.com/users/NehaSood/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NehaSood/subscriptions") (organizations_url . "https://api.github.com/users/NehaSood/orgs") (repos_url . "https://api.github.com/users/NehaSood/repos") (events_url . "https://api.github.com/users/NehaSood/events{/privacy}") (received_events_url . "https://api.github.com/users/NehaSood/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-08T07:20:44Z") (updated_at . "2017-02-02T22:43:57Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21544") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21544") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21544.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21544.patch")) (body . "In line with changes in: https://github.com/ExpediaInc/exp-devops/commit/b4dfbcdd1c90922e8922c4d078a4ecbced77f659.
Also, didn't remove dependency on splunkforwarder cookbook, as ugc::userreviewsdb recipe requires splunkforwarder::mongosplunkapp recipe, which is not available in splunk.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21480") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21480/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21480/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21480/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21480") (id . 139049174) (number . 21480) (title . "Story - Send email to stratus if release fails (with no auto_rollback).") (user (login . "abanna") (id . 1229639) (avatar_url . "https://avatars2.githubusercontent.com/u/1229639?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abanna") (html_url . "https://github.com/abanna") (followers_url . "https://api.github.com/users/abanna/followers") (following_url . "https://api.github.com/users/abanna/following{/other_user}") (gists_url . "https://api.github.com/users/abanna/gists{/gist_id}") (starred_url . "https://api.github.com/users/abanna/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abanna/subscriptions") (organizations_url . "https://api.github.com/users/abanna/orgs") (repos_url . "https://api.github.com/users/abanna/repos") (events_url . "https://api.github.com/users/abanna/events{/privacy}") (received_events_url . "https://api.github.com/users/abanna/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2016-03-07T18:06:58Z") (updated_at . "2017-02-02T22:43:58Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21480") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21480") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21480.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21480.patch")) (body . "Updated rollback logic - Will get the current deployed task definition, check the version to
to validate against ROLLBACK_VERSION, on a match roll back to that task definition.  If there wasn't a
previously deployed app or if there is a version mismatch raises an Exception.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21360") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21360/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21360/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21360/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21360") (id . 138179083) (number . 21360) (title . "praano_test_app modifications") (user (login . "raghvendra-iiita-work") (id . 11025692) (avatar_url . "https://avatars3.githubusercontent.com/u/11025692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raghvendra-iiita-work") (html_url . "https://github.com/raghvendra-iiita-work") (followers_url . "https://api.github.com/users/raghvendra-iiita-work/followers") (following_url . "https://api.github.com/users/raghvendra-iiita-work/following{/other_user}") (gists_url . "https://api.github.com/users/raghvendra-iiita-work/gists{/gist_id}") (starred_url . "https://api.github.com/users/raghvendra-iiita-work/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raghvendra-iiita-work/subscriptions") (organizations_url . "https://api.github.com/users/raghvendra-iiita-work/orgs") (repos_url . "https://api.github.com/users/raghvendra-iiita-work/repos") (events_url . "https://api.github.com/users/raghvendra-iiita-work/events{/privacy}") (received_events_url . "https://api.github.com/users/raghvendra-iiita-work/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-03-03T13:35:07Z") (updated_at . "2017-02-02T22:43:59Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21360") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21360") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21360.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21360.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21177") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21177/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21177/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21177/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21177") (id . 137328572) (number . 21177) (title . "Azure") (user (login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-29T18:12:35Z") (updated_at . "2017-02-02T22:44:00Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21177") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21177") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21177.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21177.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21172") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21172/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21172/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21172/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21172") (id . 137312951) (number . 21172) (title . "Mongo security group port 27060") (user (login . "nhourani") (id . 9368044) (avatar_url . "https://avatars0.githubusercontent.com/u/9368044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nhourani") (html_url . "https://github.com/nhourani") (followers_url . "https://api.github.com/users/nhourani/followers") (following_url . "https://api.github.com/users/nhourani/following{/other_user}") (gists_url . "https://api.github.com/users/nhourani/gists{/gist_id}") (starred_url . "https://api.github.com/users/nhourani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nhourani/subscriptions") (organizations_url . "https://api.github.com/users/nhourani/orgs") (repos_url . "https://api.github.com/users/nhourani/repos") (events_url . "https://api.github.com/users/nhourani/events{/privacy}") (received_events_url . "https://api.github.com/users/nhourani/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-29T17:09:33Z") (updated_at . "2017-02-02T22:44:01Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21172") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21172") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21172.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21172.patch")) (body . "Allowing access via port 27060

@jimleroyer
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21073") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21073/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21073/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21073/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21073") (id . 136562450) (number . 21073) (title . "Allow to set PREFIX thru an attribure otherwise defaults to node[roles][0]") (user (login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-26T01:01:29Z") (updated_at . "2017-02-02T22:44:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21073") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21073") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21073.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21073.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21047") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21047/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21047/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/21047/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21047") (id . 136473178) (number . 21047) (title . "Vijay script change dpl") (user (login . "vijaykrishnagit") (id . 8262440) (avatar_url . "https://avatars1.githubusercontent.com/u/8262440?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vijaykrishnagit") (html_url . "https://github.com/vijaykrishnagit") (followers_url . "https://api.github.com/users/vijaykrishnagit/followers") (following_url . "https://api.github.com/users/vijaykrishnagit/following{/other_user}") (gists_url . "https://api.github.com/users/vijaykrishnagit/gists{/gist_id}") (starred_url . "https://api.github.com/users/vijaykrishnagit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vijaykrishnagit/subscriptions") (organizations_url . "https://api.github.com/users/vijaykrishnagit/orgs") (repos_url . "https://api.github.com/users/vijaykrishnagit/repos") (events_url . "https://api.github.com/users/vijaykrishnagit/events{/privacy}") (received_events_url . "https://api.github.com/users/vijaykrishnagit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-25T18:38:27Z") (updated_at . "2017-02-02T22:44:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/21047") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/21047") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/21047.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/21047.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20994") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20994/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20994/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20994/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20994") (id . 136226763) (number . 20994) (title . "Update application.yml") (user (login . "JamesMcQueen") (id . 769547) (avatar_url . "https://avatars2.githubusercontent.com/u/769547?v=4") (gravatar_id . "") (url . "https://api.github.com/users/JamesMcQueen") (html_url . "https://github.com/JamesMcQueen") (followers_url . "https://api.github.com/users/JamesMcQueen/followers") (following_url . "https://api.github.com/users/JamesMcQueen/following{/other_user}") (gists_url . "https://api.github.com/users/JamesMcQueen/gists{/gist_id}") (starred_url . "https://api.github.com/users/JamesMcQueen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/JamesMcQueen/subscriptions") (organizations_url . "https://api.github.com/users/JamesMcQueen/orgs") (repos_url . "https://api.github.com/users/JamesMcQueen/repos") (events_url . "https://api.github.com/users/JamesMcQueen/events{/privacy}") (received_events_url . "https://api.github.com/users/JamesMcQueen/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-24T23:45:57Z") (updated_at . "2017-02-02T22:44:03Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/20994") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20994") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/20994.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/20994.patch")) (body . "Update the cookbook to reflect the current state of the application.yml
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20790") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20790/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20790/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20790/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20790") (id . 134997915) (number . 20790) (title . "delete dynamo db") (user (login . "AayushBhatnagar") (id . 3070451) (avatar_url . "https://avatars3.githubusercontent.com/u/3070451?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AayushBhatnagar") (html_url . "https://github.com/AayushBhatnagar") (followers_url . "https://api.github.com/users/AayushBhatnagar/followers") (following_url . "https://api.github.com/users/AayushBhatnagar/following{/other_user}") (gists_url . "https://api.github.com/users/AayushBhatnagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/AayushBhatnagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AayushBhatnagar/subscriptions") (organizations_url . "https://api.github.com/users/AayushBhatnagar/orgs") (repos_url . "https://api.github.com/users/AayushBhatnagar/repos") (events_url . "https://api.github.com/users/AayushBhatnagar/events{/privacy}") (received_events_url . "https://api.github.com/users/AayushBhatnagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-19T23:09:48Z") (updated_at . "2017-02-02T22:44:05Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/20790") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20790") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/20790.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/20790.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20692") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20692/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20692/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20692/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20692") (id . 134467396) (number . 20692) (title . "Branchforcmpmetricsredshift") (user (login . "vijaykrishnagit") (id . 8262440) (avatar_url . "https://avatars1.githubusercontent.com/u/8262440?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vijaykrishnagit") (html_url . "https://github.com/vijaykrishnagit") (followers_url . "https://api.github.com/users/vijaykrishnagit/followers") (following_url . "https://api.github.com/users/vijaykrishnagit/following{/other_user}") (gists_url . "https://api.github.com/users/vijaykrishnagit/gists{/gist_id}") (starred_url . "https://api.github.com/users/vijaykrishnagit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vijaykrishnagit/subscriptions") (organizations_url . "https://api.github.com/users/vijaykrishnagit/orgs") (repos_url . "https://api.github.com/users/vijaykrishnagit/repos") (events_url . "https://api.github.com/users/vijaykrishnagit/events{/privacy}") (received_events_url . "https://api.github.com/users/vijaykrishnagit/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "fsiddiqui") (id . 7432820) (avatar_url . "https://avatars2.githubusercontent.com/u/7432820?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fsiddiqui") (html_url . "https://github.com/fsiddiqui") (followers_url . "https://api.github.com/users/fsiddiqui/followers") (following_url . "https://api.github.com/users/fsiddiqui/following{/other_user}") (gists_url . "https://api.github.com/users/fsiddiqui/gists{/gist_id}") (starred_url . "https://api.github.com/users/fsiddiqui/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fsiddiqui/subscriptions") (organizations_url . "https://api.github.com/users/fsiddiqui/orgs") (repos_url . "https://api.github.com/users/fsiddiqui/repos") (events_url . "https://api.github.com/users/fsiddiqui/events{/privacy}") (received_events_url . "https://api.github.com/users/fsiddiqui/received_events") (type . "User") (site_admin)) (assignees ((login . "fsiddiqui") (id . 7432820) (avatar_url . "https://avatars2.githubusercontent.com/u/7432820?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fsiddiqui") (html_url . "https://github.com/fsiddiqui") (followers_url . "https://api.github.com/users/fsiddiqui/followers") (following_url . "https://api.github.com/users/fsiddiqui/following{/other_user}") (gists_url . "https://api.github.com/users/fsiddiqui/gists{/gist_id}") (starred_url . "https://api.github.com/users/fsiddiqui/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fsiddiqui/subscriptions") (organizations_url . "https://api.github.com/users/fsiddiqui/orgs") (repos_url . "https://api.github.com/users/fsiddiqui/repos") (events_url . "https://api.github.com/users/fsiddiqui/events{/privacy}") (received_events_url . "https://api.github.com/users/fsiddiqui/received_events") (type . "User") (site_admin))) (milestone) (comments . 1) (created_at . "2016-02-18T02:58:07Z") (updated_at . "2017-02-02T22:44:06Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/20692") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20692") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/20692.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/20692.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20211") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20211/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20211/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20211/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20211") (id . 131875950) (number . 20211) (title . "Mtrivedi002") (user (login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-06T17:01:12Z") (updated_at . "2017-02-02T22:44:08Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/20211") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20211") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/20211.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/20211.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20022") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20022/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20022/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/20022/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20022") (id . 130906848) (number . 20022) (title . "Adding statsd config for host and port") (user (login . "nitishagar") (id . 1592163) (avatar_url . "https://avatars0.githubusercontent.com/u/1592163?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nitishagar") (html_url . "https://github.com/nitishagar") (followers_url . "https://api.github.com/users/nitishagar/followers") (following_url . "https://api.github.com/users/nitishagar/following{/other_user}") (gists_url . "https://api.github.com/users/nitishagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/nitishagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nitishagar/subscriptions") (organizations_url . "https://api.github.com/users/nitishagar/orgs") (repos_url . "https://api.github.com/users/nitishagar/repos") (events_url . "https://api.github.com/users/nitishagar/events{/privacy}") (received_events_url . "https://api.github.com/users/nitishagar/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-02-03T04:19:37Z") (updated_at . "2017-02-02T22:44:08Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/20022") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/20022") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/20022.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/20022.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19825") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19825/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19825/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19825/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19825") (id . 129616347) (number . 19825) (title . "Add ch.expeso.com in the in the data config and add new DNS name server") (user (login . "hmachineni") (id . 6448209) (avatar_url . "https://avatars3.githubusercontent.com/u/6448209?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hmachineni") (html_url . "https://github.com/hmachineni") (followers_url . "https://api.github.com/users/hmachineni/followers") (following_url . "https://api.github.com/users/hmachineni/following{/other_user}") (gists_url . "https://api.github.com/users/hmachineni/gists{/gist_id}") (starred_url . "https://api.github.com/users/hmachineni/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hmachineni/subscriptions") (organizations_url . "https://api.github.com/users/hmachineni/orgs") (repos_url . "https://api.github.com/users/hmachineni/repos") (events_url . "https://api.github.com/users/hmachineni/events{/privacy}") (received_events_url . "https://api.github.com/users/hmachineni/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-01-28T23:26:27Z") (updated_at . "2017-02-02T22:44:10Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/19825") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19825") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/19825.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/19825.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19713") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19713/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19713/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19713/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19713") (id . 129042460) (number . 19713) (title . "added iam role for rulestore web test") (user (login . "pallavi117") (id . 7627790) (avatar_url . "https://avatars2.githubusercontent.com/u/7627790?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pallavi117") (html_url . "https://github.com/pallavi117") (followers_url . "https://api.github.com/users/pallavi117/followers") (following_url . "https://api.github.com/users/pallavi117/following{/other_user}") (gists_url . "https://api.github.com/users/pallavi117/gists{/gist_id}") (starred_url . "https://api.github.com/users/pallavi117/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pallavi117/subscriptions") (organizations_url . "https://api.github.com/users/pallavi117/orgs") (repos_url . "https://api.github.com/users/pallavi117/repos") (events_url . "https://api.github.com/users/pallavi117/events{/privacy}") (received_events_url . "https://api.github.com/users/pallavi117/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-01-27T06:05:17Z") (updated_at . "2017-02-02T22:44:11Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/19713") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19713") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/19713.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/19713.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19592") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19592/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19592/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19592/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19592") (id . 128225456) (number . 19592) (title . "Chef recipe changes for trello") (user (login . "chkeagle") (id . 14943827) (avatar_url . "https://avatars0.githubusercontent.com/u/14943827?v=4") (gravatar_id . "") (url . "https://api.github.com/users/chkeagle") (html_url . "https://github.com/chkeagle") (followers_url . "https://api.github.com/users/chkeagle/followers") (following_url . "https://api.github.com/users/chkeagle/following{/other_user}") (gists_url . "https://api.github.com/users/chkeagle/gists{/gist_id}") (starred_url . "https://api.github.com/users/chkeagle/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/chkeagle/subscriptions") (organizations_url . "https://api.github.com/users/chkeagle/orgs") (repos_url . "https://api.github.com/users/chkeagle/repos") (events_url . "https://api.github.com/users/chkeagle/events{/privacy}") (received_events_url . "https://api.github.com/users/chkeagle/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-01-22T19:23:47Z") (updated_at . "2017-02-02T22:44:12Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/19592") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19592") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/19592.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/19592.patch")) (body . "Jenkins Linux Server recipe change and additions for trello backups.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19576") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19576/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19576/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19576/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19576") (id . 128114787) (number . 19576) (title . "Ursrelease21Jan2016") (user (login . "ankilam") (id . 10651103) (avatar_url . "https://avatars1.githubusercontent.com/u/10651103?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankilam") (html_url . "https://github.com/ankilam") (followers_url . "https://api.github.com/users/ankilam/followers") (following_url . "https://api.github.com/users/ankilam/following{/other_user}") (gists_url . "https://api.github.com/users/ankilam/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankilam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankilam/subscriptions") (organizations_url . "https://api.github.com/users/ankilam/orgs") (repos_url . "https://api.github.com/users/ankilam/repos") (events_url . "https://api.github.com/users/ankilam/events{/privacy}") (received_events_url . "https://api.github.com/users/ankilam/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-01-22T09:17:03Z") (updated_at . "2017-02-02T22:44:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/19576") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19576") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/19576.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/19576.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19575") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19575/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19575/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/19575/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19575") (id . 128110334) (number . 19575) (title . "Updating the loader deployment build on prod") (user (login . "ankilam") (id . 10651103) (avatar_url . "https://avatars1.githubusercontent.com/u/10651103?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankilam") (html_url . "https://github.com/ankilam") (followers_url . "https://api.github.com/users/ankilam/followers") (following_url . "https://api.github.com/users/ankilam/following{/other_user}") (gists_url . "https://api.github.com/users/ankilam/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankilam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankilam/subscriptions") (organizations_url . "https://api.github.com/users/ankilam/orgs") (repos_url . "https://api.github.com/users/ankilam/repos") (events_url . "https://api.github.com/users/ankilam/events{/privacy}") (received_events_url . "https://api.github.com/users/ankilam/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-01-22T08:49:29Z") (updated_at . "2017-02-02T22:44:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/19575") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/19575") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/19575.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/19575.patch")) (body . "")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/17737") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/17737/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/17737/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/17737/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/17737") (id . 117960844) (number . 17737) (title . "Save time running Vagrant from scratch") (user (login . "marcoslopes") (id . 1785111) (avatar_url . "https://avatars3.githubusercontent.com/u/1785111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/marcoslopes") (html_url . "https://github.com/marcoslopes") (followers_url . "https://api.github.com/users/marcoslopes/followers") (following_url . "https://api.github.com/users/marcoslopes/following{/other_user}") (gists_url . "https://api.github.com/users/marcoslopes/gists{/gist_id}") (starred_url . "https://api.github.com/users/marcoslopes/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/marcoslopes/subscriptions") (organizations_url . "https://api.github.com/users/marcoslopes/orgs") (repos_url . "https://api.github.com/users/marcoslopes/repos") (events_url . "https://api.github.com/users/marcoslopes/events{/privacy}") (received_events_url . "https://api.github.com/users/marcoslopes/received_events") (type . "User") (site_admin)) (labels ((id . 14204531) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2015-11-20T03:57:38Z") (updated_at . "2016-04-12T18:55:34Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I have been trying to run following the examples in the readme. However this is just unfeasible;

There is a section in the (chef-server.md)[exp-devops/chef-repo/docs/chef-server.md] which says
...\"
Troubleshooting 2: You may get the following error message:

ERROR: Cookbook graphite depends on cookbooks which are not currently
ERROR: being uploaded and cannot be found on the server.
ERROR: The missing cookbook(s) are: 'apache2' version '~> 1.0'
This is because our Chef server has all versions of the cookbook, but github technically only has the latest. To fix this,

Update the version in chef-repo/cookbooks/apache2/metadata.rb to 1.0.0
Upload apache2 cookbook by running \"knife cookbook upload apache2\"
Update the version in chef-repo/cookbooks/apache2/metadata.rb to 2.0.0
Upload apache2 cookbook by running \"knife cookbook upload apache2\"
You may again encounter an error saying some cookbooks are missing. You just need to upload those cookbooks one by one, and then upload apache2.\" ...

I have not finished to do it yet, had to stop and come here open this issue...

following is what i had to go through so far...

```
Uploading ewe-healthmonitor-web [1.0.1]
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook collectd version 1.0.7,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/collectd/metadata.rb                                                                                                                                 [13:43:33]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload collectd                                                                                                                                     [13:43:59]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading collectd       [1.0.7]
ERROR: Cookbook collectd depends on cookbook aws version ~> 0.99,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/aws/metadata.rb                                                                                                                                      [13:44:07]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/aws/metadata.rb                                                                                                                                      [13:44:27]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload aws                                                                                                                                          [13:44:29]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading aws            [0.99.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload collectd                                                                                                                                     [13:44:36]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading collectd       [1.0.7]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [13:44:43]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook jenkins version 1.2.3,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/jenkins/metadata.rb                                                                                                                                  [13:44:56]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload jenkins                                                                                                                                      [13:45:10]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading jenkins        [1.2.3]
ERROR: Cookbook jenkins depends on cookbook runit version >= 1.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/runit/metadata.rb                                                                                                                                    [13:45:20]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/runit/metadata.rb                                                                                                                                    [13:45:34]
vim cookbooks/jenkins/metadata.rb                                                                                                                                                                                                                                    [13:45:36]                                                                                                                                                                                                                                                     [13:45:38]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [13:45:40]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [13:45:40]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/runit/metadata.rb                                                                                                                                    [13:45:41]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload runit                                                                                                                                        [13:45:44]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading runit          [1.1.6]
ERROR: Cookbook runit depends on cookbook build-essential version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/build-essential/metadata.rb                                                                                                                          [13:45:52]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload build-essential                                                                                                                              [13:48:28]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading build-essential [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload runit                                                                                                                                        [13:48:58]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading runit          [1.1.6]
ERROR: Cookbook runit depends on cookbook yum version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/yum/metadata.rb                                                                                                                                      [13:49:04]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/yum/metadata.rb                                                                                                                                      [13:49:26]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [13:49:30]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload yum                                                                                                                                          [13:49:30]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading yum            [0.0.0]
Uploaded 1 cookbook.
Uploading pacman         [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload apache2                                                                                                                                      [14:16:27]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading apache2        [0.0.1]
Uploaded 1 cookbook.


 ¹metadata.rb+                                                                                                                                                                                                                                                       buffers
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload jenkinst                                                                                                                                     [14:16:44]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
^C%                                                                                                                                                                                                                                                                             mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload jenkins                                                                                                                                      [14:16:50]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading jenkins        [1.2.3]
ERROR: Cookbook jenkins depends on cookbook nginx version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/nginx/metadata.rb                                                                                                                                    [14:16:54]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload nginx                                                                                                                                        [14:18:49]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading nginx          [0.0.0]
ERROR: Cookbook nginx depends on cookbook ohai version >= 1.1.4,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/ohai/metadata.rb                                                                                                                                     [14:18:58]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ohai                                                                                                                                         [14:19:15]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ohai           [1.1.4]


 ¹metadata.rb+                                                                                                                                                                                                                                                       buffers
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload nginx                                                                                                                                        [14:19:23]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading nginx          [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload jenkins                                                                                                                                      [14:19:33]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading jenkins        [1.2.3]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:19:45]


 ¹metadata.rb+                                                                                                                                                                                                                                                       buffers
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook git version 2.5.2,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/git/metadata.rb                                                                                                                                      [14:19:59]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload git                                                                                                                                          [14:20:11]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading git            [2.5.2]
ERROR: Cookbook git depends on cookbook dmg version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $       vim cookbooks/git/metadata.rb                                                                                                                                [14:20:27]
                                                                                                                                                                                                                                                                     [14:20:37]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/dmg/metadata.rb                                                                                                                                      [14:20:40]

[1]  + 29439 suspended  vim cookbooks/dmg/metadata.rb


mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ fg                                                                                                                                                                 [14:20:50]


[1]  + 29439 continued  vim cookbooks/dmg/metadata.rb
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload dmg                                                                                                                                          [14:21:38]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading dmg            [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload git                                                                                                                                          [14:21:47]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading git            [2.5.2]
ERROR: Cookbook git depends on cookbook windows version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
 ¹metadata.rb+                                                                                                                                                                                                                                                       buffers
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/windows/metadata.rb                                                                                                                                  [14:21:54]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload windowns                                                                                                                                     [14:22:10]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
ERROR: Could not find cookbook windowns in your cookbook path, skipping it
ERROR: Failed to upload 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload windows                                                                                                                                      [14:22:17]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading windows        [0.0.0]
ERROR: Cookbook windows depends on cookbook chef_handler version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/chef_handler/metadata.rb                                                                                                                             [14:22:22]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload chef_handler                                                                                                                                 [14:22:37]
 ¹metadata.rb+                                                                                                                                                                                                                                                       buffers
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading chef_handler   [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload windows                                                                                                                                      [14:22:57]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading windows        [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload git                                                                                                                                          [14:23:19]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading git            [2.5.2]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:23:40]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook perforce version 1.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/perforce/metadata.rb                                                                                                                                 [14:23:58]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload perforce                                                                                                                                     [14:24:16]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading perforce       [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:24:33]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook perforce version 1.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/perforce/metadata.rb                                                                                                                                 [14:24:40]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:24:51]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook perforce version 1.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload perforce                                                                                                                                     [14:24:57]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading perforce       [1.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:25:04]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook s3cmd version >= 1.1.5,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/s3cmd                                                                                                                                                [14:25:13]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/s3cmd/metadata.rb                                                                                                                                    [14:26:05]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload s3cmd                                                                                                                                        [14:26:14]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading s3cmd          [1.1.5]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload ewe-jenkins                                                                                                                                  [14:26:30]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading ewe-jenkins    [3.0.1]
ERROR: Cookbook ewe-jenkins depends on cookbook rvm version >= 0.9.1,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/rvm/metadata.rb                                                                                                                                      [14:26:37]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload rvm                                                                                                                                          [14:27:03]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading rvm            [0.9.1]
ERROR: Cookbook rvm depends on cookbook chef_gem version >= 0.0.0,
ERROR: which is not currently being uploaded and cannot be found on the server.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [14:27:19]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [14:27:27]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $                                                                                                                                                                    [14:27:27]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ vim cookbooks/chef_gem/metadata.rb                                                                                                                                 [14:27:28]
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload chef_gem                                                                                                                                     [14:27:52]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading chef_gem       [0.0.0]
Uploaded 1 cookbook.
mlopes @ ~/workspace/expedia/ewe/infrastructure/exp-devops/chef-repo/ (custom-task-definition✗) $ knife cookbook upload rvm                                                                                                                                          [14:28:25]
WARNING: Nokogiri was built against LibXML version 2.9.2, but has dynamically loaded 2.9.0
Uploading rvm            [0.9.1]
Uploaded 1 cookbook.
```

Can we safe the chef state periodically somehow? Perhaps update the vagrant base chef-server image with the old versions?
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/16085") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/16085/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/16085/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/16085/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/16085") (id . 110501677) (number . 16085) (title . "[EXPWEB] Getting exception \"The perfagent-expweb-single daemon is already installed.\"") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2015-10-08T17:17:25Z") (updated_at . "2015-10-08T17:29:31Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Should be properly addressed:

```
================================================================================
Error executing action `run` on resource 'execute[add_perfagent_service]'
================================================================================


Mixlib::ShellOut::ShellCommandFailed
------------------------------------
Expected process to exit with [0], but received '1'
---- Begin output of /opt/apps/deploymenthome/perfagent-expweb-single/bin/perfagent-expweb-single install ----
STDOUT: Detected RHEL or Fedora:
The perfagent-expweb-single daemon is already installed.
STDERR:
---- End output of /opt/apps/deploymenthome/perfagent-expweb-single/bin/perfagent-expweb-single install ----
Ran /opt/apps/deploymenthome/perfagent-expweb-single/bin/perfagent-expweb-single install returned 1


Resource Declaration:
---------------------
# In /var/chef/cache/cookbooks/expweb/recipes/perfagent_linux.rb

 71:   execute \"add_perfagent_service\" do
 72:     user \"root\"
 73:     command \"#{config.get_perfagent_initfile_file} install\"
 74:   end
 75: end
```
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15566") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15566/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15566/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15566/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/15566") (id . 107937676) (number . 15566) (title . "[EXPWEB] File/processes descriptors config needs to be properly set up") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2015-09-23T14:52:15Z") (updated_at . "2017-05-05T22:40:41Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Any runaway process can bring the servers to a standstill:

https://github.com/ExpediaInc/exp-devops/blob/master/chef-repo/frozen-cookbooks/expweb/files/default/limits.conf

ALSO, we need to use attributes in there. Hardcoding is for the '90s.
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15562") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15562/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15562/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/15562/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/15562") (id . 107914209) (number . 15562) (title . "[EXPWEB] Need some retry mechanism + remove ignore_failure for the http service resource") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels ((id . 14204526) (url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels/bug") (name . "bug") (color . "fc2929") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2015-09-23T13:03:28Z") (updated_at . "2017-05-05T22:40:41Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "[2015-09-23T05:12:29-07:00] INFO: Processing service[expweb-single-httpd] action enable (expweb::httpd_linux line 97)
[2015-09-23T05:12:29-07:00] INFO: Processing service[expweb-single-httpd] action restart (expweb::httpd_linux line 97)
[2015-09-23T05:12:30-07:00] ERROR: service[expweb-single-httpd](expweb::httpd_linux line 97) had an error: Expected process to exit with [0], but received '1'
---- Begin output of /sbin/service expweb-single-httpd restart && sleep 1 ----
STDOUT: Stopping httpd:
Starting httpd: [FAILED]
---- End output of /sbin/service expweb-single-httpd restart && sleep 1 ----
Ran /sbin/service expweb-single-httpd restart && sleep 1 returned 1; ignore_failure is set, continuing
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/14425") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/14425/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/14425/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/14425/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/14425") (id . 103011082) (number . 14425) (title . "[nova] Bash code in Chef cookbook breaks formatting") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2015-08-25T12:27:10Z") (updated_at . "2015-08-25T12:27:10Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "This BASH code is breaking the conf file format:
https://github.com/ExpediaInc/exp-devops/blob/master/chef-repo/site-cookbooks/offerservice-nova-service/recipes/default.rb#L21
")) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/12079") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/12079/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/12079/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/12079/events") (html_url . "https://github.com/ExpediaInc/exp-devops/issues/12079") (id . 90959428) (number . 12079) (title . "Chef client output shows pass in case of error") (user (login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2015-06-25T13:08:53Z") (updated_at . "2017-05-05T22:40:41Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Need to tackle this:

`14:03:54 10.187.67.143 Compiled Resource:
14:03:54 10.187.67.143 ------------------
14:03:54 10.187.67.143 # Declared in /var/chef/cache/cookbooks/offerservice/recipes/default.rb:95:in`from_file'
14:03:54 10.187.67.143
14:03:54 10.187.67.143 template(\"/opt/offerservice/configs/offers-config.yml\") do
14:03:54 10.187.67.143   provider Chef::Provider::Template
14:03:54 10.187.67.143   action \"create\"
14:03:54 10.187.67.143   retries 0
14:03:54 10.187.67.143   retry_delay 2
14:03:54 10.187.67.143   path \"/opt/offerservice/configs/offers-config.yml\"
14:03:54 10.187.67.143   backup 5
14:03:54 10.187.67.143   source \"lab/offers-config.yml\"
14:03:54 10.187.67.143   variables {:keyStorePath=>\"/opt/offerservice/keystore.jks\", :keyStorePassword=>\"******_SECRETPASSWORD**_***\"}
14:03:54 10.187.67.143   cookbook_name \"offerservice\"
14:03:54 10.187.67.143   recipe_name \"default\"
14:03:54 10.187.67.143   mode \"644\"
14:03:54 10.187.67.143   owner \"offeruser\"
14:03:54 10.187.67.143   group \"offeruser\"
14:03:54 10.187.67.143 end`
"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pedbarbosa") (id . 5567593) (avatar_url . "https://avatars1.githubusercontent.com/u/5567593?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pedbarbosa") (html_url . "https://github.com/pedbarbosa") (followers_url . "https://api.github.com/users/pedbarbosa/followers") (following_url . "https://api.github.com/users/pedbarbosa/following{/other_user}") (gists_url . "https://api.github.com/users/pedbarbosa/gists{/gist_id}") (starred_url . "https://api.github.com/users/pedbarbosa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pedbarbosa/subscriptions") (organizations_url . "https://api.github.com/users/pedbarbosa/orgs") (repos_url . "https://api.github.com/users/pedbarbosa/repos") (events_url . "https://api.github.com/users/pedbarbosa/events{/privacy}") (received_events_url . "https://api.github.com/users/pedbarbosa/received_events") (type . "User") (site_admin)))))) ((login . "pedbarbosa") (id . 5567593) (avatar_url . "https://avatars1.githubusercontent.com/u/5567593?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pedbarbosa") (html_url . "https://github.com/pedbarbosa") (followers_url . "https://api.github.com/users/pedbarbosa/followers") (following_url . "https://api.github.com/users/pedbarbosa/following{/other_user}") (gists_url . "https://api.github.com/users/pedbarbosa/gists{/gist_id}") (starred_url . "https://api.github.com/users/pedbarbosa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pedbarbosa/subscriptions") (organizations_url . "https://api.github.com/users/pedbarbosa/orgs") (repos_url . "https://api.github.com/users/pedbarbosa/repos") (events_url . "https://api.github.com/users/pedbarbosa/events{/privacy}") (received_events_url . "https://api.github.com/users/pedbarbosa/received_events") (type . "User") (site_admin) (name . "Pedro Barbosa") (company . "Expedia") (blog . "") (location . "Brisbane, Australia") (email) (hireable) (bio) (public_repos . 8) (public_gists . 0) (followers . 1) (following . 2) (created_at . "2013-09-29T04:12:14Z") (updated_at . "2018-01-18T00:32:42Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sharivijayan") (id . 28917093) (avatar_url . "https://avatars2.githubusercontent.com/u/28917093?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sharivijayan") (html_url . "https://github.com/sharivijayan") (followers_url . "https://api.github.com/users/sharivijayan/followers") (following_url . "https://api.github.com/users/sharivijayan/following{/other_user}") (gists_url . "https://api.github.com/users/sharivijayan/gists{/gist_id}") (starred_url . "https://api.github.com/users/sharivijayan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sharivijayan/subscriptions") (organizations_url . "https://api.github.com/users/sharivijayan/orgs") (repos_url . "https://api.github.com/users/sharivijayan/repos") (events_url . "https://api.github.com/users/sharivijayan/events{/privacy}") (received_events_url . "https://api.github.com/users/sharivijayan/received_events") (type . "User") (site_admin)))))) ((login . "sharivijayan") (id . 28917093) (avatar_url . "https://avatars2.githubusercontent.com/u/28917093?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sharivijayan") (html_url . "https://github.com/sharivijayan") (followers_url . "https://api.github.com/users/sharivijayan/followers") (following_url . "https://api.github.com/users/sharivijayan/following{/other_user}") (gists_url . "https://api.github.com/users/sharivijayan/gists{/gist_id}") (starred_url . "https://api.github.com/users/sharivijayan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sharivijayan/subscriptions") (organizations_url . "https://api.github.com/users/sharivijayan/orgs") (repos_url . "https://api.github.com/users/sharivijayan/repos") (events_url . "https://api.github.com/users/sharivijayan/events{/privacy}") (received_events_url . "https://api.github.com/users/sharivijayan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-svijayan@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-05-24T06:31:10Z") (updated_at . "2017-09-25T15:38:27Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Nitish316") (id . 5319301) (avatar_url . "https://avatars3.githubusercontent.com/u/5319301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nitish316") (html_url . "https://github.com/Nitish316") (followers_url . "https://api.github.com/users/Nitish316/followers") (following_url . "https://api.github.com/users/Nitish316/following{/other_user}") (gists_url . "https://api.github.com/users/Nitish316/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nitish316/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nitish316/subscriptions") (organizations_url . "https://api.github.com/users/Nitish316/orgs") (repos_url . "https://api.github.com/users/Nitish316/repos") (events_url . "https://api.github.com/users/Nitish316/events{/privacy}") (received_events_url . "https://api.github.com/users/Nitish316/received_events") (type . "User") (site_admin)))))) ((login . "Nitish316") (id . 5319301) (avatar_url . "https://avatars3.githubusercontent.com/u/5319301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nitish316") (html_url . "https://github.com/Nitish316") (followers_url . "https://api.github.com/users/Nitish316/followers") (following_url . "https://api.github.com/users/Nitish316/following{/other_user}") (gists_url . "https://api.github.com/users/Nitish316/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nitish316/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nitish316/subscriptions") (organizations_url . "https://api.github.com/users/Nitish316/orgs") (repos_url . "https://api.github.com/users/Nitish316/repos") (events_url . "https://api.github.com/users/Nitish316/events{/privacy}") (received_events_url . "https://api.github.com/users/Nitish316/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2013-08-27T08:21:15Z") (updated_at . "2017-06-19T08:09:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "AdrianaMicu") (id . 17982329) (avatar_url . "https://avatars0.githubusercontent.com/u/17982329?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AdrianaMicu") (html_url . "https://github.com/AdrianaMicu") (followers_url . "https://api.github.com/users/AdrianaMicu/followers") (following_url . "https://api.github.com/users/AdrianaMicu/following{/other_user}") (gists_url . "https://api.github.com/users/AdrianaMicu/gists{/gist_id}") (starred_url . "https://api.github.com/users/AdrianaMicu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AdrianaMicu/subscriptions") (organizations_url . "https://api.github.com/users/AdrianaMicu/orgs") (repos_url . "https://api.github.com/users/AdrianaMicu/repos") (events_url . "https://api.github.com/users/AdrianaMicu/events{/privacy}") (received_events_url . "https://api.github.com/users/AdrianaMicu/received_events") (type . "User") (site_admin)))))) ((login . "AdrianaMicu") (id . 17982329) (avatar_url . "https://avatars0.githubusercontent.com/u/17982329?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AdrianaMicu") (html_url . "https://github.com/AdrianaMicu") (followers_url . "https://api.github.com/users/AdrianaMicu/followers") (following_url . "https://api.github.com/users/AdrianaMicu/following{/other_user}") (gists_url . "https://api.github.com/users/AdrianaMicu/gists{/gist_id}") (starred_url . "https://api.github.com/users/AdrianaMicu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AdrianaMicu/subscriptions") (organizations_url . "https://api.github.com/users/AdrianaMicu/orgs") (repos_url . "https://api.github.com/users/AdrianaMicu/repos") (events_url . "https://api.github.com/users/AdrianaMicu/events{/privacy}") (received_events_url . "https://api.github.com/users/AdrianaMicu/received_events") (type . "User") (site_admin) (name . "Adriana Micu") (company) (blog . "") (location . "London, United Kingdom") (email . "amicu@expedia.com") (hireable) (bio) (public_repos . 15) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2016-03-21T11:47:01Z") (updated_at . "2017-10-24T10:31:08Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin)))))) ((login . "AngelCantugr") (id . 2224770) (avatar_url . "https://avatars1.githubusercontent.com/u/2224770?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AngelCantugr") (html_url . "https://github.com/AngelCantugr") (followers_url . "https://api.github.com/users/AngelCantugr/followers") (following_url . "https://api.github.com/users/AngelCantugr/following{/other_user}") (gists_url . "https://api.github.com/users/AngelCantugr/gists{/gist_id}") (starred_url . "https://api.github.com/users/AngelCantugr/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AngelCantugr/subscriptions") (organizations_url . "https://api.github.com/users/AngelCantugr/orgs") (repos_url . "https://api.github.com/users/AngelCantugr/repos") (events_url . "https://api.github.com/users/AngelCantugr/events{/privacy}") (received_events_url . "https://api.github.com/users/AngelCantugr/received_events") (type . "User") (site_admin) (name . "Angel") (company) (blog . "") (location . "Seattle, WA") (email . "ancantu@expedia.com") (hireable) (bio) (public_repos . 9) (public_gists . 1) (followers . 0) (following . 9) (created_at . "2012-08-27T03:03:00Z") (updated_at . "2017-10-11T22:38:40Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin)))))) ((login . "hridyeshpant") (id . 7502704) (avatar_url . "https://avatars3.githubusercontent.com/u/7502704?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hridyeshpant") (html_url . "https://github.com/hridyeshpant") (followers_url . "https://api.github.com/users/hridyeshpant/followers") (following_url . "https://api.github.com/users/hridyeshpant/following{/other_user}") (gists_url . "https://api.github.com/users/hridyeshpant/gists{/gist_id}") (starred_url . "https://api.github.com/users/hridyeshpant/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hridyeshpant/subscriptions") (organizations_url . "https://api.github.com/users/hridyeshpant/orgs") (repos_url . "https://api.github.com/users/hridyeshpant/repos") (events_url . "https://api.github.com/users/hridyeshpant/events{/privacy}") (received_events_url . "https://api.github.com/users/hridyeshpant/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-05-06T16:37:02Z") (updated_at . "2017-11-07T05:07:00Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pankajkedia92") (id . 7999535) (avatar_url . "https://avatars3.githubusercontent.com/u/7999535?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pankajkedia92") (html_url . "https://github.com/pankajkedia92") (followers_url . "https://api.github.com/users/pankajkedia92/followers") (following_url . "https://api.github.com/users/pankajkedia92/following{/other_user}") (gists_url . "https://api.github.com/users/pankajkedia92/gists{/gist_id}") (starred_url . "https://api.github.com/users/pankajkedia92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pankajkedia92/subscriptions") (organizations_url . "https://api.github.com/users/pankajkedia92/orgs") (repos_url . "https://api.github.com/users/pankajkedia92/repos") (events_url . "https://api.github.com/users/pankajkedia92/events{/privacy}") (received_events_url . "https://api.github.com/users/pankajkedia92/received_events") (type . "User") (site_admin)))))) ((login . "pankajkedia92") (id . 7999535) (avatar_url . "https://avatars3.githubusercontent.com/u/7999535?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pankajkedia92") (html_url . "https://github.com/pankajkedia92") (followers_url . "https://api.github.com/users/pankajkedia92/followers") (following_url . "https://api.github.com/users/pankajkedia92/following{/other_user}") (gists_url . "https://api.github.com/users/pankajkedia92/gists{/gist_id}") (starred_url . "https://api.github.com/users/pankajkedia92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pankajkedia92/subscriptions") (organizations_url . "https://api.github.com/users/pankajkedia92/orgs") (repos_url . "https://api.github.com/users/pankajkedia92/repos") (events_url . "https://api.github.com/users/pankajkedia92/events{/privacy}") (received_events_url . "https://api.github.com/users/pankajkedia92/received_events") (type . "User") (site_admin) (name . "pankaj kedia") (company) (blog . "") (location) (email . "pkedia@expedia.com") (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2014-06-26T20:06:21Z") (updated_at . "2018-01-03T06:59:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "anwoolterton") (id . 3848023) (avatar_url . "https://avatars0.githubusercontent.com/u/3848023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anwoolterton") (html_url . "https://github.com/anwoolterton") (followers_url . "https://api.github.com/users/anwoolterton/followers") (following_url . "https://api.github.com/users/anwoolterton/following{/other_user}") (gists_url . "https://api.github.com/users/anwoolterton/gists{/gist_id}") (starred_url . "https://api.github.com/users/anwoolterton/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anwoolterton/subscriptions") (organizations_url . "https://api.github.com/users/anwoolterton/orgs") (repos_url . "https://api.github.com/users/anwoolterton/repos") (events_url . "https://api.github.com/users/anwoolterton/events{/privacy}") (received_events_url . "https://api.github.com/users/anwoolterton/received_events") (type . "User") (site_admin)))))) ((login . "anwoolterton") (id . 3848023) (avatar_url . "https://avatars0.githubusercontent.com/u/3848023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anwoolterton") (html_url . "https://github.com/anwoolterton") (followers_url . "https://api.github.com/users/anwoolterton/followers") (following_url . "https://api.github.com/users/anwoolterton/following{/other_user}") (gists_url . "https://api.github.com/users/anwoolterton/gists{/gist_id}") (starred_url . "https://api.github.com/users/anwoolterton/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anwoolterton/subscriptions") (organizations_url . "https://api.github.com/users/anwoolterton/orgs") (repos_url . "https://api.github.com/users/anwoolterton/repos") (events_url . "https://api.github.com/users/anwoolterton/events{/privacy}") (received_events_url . "https://api.github.com/users/anwoolterton/received_events") (type . "User") (site_admin) (name . "Andrew Woolterton") (company . "Expedia Inc") (blog . "www.expedia.com") (location . "London") (email . "anwoolterton@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2013-03-12T23:05:52Z") (updated_at . "2018-01-08T22:22:28Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EPCEET-svasquezsoltor") (id . 18616720) (avatar_url . "https://avatars0.githubusercontent.com/u/18616720?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EPCEET-svasquezsoltor") (html_url . "https://github.com/EPCEET-svasquezsoltor") (followers_url . "https://api.github.com/users/EPCEET-svasquezsoltor/followers") (following_url . "https://api.github.com/users/EPCEET-svasquezsoltor/following{/other_user}") (gists_url . "https://api.github.com/users/EPCEET-svasquezsoltor/gists{/gist_id}") (starred_url . "https://api.github.com/users/EPCEET-svasquezsoltor/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EPCEET-svasquezsoltor/subscriptions") (organizations_url . "https://api.github.com/users/EPCEET-svasquezsoltor/orgs") (repos_url . "https://api.github.com/users/EPCEET-svasquezsoltor/repos") (events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/events{/privacy}") (received_events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/received_events") (type . "User") (site_admin)))))) ((login . "EPCEET-svasquezsoltor") (id . 18616720) (avatar_url . "https://avatars0.githubusercontent.com/u/18616720?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EPCEET-svasquezsoltor") (html_url . "https://github.com/EPCEET-svasquezsoltor") (followers_url . "https://api.github.com/users/EPCEET-svasquezsoltor/followers") (following_url . "https://api.github.com/users/EPCEET-svasquezsoltor/following{/other_user}") (gists_url . "https://api.github.com/users/EPCEET-svasquezsoltor/gists{/gist_id}") (starred_url . "https://api.github.com/users/EPCEET-svasquezsoltor/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EPCEET-svasquezsoltor/subscriptions") (organizations_url . "https://api.github.com/users/EPCEET-svasquezsoltor/orgs") (repos_url . "https://api.github.com/users/EPCEET-svasquezsoltor/repos") (events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/events{/privacy}") (received_events_url . "https://api.github.com/users/EPCEET-svasquezsoltor/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "a-svasquezsoltor@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-04-22T14:24:51Z") (updated_at . "2017-12-27T21:08:53Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin)))))) ((login . "kchowhan") (id . 4441678) (avatar_url . "https://avatars2.githubusercontent.com/u/4441678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kchowhan") (html_url . "https://github.com/kchowhan") (followers_url . "https://api.github.com/users/kchowhan/followers") (following_url . "https://api.github.com/users/kchowhan/following{/other_user}") (gists_url . "https://api.github.com/users/kchowhan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kchowhan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kchowhan/subscriptions") (organizations_url . "https://api.github.com/users/kchowhan/orgs") (repos_url . "https://api.github.com/users/kchowhan/repos") (events_url . "https://api.github.com/users/kchowhan/events{/privacy}") (received_events_url . "https://api.github.com/users/kchowhan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 11) (public_gists . 1) (followers . 1) (following . 0) (created_at . "2013-05-15T21:15:25Z") (updated_at . "2017-12-02T21:20:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "marcoslopes") (id . 1785111) (avatar_url . "https://avatars3.githubusercontent.com/u/1785111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/marcoslopes") (html_url . "https://github.com/marcoslopes") (followers_url . "https://api.github.com/users/marcoslopes/followers") (following_url . "https://api.github.com/users/marcoslopes/following{/other_user}") (gists_url . "https://api.github.com/users/marcoslopes/gists{/gist_id}") (starred_url . "https://api.github.com/users/marcoslopes/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/marcoslopes/subscriptions") (organizations_url . "https://api.github.com/users/marcoslopes/orgs") (repos_url . "https://api.github.com/users/marcoslopes/repos") (events_url . "https://api.github.com/users/marcoslopes/events{/privacy}") (received_events_url . "https://api.github.com/users/marcoslopes/received_events") (type . "User") (site_admin)))))) ((login . "marcoslopes") (id . 1785111) (avatar_url . "https://avatars3.githubusercontent.com/u/1785111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/marcoslopes") (html_url . "https://github.com/marcoslopes") (followers_url . "https://api.github.com/users/marcoslopes/followers") (following_url . "https://api.github.com/users/marcoslopes/following{/other_user}") (gists_url . "https://api.github.com/users/marcoslopes/gists{/gist_id}") (starred_url . "https://api.github.com/users/marcoslopes/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/marcoslopes/subscriptions") (organizations_url . "https://api.github.com/users/marcoslopes/orgs") (repos_url . "https://api.github.com/users/marcoslopes/repos") (events_url . "https://api.github.com/users/marcoslopes/events{/privacy}") (received_events_url . "https://api.github.com/users/marcoslopes/received_events") (type . "User") (site_admin) (name . "Marcos Antonio Lopes") (company . "Expedia Inc") (blog . "") (location . "Brisbane, Australia") (email . "mlopes@expedia.com") (hireable) (bio) (public_repos . 12) (public_gists . 9) (followers . 4) (following . 8) (created_at . "2012-05-28T09:52:06Z") (updated_at . "2017-10-24T15:12:51Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ashwinbalegar87") (id . 26943151) (avatar_url . "https://avatars2.githubusercontent.com/u/26943151?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashwinbalegar87") (html_url . "https://github.com/ashwinbalegar87") (followers_url . "https://api.github.com/users/ashwinbalegar87/followers") (following_url . "https://api.github.com/users/ashwinbalegar87/following{/other_user}") (gists_url . "https://api.github.com/users/ashwinbalegar87/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashwinbalegar87/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashwinbalegar87/subscriptions") (organizations_url . "https://api.github.com/users/ashwinbalegar87/orgs") (repos_url . "https://api.github.com/users/ashwinbalegar87/repos") (events_url . "https://api.github.com/users/ashwinbalegar87/events{/privacy}") (received_events_url . "https://api.github.com/users/ashwinbalegar87/received_events") (type . "User") (site_admin)))))) ((login . "ashwinbalegar87") (id . 26943151) (avatar_url . "https://avatars2.githubusercontent.com/u/26943151?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashwinbalegar87") (html_url . "https://github.com/ashwinbalegar87") (followers_url . "https://api.github.com/users/ashwinbalegar87/followers") (following_url . "https://api.github.com/users/ashwinbalegar87/following{/other_user}") (gists_url . "https://api.github.com/users/ashwinbalegar87/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashwinbalegar87/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashwinbalegar87/subscriptions") (organizations_url . "https://api.github.com/users/ashwinbalegar87/orgs") (repos_url . "https://api.github.com/users/ashwinbalegar87/repos") (events_url . "https://api.github.com/users/ashwinbalegar87/events{/privacy}") (received_events_url . "https://api.github.com/users/ashwinbalegar87/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "a-aswamy@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-04-05T22:42:47Z") (updated_at . "2017-06-07T18:13:03Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dantmcgowan") (id . 1541119) (avatar_url . "https://avatars1.githubusercontent.com/u/1541119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dantmcgowan") (html_url . "https://github.com/dantmcgowan") (followers_url . "https://api.github.com/users/dantmcgowan/followers") (following_url . "https://api.github.com/users/dantmcgowan/following{/other_user}") (gists_url . "https://api.github.com/users/dantmcgowan/gists{/gist_id}") (starred_url . "https://api.github.com/users/dantmcgowan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dantmcgowan/subscriptions") (organizations_url . "https://api.github.com/users/dantmcgowan/orgs") (repos_url . "https://api.github.com/users/dantmcgowan/repos") (events_url . "https://api.github.com/users/dantmcgowan/events{/privacy}") (received_events_url . "https://api.github.com/users/dantmcgowan/received_events") (type . "User") (site_admin)))))) ((login . "dantmcgowan") (id . 1541119) (avatar_url . "https://avatars1.githubusercontent.com/u/1541119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dantmcgowan") (html_url . "https://github.com/dantmcgowan") (followers_url . "https://api.github.com/users/dantmcgowan/followers") (following_url . "https://api.github.com/users/dantmcgowan/following{/other_user}") (gists_url . "https://api.github.com/users/dantmcgowan/gists{/gist_id}") (starred_url . "https://api.github.com/users/dantmcgowan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dantmcgowan/subscriptions") (organizations_url . "https://api.github.com/users/dantmcgowan/orgs") (repos_url . "https://api.github.com/users/dantmcgowan/repos") (events_url . "https://api.github.com/users/dantmcgowan/events{/privacy}") (received_events_url . "https://api.github.com/users/dantmcgowan/received_events") (type . "User") (site_admin) (name . "Dan McGowan") (company . "@partnerpath") (blog . "http://cascadiaenterprise.com/samples") (location . "Seattle WA") (email . "a-dmcgowan@expedia.com") (hireable . t) (bio . "Seasoned Architect/Application Developer in a best practices setting utilizing RoR, pg, Git, Heroku, CircleCI and Docker. http://cascadiaenterprise/samples") (public_repos . 8) (public_gists . 3) (followers . 1) (following . 0) (created_at . "2012-03-15T16:39:56Z") (updated_at . "2017-12-21T18:09:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rambabunimmala") (id . 2329492) (avatar_url . "https://avatars3.githubusercontent.com/u/2329492?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rambabunimmala") (html_url . "https://github.com/rambabunimmala") (followers_url . "https://api.github.com/users/rambabunimmala/followers") (following_url . "https://api.github.com/users/rambabunimmala/following{/other_user}") (gists_url . "https://api.github.com/users/rambabunimmala/gists{/gist_id}") (starred_url . "https://api.github.com/users/rambabunimmala/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rambabunimmala/subscriptions") (organizations_url . "https://api.github.com/users/rambabunimmala/orgs") (repos_url . "https://api.github.com/users/rambabunimmala/repos") (events_url . "https://api.github.com/users/rambabunimmala/events{/privacy}") (received_events_url . "https://api.github.com/users/rambabunimmala/received_events") (type . "User") (site_admin)))))) ((login . "rambabunimmala") (id . 2329492) (avatar_url . "https://avatars3.githubusercontent.com/u/2329492?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rambabunimmala") (html_url . "https://github.com/rambabunimmala") (followers_url . "https://api.github.com/users/rambabunimmala/followers") (following_url . "https://api.github.com/users/rambabunimmala/following{/other_user}") (gists_url . "https://api.github.com/users/rambabunimmala/gists{/gist_id}") (starred_url . "https://api.github.com/users/rambabunimmala/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rambabunimmala/subscriptions") (organizations_url . "https://api.github.com/users/rambabunimmala/orgs") (repos_url . "https://api.github.com/users/rambabunimmala/repos") (events_url . "https://api.github.com/users/rambabunimmala/events{/privacy}") (received_events_url . "https://api.github.com/users/rambabunimmala/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2012-09-12T05:53:28Z") (updated_at . "2018-01-08T05:59:48Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEgaborNagy") (id . 17315166) (avatar_url . "https://avatars1.githubusercontent.com/u/17315166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgaborNagy") (html_url . "https://github.com/EXPEgaborNagy") (followers_url . "https://api.github.com/users/EXPEgaborNagy/followers") (following_url . "https://api.github.com/users/EXPEgaborNagy/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgaborNagy/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgaborNagy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgaborNagy/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgaborNagy/orgs") (repos_url . "https://api.github.com/users/EXPEgaborNagy/repos") (events_url . "https://api.github.com/users/EXPEgaborNagy/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgaborNagy/received_events") (type . "User") (site_admin)))))) ((login . "EXPEgaborNagy") (id . 17315166) (avatar_url . "https://avatars1.githubusercontent.com/u/17315166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgaborNagy") (html_url . "https://github.com/EXPEgaborNagy") (followers_url . "https://api.github.com/users/EXPEgaborNagy/followers") (following_url . "https://api.github.com/users/EXPEgaborNagy/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgaborNagy/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgaborNagy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgaborNagy/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgaborNagy/orgs") (repos_url . "https://api.github.com/users/EXPEgaborNagy/repos") (events_url . "https://api.github.com/users/EXPEgaborNagy/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgaborNagy/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-ganagy@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-02-18T12:37:55Z") (updated_at . "2017-08-08T08:23:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vablaya1") (id . 16231031) (avatar_url . "https://avatars0.githubusercontent.com/u/16231031?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vablaya1") (html_url . "https://github.com/vablaya1") (followers_url . "https://api.github.com/users/vablaya1/followers") (following_url . "https://api.github.com/users/vablaya1/following{/other_user}") (gists_url . "https://api.github.com/users/vablaya1/gists{/gist_id}") (starred_url . "https://api.github.com/users/vablaya1/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vablaya1/subscriptions") (organizations_url . "https://api.github.com/users/vablaya1/orgs") (repos_url . "https://api.github.com/users/vablaya1/repos") (events_url . "https://api.github.com/users/vablaya1/events{/privacy}") (received_events_url . "https://api.github.com/users/vablaya1/received_events") (type . "User") (site_admin)))))) ((login . "vablaya1") (id . 16231031) (avatar_url . "https://avatars0.githubusercontent.com/u/16231031?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vablaya1") (html_url . "https://github.com/vablaya1") (followers_url . "https://api.github.com/users/vablaya1/followers") (following_url . "https://api.github.com/users/vablaya1/following{/other_user}") (gists_url . "https://api.github.com/users/vablaya1/gists{/gist_id}") (starred_url . "https://api.github.com/users/vablaya1/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vablaya1/subscriptions") (organizations_url . "https://api.github.com/users/vablaya1/orgs") (repos_url . "https://api.github.com/users/vablaya1/repos") (events_url . "https://api.github.com/users/vablaya1/events{/privacy}") (received_events_url . "https://api.github.com/users/vablaya1/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "vablaya@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 1) (following . 3) (created_at . "2015-12-09T21:03:30Z") (updated_at . "2018-01-05T06:06:46Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin)))))) ((login . "tehlers320") (id . 16598119) (avatar_url . "https://avatars2.githubusercontent.com/u/16598119?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tehlers320") (html_url . "https://github.com/tehlers320") (followers_url . "https://api.github.com/users/tehlers320/followers") (following_url . "https://api.github.com/users/tehlers320/following{/other_user}") (gists_url . "https://api.github.com/users/tehlers320/gists{/gist_id}") (starred_url . "https://api.github.com/users/tehlers320/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tehlers320/subscriptions") (organizations_url . "https://api.github.com/users/tehlers320/orgs") (repos_url . "https://api.github.com/users/tehlers320/repos") (events_url . "https://api.github.com/users/tehlers320/events{/privacy}") (received_events_url . "https://api.github.com/users/tehlers320/received_events") (type . "User") (site_admin) (name . "Timothy Ehlers") (company . "Expedia inc") (blog . "") (location . "Chicago, IL") (email) (hireable) (bio) (public_repos . 33) (public_gists . 0) (followers . 2) (following . 1) (created_at . "2016-01-07T18:28:23Z") (updated_at . "2018-01-18T05:30:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin)))))) ((login . "dinilatgit") (id . 6029955) (avatar_url . "https://avatars1.githubusercontent.com/u/6029955?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dinilatgit") (html_url . "https://github.com/dinilatgit") (followers_url . "https://api.github.com/users/dinilatgit/followers") (following_url . "https://api.github.com/users/dinilatgit/following{/other_user}") (gists_url . "https://api.github.com/users/dinilatgit/gists{/gist_id}") (starred_url . "https://api.github.com/users/dinilatgit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dinilatgit/subscriptions") (organizations_url . "https://api.github.com/users/dinilatgit/orgs") (repos_url . "https://api.github.com/users/dinilatgit/repos") (events_url . "https://api.github.com/users/dinilatgit/events{/privacy}") (received_events_url . "https://api.github.com/users/dinilatgit/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2013-11-25T10:34:02Z") (updated_at . "2017-07-18T02:24:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "v-janchen") (id . 7122071) (avatar_url . "https://avatars1.githubusercontent.com/u/7122071?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-janchen") (html_url . "https://github.com/v-janchen") (followers_url . "https://api.github.com/users/v-janchen/followers") (following_url . "https://api.github.com/users/v-janchen/following{/other_user}") (gists_url . "https://api.github.com/users/v-janchen/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-janchen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-janchen/subscriptions") (organizations_url . "https://api.github.com/users/v-janchen/orgs") (repos_url . "https://api.github.com/users/v-janchen/repos") (events_url . "https://api.github.com/users/v-janchen/events{/privacy}") (received_events_url . "https://api.github.com/users/v-janchen/received_events") (type . "User") (site_admin)))))) ((login . "v-janchen") (id . 7122071) (avatar_url . "https://avatars1.githubusercontent.com/u/7122071?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-janchen") (html_url . "https://github.com/v-janchen") (followers_url . "https://api.github.com/users/v-janchen/followers") (following_url . "https://api.github.com/users/v-janchen/following{/other_user}") (gists_url . "https://api.github.com/users/v-janchen/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-janchen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-janchen/subscriptions") (organizations_url . "https://api.github.com/users/v-janchen/orgs") (repos_url . "https://api.github.com/users/v-janchen/repos") (events_url . "https://api.github.com/users/v-janchen/events{/privacy}") (received_events_url . "https://api.github.com/users/v-janchen/received_events") (type . "User") (site_admin) (name . "v-janchen") (company) (blog . "") (location) (email . "v-janchen@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-01T02:18:25Z") (updated_at . "2017-02-06T09:54:39Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "exp-rbhagat") (id . 13133296) (avatar_url . "https://avatars3.githubusercontent.com/u/13133296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-rbhagat") (html_url . "https://github.com/exp-rbhagat") (followers_url . "https://api.github.com/users/exp-rbhagat/followers") (following_url . "https://api.github.com/users/exp-rbhagat/following{/other_user}") (gists_url . "https://api.github.com/users/exp-rbhagat/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-rbhagat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-rbhagat/subscriptions") (organizations_url . "https://api.github.com/users/exp-rbhagat/orgs") (repos_url . "https://api.github.com/users/exp-rbhagat/repos") (events_url . "https://api.github.com/users/exp-rbhagat/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-rbhagat/received_events") (type . "User") (site_admin)))))) ((login . "exp-rbhagat") (id . 13133296) (avatar_url . "https://avatars3.githubusercontent.com/u/13133296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-rbhagat") (html_url . "https://github.com/exp-rbhagat") (followers_url . "https://api.github.com/users/exp-rbhagat/followers") (following_url . "https://api.github.com/users/exp-rbhagat/following{/other_user}") (gists_url . "https://api.github.com/users/exp-rbhagat/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-rbhagat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-rbhagat/subscriptions") (organizations_url . "https://api.github.com/users/exp-rbhagat/orgs") (repos_url . "https://api.github.com/users/exp-rbhagat/repos") (events_url . "https://api.github.com/users/exp-rbhagat/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-rbhagat/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "rbhagat@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-07-01T10:00:09Z") (updated_at . "2018-01-10T10:16:42Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "julieta-salvado-expedia") (id . 29803127) (avatar_url . "https://avatars2.githubusercontent.com/u/29803127?v=4") (gravatar_id . "") (url . "https://api.github.com/users/julieta-salvado-expedia") (html_url . "https://github.com/julieta-salvado-expedia") (followers_url . "https://api.github.com/users/julieta-salvado-expedia/followers") (following_url . "https://api.github.com/users/julieta-salvado-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/julieta-salvado-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/julieta-salvado-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/julieta-salvado-expedia/subscriptions") (organizations_url . "https://api.github.com/users/julieta-salvado-expedia/orgs") (repos_url . "https://api.github.com/users/julieta-salvado-expedia/repos") (events_url . "https://api.github.com/users/julieta-salvado-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/julieta-salvado-expedia/received_events") (type . "User") (site_admin)))))) ((login . "julieta-salvado-expedia") (id . 29803127) (avatar_url . "https://avatars2.githubusercontent.com/u/29803127?v=4") (gravatar_id . "") (url . "https://api.github.com/users/julieta-salvado-expedia") (html_url . "https://github.com/julieta-salvado-expedia") (followers_url . "https://api.github.com/users/julieta-salvado-expedia/followers") (following_url . "https://api.github.com/users/julieta-salvado-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/julieta-salvado-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/julieta-salvado-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/julieta-salvado-expedia/subscriptions") (organizations_url . "https://api.github.com/users/julieta-salvado-expedia/orgs") (repos_url . "https://api.github.com/users/julieta-salvado-expedia/repos") (events_url . "https://api.github.com/users/julieta-salvado-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/julieta-salvado-expedia/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-jsalvado@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-06-30T18:01:40Z") (updated_at . "2018-01-05T14:04:28Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "shpathak") (id . 8323299) (avatar_url . "https://avatars0.githubusercontent.com/u/8323299?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shpathak") (html_url . "https://github.com/shpathak") (followers_url . "https://api.github.com/users/shpathak/followers") (following_url . "https://api.github.com/users/shpathak/following{/other_user}") (gists_url . "https://api.github.com/users/shpathak/gists{/gist_id}") (starred_url . "https://api.github.com/users/shpathak/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shpathak/subscriptions") (organizations_url . "https://api.github.com/users/shpathak/orgs") (repos_url . "https://api.github.com/users/shpathak/repos") (events_url . "https://api.github.com/users/shpathak/events{/privacy}") (received_events_url . "https://api.github.com/users/shpathak/received_events") (type . "User") (site_admin)))))) ((login . "shpathak") (id . 8323299) (avatar_url . "https://avatars0.githubusercontent.com/u/8323299?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shpathak") (html_url . "https://github.com/shpathak") (followers_url . "https://api.github.com/users/shpathak/followers") (following_url . "https://api.github.com/users/shpathak/following{/other_user}") (gists_url . "https://api.github.com/users/shpathak/gists{/gist_id}") (starred_url . "https://api.github.com/users/shpathak/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shpathak/subscriptions") (organizations_url . "https://api.github.com/users/shpathak/orgs") (repos_url . "https://api.github.com/users/shpathak/repos") (events_url . "https://api.github.com/users/shpathak/events{/privacy}") (received_events_url . "https://api.github.com/users/shpathak/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-07-31T19:21:09Z") (updated_at . "2018-01-19T03:14:17Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jsthink") (id . 6924874) (avatar_url . "https://avatars1.githubusercontent.com/u/6924874?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jsthink") (html_url . "https://github.com/jsthink") (followers_url . "https://api.github.com/users/jsthink/followers") (following_url . "https://api.github.com/users/jsthink/following{/other_user}") (gists_url . "https://api.github.com/users/jsthink/gists{/gist_id}") (starred_url . "https://api.github.com/users/jsthink/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jsthink/subscriptions") (organizations_url . "https://api.github.com/users/jsthink/orgs") (repos_url . "https://api.github.com/users/jsthink/repos") (events_url . "https://api.github.com/users/jsthink/events{/privacy}") (received_events_url . "https://api.github.com/users/jsthink/received_events") (type . "User") (site_admin)))))) ((login . "jsthink") (id . 6924874) (avatar_url . "https://avatars1.githubusercontent.com/u/6924874?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jsthink") (html_url . "https://github.com/jsthink") (followers_url . "https://api.github.com/users/jsthink/followers") (following_url . "https://api.github.com/users/jsthink/following{/other_user}") (gists_url . "https://api.github.com/users/jsthink/gists{/gist_id}") (starred_url . "https://api.github.com/users/jsthink/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jsthink/subscriptions") (organizations_url . "https://api.github.com/users/jsthink/orgs") (repos_url . "https://api.github.com/users/jsthink/repos") (events_url . "https://api.github.com/users/jsthink/events{/privacy}") (received_events_url . "https://api.github.com/users/jsthink/received_events") (type . "User") (site_admin) (name . "Julian Martin") (company . "Expedia") (blog . "") (location . "Sydney") (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-03-12T01:42:40Z") (updated_at . "2017-11-11T01:33:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "BradleyClifford") (id . 25250652) (avatar_url . "https://avatars2.githubusercontent.com/u/25250652?v=4") (gravatar_id . "") (url . "https://api.github.com/users/BradleyClifford") (html_url . "https://github.com/BradleyClifford") (followers_url . "https://api.github.com/users/BradleyClifford/followers") (following_url . "https://api.github.com/users/BradleyClifford/following{/other_user}") (gists_url . "https://api.github.com/users/BradleyClifford/gists{/gist_id}") (starred_url . "https://api.github.com/users/BradleyClifford/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/BradleyClifford/subscriptions") (organizations_url . "https://api.github.com/users/BradleyClifford/orgs") (repos_url . "https://api.github.com/users/BradleyClifford/repos") (events_url . "https://api.github.com/users/BradleyClifford/events{/privacy}") (received_events_url . "https://api.github.com/users/BradleyClifford/received_events") (type . "User") (site_admin)))))) ((login . "BradleyClifford") (id . 25250652) (avatar_url . "https://avatars2.githubusercontent.com/u/25250652?v=4") (gravatar_id . "") (url . "https://api.github.com/users/BradleyClifford") (html_url . "https://github.com/BradleyClifford") (followers_url . "https://api.github.com/users/BradleyClifford/followers") (following_url . "https://api.github.com/users/BradleyClifford/following{/other_user}") (gists_url . "https://api.github.com/users/BradleyClifford/gists{/gist_id}") (starred_url . "https://api.github.com/users/BradleyClifford/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/BradleyClifford/subscriptions") (organizations_url . "https://api.github.com/users/BradleyClifford/orgs") (repos_url . "https://api.github.com/users/BradleyClifford/repos") (events_url . "https://api.github.com/users/BradleyClifford/events{/privacy}") (received_events_url . "https://api.github.com/users/BradleyClifford/received_events") (type . "User") (site_admin) (name . "Bradley Clifford") (company) (blog . "") (location . "Bellevue WA") (email . "bclifford@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-01-20T16:19:06Z") (updated_at . "2017-05-24T16:52:25Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kkunaparaju") (id . 15147723) (avatar_url . "https://avatars3.githubusercontent.com/u/15147723?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkunaparaju") (html_url . "https://github.com/kkunaparaju") (followers_url . "https://api.github.com/users/kkunaparaju/followers") (following_url . "https://api.github.com/users/kkunaparaju/following{/other_user}") (gists_url . "https://api.github.com/users/kkunaparaju/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkunaparaju/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkunaparaju/subscriptions") (organizations_url . "https://api.github.com/users/kkunaparaju/orgs") (repos_url . "https://api.github.com/users/kkunaparaju/repos") (events_url . "https://api.github.com/users/kkunaparaju/events{/privacy}") (received_events_url . "https://api.github.com/users/kkunaparaju/received_events") (type . "User") (site_admin)))))) ((login . "kkunaparaju") (id . 15147723) (avatar_url . "https://avatars3.githubusercontent.com/u/15147723?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkunaparaju") (html_url . "https://github.com/kkunaparaju") (followers_url . "https://api.github.com/users/kkunaparaju/followers") (following_url . "https://api.github.com/users/kkunaparaju/following{/other_user}") (gists_url . "https://api.github.com/users/kkunaparaju/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkunaparaju/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkunaparaju/subscriptions") (organizations_url . "https://api.github.com/users/kkunaparaju/orgs") (repos_url . "https://api.github.com/users/kkunaparaju/repos") (events_url . "https://api.github.com/users/kkunaparaju/events{/privacy}") (received_events_url . "https://api.github.com/users/kkunaparaju/received_events") (type . "User") (site_admin) (name . "Karthick") (company) (blog . "") (location) (email . "kkunaparaju@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 1) (followers . 0) (following . 0) (created_at . "2015-10-15T19:50:29Z") (updated_at . "2017-11-15T01:01:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mrajendran79") (id . 28869764) (avatar_url . "https://avatars0.githubusercontent.com/u/28869764?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mrajendran79") (html_url . "https://github.com/mrajendran79") (followers_url . "https://api.github.com/users/mrajendran79/followers") (following_url . "https://api.github.com/users/mrajendran79/following{/other_user}") (gists_url . "https://api.github.com/users/mrajendran79/gists{/gist_id}") (starred_url . "https://api.github.com/users/mrajendran79/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mrajendran79/subscriptions") (organizations_url . "https://api.github.com/users/mrajendran79/orgs") (repos_url . "https://api.github.com/users/mrajendran79/repos") (events_url . "https://api.github.com/users/mrajendran79/events{/privacy}") (received_events_url . "https://api.github.com/users/mrajendran79/received_events") (type . "User") (site_admin)))))) ((login . "mrajendran79") (id . 28869764) (avatar_url . "https://avatars0.githubusercontent.com/u/28869764?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mrajendran79") (html_url . "https://github.com/mrajendran79") (followers_url . "https://api.github.com/users/mrajendran79/followers") (following_url . "https://api.github.com/users/mrajendran79/following{/other_user}") (gists_url . "https://api.github.com/users/mrajendran79/gists{/gist_id}") (starred_url . "https://api.github.com/users/mrajendran79/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mrajendran79/subscriptions") (organizations_url . "https://api.github.com/users/mrajendran79/orgs") (repos_url . "https://api.github.com/users/mrajendran79/repos") (events_url . "https://api.github.com/users/mrajendran79/events{/privacy}") (received_events_url . "https://api.github.com/users/mrajendran79/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-rmariappan@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-05-22T15:56:31Z") (updated_at . "2017-08-10T10:04:53Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mchandramouli") (id . 148128) (avatar_url . "https://avatars2.githubusercontent.com/u/148128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mchandramouli") (html_url . "https://github.com/mchandramouli") (followers_url . "https://api.github.com/users/mchandramouli/followers") (following_url . "https://api.github.com/users/mchandramouli/following{/other_user}") (gists_url . "https://api.github.com/users/mchandramouli/gists{/gist_id}") (starred_url . "https://api.github.com/users/mchandramouli/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mchandramouli/subscriptions") (organizations_url . "https://api.github.com/users/mchandramouli/orgs") (repos_url . "https://api.github.com/users/mchandramouli/repos") (events_url . "https://api.github.com/users/mchandramouli/events{/privacy}") (received_events_url . "https://api.github.com/users/mchandramouli/received_events") (type . "User") (site_admin)))))) ((login . "mchandramouli") (id . 148128) (avatar_url . "https://avatars2.githubusercontent.com/u/148128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mchandramouli") (html_url . "https://github.com/mchandramouli") (followers_url . "https://api.github.com/users/mchandramouli/followers") (following_url . "https://api.github.com/users/mchandramouli/following{/other_user}") (gists_url . "https://api.github.com/users/mchandramouli/gists{/gist_id}") (starred_url . "https://api.github.com/users/mchandramouli/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mchandramouli/subscriptions") (organizations_url . "https://api.github.com/users/mchandramouli/orgs") (repos_url . "https://api.github.com/users/mchandramouli/repos") (events_url . "https://api.github.com/users/mchandramouli/events{/privacy}") (received_events_url . "https://api.github.com/users/mchandramouli/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 10) (public_gists . 0) (followers . 6) (following . 3) (created_at . "2009-11-03T05:45:21Z") (updated_at . "2018-01-09T17:22:23Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mtarjanyi") (id . 20453491) (avatar_url . "https://avatars2.githubusercontent.com/u/20453491?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mtarjanyi") (html_url . "https://github.com/mtarjanyi") (followers_url . "https://api.github.com/users/mtarjanyi/followers") (following_url . "https://api.github.com/users/mtarjanyi/following{/other_user}") (gists_url . "https://api.github.com/users/mtarjanyi/gists{/gist_id}") (starred_url . "https://api.github.com/users/mtarjanyi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mtarjanyi/subscriptions") (organizations_url . "https://api.github.com/users/mtarjanyi/orgs") (repos_url . "https://api.github.com/users/mtarjanyi/repos") (events_url . "https://api.github.com/users/mtarjanyi/events{/privacy}") (received_events_url . "https://api.github.com/users/mtarjanyi/received_events") (type . "User") (site_admin)))))) ((login . "mtarjanyi") (id . 20453491) (avatar_url . "https://avatars2.githubusercontent.com/u/20453491?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mtarjanyi") (html_url . "https://github.com/mtarjanyi") (followers_url . "https://api.github.com/users/mtarjanyi/followers") (following_url . "https://api.github.com/users/mtarjanyi/following{/other_user}") (gists_url . "https://api.github.com/users/mtarjanyi/gists{/gist_id}") (starred_url . "https://api.github.com/users/mtarjanyi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mtarjanyi/subscriptions") (organizations_url . "https://api.github.com/users/mtarjanyi/orgs") (repos_url . "https://api.github.com/users/mtarjanyi/repos") (events_url . "https://api.github.com/users/mtarjanyi/events{/privacy}") (received_events_url . "https://api.github.com/users/mtarjanyi/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-mtarjanyi@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-07-14T06:53:33Z") (updated_at . "2018-01-12T07:29:06Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "guillermomanzo") (id . 19312468) (avatar_url . "https://avatars0.githubusercontent.com/u/19312468?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guillermomanzo") (html_url . "https://github.com/guillermomanzo") (followers_url . "https://api.github.com/users/guillermomanzo/followers") (following_url . "https://api.github.com/users/guillermomanzo/following{/other_user}") (gists_url . "https://api.github.com/users/guillermomanzo/gists{/gist_id}") (starred_url . "https://api.github.com/users/guillermomanzo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guillermomanzo/subscriptions") (organizations_url . "https://api.github.com/users/guillermomanzo/orgs") (repos_url . "https://api.github.com/users/guillermomanzo/repos") (events_url . "https://api.github.com/users/guillermomanzo/events{/privacy}") (received_events_url . "https://api.github.com/users/guillermomanzo/received_events") (type . "User") (site_admin)))))) ((login . "guillermomanzo") (id . 19312468) (avatar_url . "https://avatars0.githubusercontent.com/u/19312468?v=4") (gravatar_id . "") (url . "https://api.github.com/users/guillermomanzo") (html_url . "https://github.com/guillermomanzo") (followers_url . "https://api.github.com/users/guillermomanzo/followers") (following_url . "https://api.github.com/users/guillermomanzo/following{/other_user}") (gists_url . "https://api.github.com/users/guillermomanzo/gists{/gist_id}") (starred_url . "https://api.github.com/users/guillermomanzo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/guillermomanzo/subscriptions") (organizations_url . "https://api.github.com/users/guillermomanzo/orgs") (repos_url . "https://api.github.com/users/guillermomanzo/repos") (events_url . "https://api.github.com/users/guillermomanzo/events{/privacy}") (received_events_url . "https://api.github.com/users/guillermomanzo/received_events") (type . "User") (site_admin) (name . "Guillermo Manzo") (company) (blog . "") (location) (email . "a-gmanzo@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-05-11T18:28:16Z") (updated_at . "2017-12-18T17:09:30Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Derikulous") (id . 4932623) (avatar_url . "https://avatars2.githubusercontent.com/u/4932623?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Derikulous") (html_url . "https://github.com/Derikulous") (followers_url . "https://api.github.com/users/Derikulous/followers") (following_url . "https://api.github.com/users/Derikulous/following{/other_user}") (gists_url . "https://api.github.com/users/Derikulous/gists{/gist_id}") (starred_url . "https://api.github.com/users/Derikulous/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Derikulous/subscriptions") (organizations_url . "https://api.github.com/users/Derikulous/orgs") (repos_url . "https://api.github.com/users/Derikulous/repos") (events_url . "https://api.github.com/users/Derikulous/events{/privacy}") (received_events_url . "https://api.github.com/users/Derikulous/received_events") (type . "User") (site_admin)))))) ((login . "Derikulous") (id . 4932623) (avatar_url . "https://avatars2.githubusercontent.com/u/4932623?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Derikulous") (html_url . "https://github.com/Derikulous") (followers_url . "https://api.github.com/users/Derikulous/followers") (following_url . "https://api.github.com/users/Derikulous/following{/other_user}") (gists_url . "https://api.github.com/users/Derikulous/gists{/gist_id}") (starred_url . "https://api.github.com/users/Derikulous/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Derikulous/subscriptions") (organizations_url . "https://api.github.com/users/Derikulous/orgs") (repos_url . "https://api.github.com/users/Derikulous/repos") (events_url . "https://api.github.com/users/Derikulous/events{/privacy}") (received_events_url . "https://api.github.com/users/Derikulous/received_events") (type . "User") (site_admin) (name . "Derik Strattan") (company . "Expedia") (blog . "https://www.derikstrattan.com") (location . "Seattle") (email . "dstrattan@expedia.com") (hireable . t) (bio) (public_repos . 46) (public_gists . 1) (followers . 25) (following . 36) (created_at . "2013-07-03T18:16:14Z") (updated_at . "2018-01-03T23:51:13Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEkarasingh") (id . 19822089) (avatar_url . "https://avatars1.githubusercontent.com/u/19822089?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEkarasingh") (html_url . "https://github.com/EXPEkarasingh") (followers_url . "https://api.github.com/users/EXPEkarasingh/followers") (following_url . "https://api.github.com/users/EXPEkarasingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEkarasingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEkarasingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEkarasingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEkarasingh/orgs") (repos_url . "https://api.github.com/users/EXPEkarasingh/repos") (events_url . "https://api.github.com/users/EXPEkarasingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEkarasingh/received_events") (type . "User") (site_admin)))))) ((login . "EXPEkarasingh") (id . 19822089) (avatar_url . "https://avatars1.githubusercontent.com/u/19822089?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEkarasingh") (html_url . "https://github.com/EXPEkarasingh") (followers_url . "https://api.github.com/users/EXPEkarasingh/followers") (following_url . "https://api.github.com/users/EXPEkarasingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEkarasingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEkarasingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEkarasingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEkarasingh/orgs") (repos_url . "https://api.github.com/users/EXPEkarasingh/repos") (events_url . "https://api.github.com/users/EXPEkarasingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEkarasingh/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-karasingh@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-06-08T15:22:34Z") (updated_at . "2016-09-19T17:40:03Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEpbollu") (id . 31772060) (avatar_url . "https://avatars0.githubusercontent.com/u/31772060?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpbollu") (html_url . "https://github.com/EXPEpbollu") (followers_url . "https://api.github.com/users/EXPEpbollu/followers") (following_url . "https://api.github.com/users/EXPEpbollu/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpbollu/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpbollu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpbollu/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpbollu/orgs") (repos_url . "https://api.github.com/users/EXPEpbollu/repos") (events_url . "https://api.github.com/users/EXPEpbollu/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpbollu/received_events") (type . "User") (site_admin)))))) ((login . "EXPEpbollu") (id . 31772060) (avatar_url . "https://avatars0.githubusercontent.com/u/31772060?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpbollu") (html_url . "https://github.com/EXPEpbollu") (followers_url . "https://api.github.com/users/EXPEpbollu/followers") (following_url . "https://api.github.com/users/EXPEpbollu/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpbollu/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpbollu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpbollu/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpbollu/orgs") (repos_url . "https://api.github.com/users/EXPEpbollu/repos") (events_url . "https://api.github.com/users/EXPEpbollu/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpbollu/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "pbollu@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-09-08T14:53:47Z") (updated_at . "2017-12-01T16:40:28Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "juchuang") (id . 20076965) (avatar_url . "https://avatars3.githubusercontent.com/u/20076965?v=4") (gravatar_id . "") (url . "https://api.github.com/users/juchuang") (html_url . "https://github.com/juchuang") (followers_url . "https://api.github.com/users/juchuang/followers") (following_url . "https://api.github.com/users/juchuang/following{/other_user}") (gists_url . "https://api.github.com/users/juchuang/gists{/gist_id}") (starred_url . "https://api.github.com/users/juchuang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/juchuang/subscriptions") (organizations_url . "https://api.github.com/users/juchuang/orgs") (repos_url . "https://api.github.com/users/juchuang/repos") (events_url . "https://api.github.com/users/juchuang/events{/privacy}") (received_events_url . "https://api.github.com/users/juchuang/received_events") (type . "User") (site_admin)))))) ((login . "juchuang") (id . 20076965) (avatar_url . "https://avatars3.githubusercontent.com/u/20076965?v=4") (gravatar_id . "") (url . "https://api.github.com/users/juchuang") (html_url . "https://github.com/juchuang") (followers_url . "https://api.github.com/users/juchuang/followers") (following_url . "https://api.github.com/users/juchuang/following{/other_user}") (gists_url . "https://api.github.com/users/juchuang/gists{/gist_id}") (starred_url . "https://api.github.com/users/juchuang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/juchuang/subscriptions") (organizations_url . "https://api.github.com/users/juchuang/orgs") (repos_url . "https://api.github.com/users/juchuang/repos") (events_url . "https://api.github.com/users/juchuang/events{/privacy}") (received_events_url . "https://api.github.com/users/juchuang/received_events") (type . "User") (site_admin) (name . "Julia Chuang") (company) (blog . "") (location) (email . "v-juchuang@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-06-21T23:40:17Z") (updated_at . "2018-01-16T19:04:59Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mbilenkis") (id . 28301) (avatar_url . "https://avatars0.githubusercontent.com/u/28301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mbilenkis") (html_url . "https://github.com/mbilenkis") (followers_url . "https://api.github.com/users/mbilenkis/followers") (following_url . "https://api.github.com/users/mbilenkis/following{/other_user}") (gists_url . "https://api.github.com/users/mbilenkis/gists{/gist_id}") (starred_url . "https://api.github.com/users/mbilenkis/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mbilenkis/subscriptions") (organizations_url . "https://api.github.com/users/mbilenkis/orgs") (repos_url . "https://api.github.com/users/mbilenkis/repos") (events_url . "https://api.github.com/users/mbilenkis/events{/privacy}") (received_events_url . "https://api.github.com/users/mbilenkis/received_events") (type . "User") (site_admin)))))) ((login . "mbilenkis") (id . 28301) (avatar_url . "https://avatars0.githubusercontent.com/u/28301?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mbilenkis") (html_url . "https://github.com/mbilenkis") (followers_url . "https://api.github.com/users/mbilenkis/followers") (following_url . "https://api.github.com/users/mbilenkis/following{/other_user}") (gists_url . "https://api.github.com/users/mbilenkis/gists{/gist_id}") (starred_url . "https://api.github.com/users/mbilenkis/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mbilenkis/subscriptions") (organizations_url . "https://api.github.com/users/mbilenkis/orgs") (repos_url . "https://api.github.com/users/mbilenkis/repos") (events_url . "https://api.github.com/users/mbilenkis/events{/privacy}") (received_events_url . "https://api.github.com/users/mbilenkis/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-mbilenkis@expedia.com") (hireable) (bio) (public_repos . 4) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2008-10-09T18:00:12Z") (updated_at . "2017-12-20T17:47:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "v-presingh") (id . 8372697) (avatar_url . "https://avatars3.githubusercontent.com/u/8372697?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-presingh") (html_url . "https://github.com/v-presingh") (followers_url . "https://api.github.com/users/v-presingh/followers") (following_url . "https://api.github.com/users/v-presingh/following{/other_user}") (gists_url . "https://api.github.com/users/v-presingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-presingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-presingh/subscriptions") (organizations_url . "https://api.github.com/users/v-presingh/orgs") (repos_url . "https://api.github.com/users/v-presingh/repos") (events_url . "https://api.github.com/users/v-presingh/events{/privacy}") (received_events_url . "https://api.github.com/users/v-presingh/received_events") (type . "User") (site_admin)))))) ((login . "v-presingh") (id . 8372697) (avatar_url . "https://avatars3.githubusercontent.com/u/8372697?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-presingh") (html_url . "https://github.com/v-presingh") (followers_url . "https://api.github.com/users/v-presingh/followers") (following_url . "https://api.github.com/users/v-presingh/following{/other_user}") (gists_url . "https://api.github.com/users/v-presingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-presingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-presingh/subscriptions") (organizations_url . "https://api.github.com/users/v-presingh/orgs") (repos_url . "https://api.github.com/users/v-presingh/repos") (events_url . "https://api.github.com/users/v-presingh/events{/privacy}") (received_events_url . "https://api.github.com/users/v-presingh/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-08-06T09:17:20Z") (updated_at . "2017-10-13T11:34:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pprasannakumar") (id . 17292996) (avatar_url . "https://avatars0.githubusercontent.com/u/17292996?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pprasannakumar") (html_url . "https://github.com/pprasannakumar") (followers_url . "https://api.github.com/users/pprasannakumar/followers") (following_url . "https://api.github.com/users/pprasannakumar/following{/other_user}") (gists_url . "https://api.github.com/users/pprasannakumar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pprasannakumar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pprasannakumar/subscriptions") (organizations_url . "https://api.github.com/users/pprasannakumar/orgs") (repos_url . "https://api.github.com/users/pprasannakumar/repos") (events_url . "https://api.github.com/users/pprasannakumar/events{/privacy}") (received_events_url . "https://api.github.com/users/pprasannakumar/received_events") (type . "User") (site_admin)))))) ((login . "pprasannakumar") (id . 17292996) (avatar_url . "https://avatars0.githubusercontent.com/u/17292996?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pprasannakumar") (html_url . "https://github.com/pprasannakumar") (followers_url . "https://api.github.com/users/pprasannakumar/followers") (following_url . "https://api.github.com/users/pprasannakumar/following{/other_user}") (gists_url . "https://api.github.com/users/pprasannakumar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pprasannakumar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pprasannakumar/subscriptions") (organizations_url . "https://api.github.com/users/pprasannakumar/orgs") (repos_url . "https://api.github.com/users/pprasannakumar/repos") (events_url . "https://api.github.com/users/pprasannakumar/events{/privacy}") (received_events_url . "https://api.github.com/users/pprasannakumar/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-pprasannakumar@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-02-17T11:40:38Z") (updated_at . "2018-01-18T04:46:52Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vasanthsubram") (id . 8943055) (avatar_url . "https://avatars0.githubusercontent.com/u/8943055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthsubram") (html_url . "https://github.com/vasanthsubram") (followers_url . "https://api.github.com/users/vasanthsubram/followers") (following_url . "https://api.github.com/users/vasanthsubram/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthsubram/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthsubram/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthsubram/subscriptions") (organizations_url . "https://api.github.com/users/vasanthsubram/orgs") (repos_url . "https://api.github.com/users/vasanthsubram/repos") (events_url . "https://api.github.com/users/vasanthsubram/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthsubram/received_events") (type . "User") (site_admin)))))) ((login . "vasanthsubram") (id . 8943055) (avatar_url . "https://avatars0.githubusercontent.com/u/8943055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthsubram") (html_url . "https://github.com/vasanthsubram") (followers_url . "https://api.github.com/users/vasanthsubram/followers") (following_url . "https://api.github.com/users/vasanthsubram/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthsubram/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthsubram/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthsubram/subscriptions") (organizations_url . "https://api.github.com/users/vasanthsubram/orgs") (repos_url . "https://api.github.com/users/vasanthsubram/repos") (events_url . "https://api.github.com/users/vasanthsubram/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthsubram/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 7) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-09-28T00:25:16Z") (updated_at . "2017-08-18T23:01:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "npereiraexpedia") (id . 16762021) (avatar_url . "https://avatars1.githubusercontent.com/u/16762021?v=4") (gravatar_id . "") (url . "https://api.github.com/users/npereiraexpedia") (html_url . "https://github.com/npereiraexpedia") (followers_url . "https://api.github.com/users/npereiraexpedia/followers") (following_url . "https://api.github.com/users/npereiraexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/npereiraexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/npereiraexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/npereiraexpedia/subscriptions") (organizations_url . "https://api.github.com/users/npereiraexpedia/orgs") (repos_url . "https://api.github.com/users/npereiraexpedia/repos") (events_url . "https://api.github.com/users/npereiraexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/npereiraexpedia/received_events") (type . "User") (site_admin)))))) ((login . "npereiraexpedia") (id . 16762021) (avatar_url . "https://avatars1.githubusercontent.com/u/16762021?v=4") (gravatar_id . "") (url . "https://api.github.com/users/npereiraexpedia") (html_url . "https://github.com/npereiraexpedia") (followers_url . "https://api.github.com/users/npereiraexpedia/followers") (following_url . "https://api.github.com/users/npereiraexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/npereiraexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/npereiraexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/npereiraexpedia/subscriptions") (organizations_url . "https://api.github.com/users/npereiraexpedia/orgs") (repos_url . "https://api.github.com/users/npereiraexpedia/repos") (events_url . "https://api.github.com/users/npereiraexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/npereiraexpedia/received_events") (type . "User") (site_admin) (name . "Nuno Pereira") (company . "Expedia Inc") (blog . "") (location . "London") (email) (hireable) (bio) (public_repos . 0) (public_gists . 1) (followers . 0) (following . 0) (created_at . "2016-01-18T15:53:37Z") (updated_at . "2018-01-19T22:57:53Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "danielletran") (id . 11713332) (avatar_url . "https://avatars1.githubusercontent.com/u/11713332?v=4") (gravatar_id . "") (url . "https://api.github.com/users/danielletran") (html_url . "https://github.com/danielletran") (followers_url . "https://api.github.com/users/danielletran/followers") (following_url . "https://api.github.com/users/danielletran/following{/other_user}") (gists_url . "https://api.github.com/users/danielletran/gists{/gist_id}") (starred_url . "https://api.github.com/users/danielletran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/danielletran/subscriptions") (organizations_url . "https://api.github.com/users/danielletran/orgs") (repos_url . "https://api.github.com/users/danielletran/repos") (events_url . "https://api.github.com/users/danielletran/events{/privacy}") (received_events_url . "https://api.github.com/users/danielletran/received_events") (type . "User") (site_admin)))))) ((login . "danielletran") (id . 11713332) (avatar_url . "https://avatars1.githubusercontent.com/u/11713332?v=4") (gravatar_id . "") (url . "https://api.github.com/users/danielletran") (html_url . "https://github.com/danielletran") (followers_url . "https://api.github.com/users/danielletran/followers") (following_url . "https://api.github.com/users/danielletran/following{/other_user}") (gists_url . "https://api.github.com/users/danielletran/gists{/gist_id}") (starred_url . "https://api.github.com/users/danielletran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/danielletran/subscriptions") (organizations_url . "https://api.github.com/users/danielletran/orgs") (repos_url . "https://api.github.com/users/danielletran/repos") (events_url . "https://api.github.com/users/danielletran/events{/privacy}") (received_events_url . "https://api.github.com/users/danielletran/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-03-30T03:32:29Z") (updated_at . "2017-12-12T04:58:40Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "bartvangeneugden") (id . 3415464) (avatar_url . "https://avatars1.githubusercontent.com/u/3415464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bartvangeneugden") (html_url . "https://github.com/bartvangeneugden") (followers_url . "https://api.github.com/users/bartvangeneugden/followers") (following_url . "https://api.github.com/users/bartvangeneugden/following{/other_user}") (gists_url . "https://api.github.com/users/bartvangeneugden/gists{/gist_id}") (starred_url . "https://api.github.com/users/bartvangeneugden/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bartvangeneugden/subscriptions") (organizations_url . "https://api.github.com/users/bartvangeneugden/orgs") (repos_url . "https://api.github.com/users/bartvangeneugden/repos") (events_url . "https://api.github.com/users/bartvangeneugden/events{/privacy}") (received_events_url . "https://api.github.com/users/bartvangeneugden/received_events") (type . "User") (site_admin)))))) ((login . "bartvangeneugden") (id . 3415464) (avatar_url . "https://avatars1.githubusercontent.com/u/3415464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bartvangeneugden") (html_url . "https://github.com/bartvangeneugden") (followers_url . "https://api.github.com/users/bartvangeneugden/followers") (following_url . "https://api.github.com/users/bartvangeneugden/following{/other_user}") (gists_url . "https://api.github.com/users/bartvangeneugden/gists{/gist_id}") (starred_url . "https://api.github.com/users/bartvangeneugden/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bartvangeneugden/subscriptions") (organizations_url . "https://api.github.com/users/bartvangeneugden/orgs") (repos_url . "https://api.github.com/users/bartvangeneugden/repos") (events_url . "https://api.github.com/users/bartvangeneugden/events{/privacy}") (received_events_url . "https://api.github.com/users/bartvangeneugden/received_events") (type . "User") (site_admin) (name . "Bart Vangeneugden") (company . "Expedia Inc.") (blog . "") (location . "London") (email . "bart@bartv.be") (hireable) (bio) (public_repos . 28) (public_gists . 1) (followers . 2) (following . 0) (created_at . "2013-01-29T09:47:17Z") (updated_at . "2018-01-17T10:55:54Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sakul-kaowvichit") (id . 14897075) (avatar_url . "https://avatars3.githubusercontent.com/u/14897075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sakul-kaowvichit") (html_url . "https://github.com/sakul-kaowvichit") (followers_url . "https://api.github.com/users/sakul-kaowvichit/followers") (following_url . "https://api.github.com/users/sakul-kaowvichit/following{/other_user}") (gists_url . "https://api.github.com/users/sakul-kaowvichit/gists{/gist_id}") (starred_url . "https://api.github.com/users/sakul-kaowvichit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sakul-kaowvichit/subscriptions") (organizations_url . "https://api.github.com/users/sakul-kaowvichit/orgs") (repos_url . "https://api.github.com/users/sakul-kaowvichit/repos") (events_url . "https://api.github.com/users/sakul-kaowvichit/events{/privacy}") (received_events_url . "https://api.github.com/users/sakul-kaowvichit/received_events") (type . "User") (site_admin)))))) ((login . "sakul-kaowvichit") (id . 14897075) (avatar_url . "https://avatars3.githubusercontent.com/u/14897075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sakul-kaowvichit") (html_url . "https://github.com/sakul-kaowvichit") (followers_url . "https://api.github.com/users/sakul-kaowvichit/followers") (following_url . "https://api.github.com/users/sakul-kaowvichit/following{/other_user}") (gists_url . "https://api.github.com/users/sakul-kaowvichit/gists{/gist_id}") (starred_url . "https://api.github.com/users/sakul-kaowvichit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sakul-kaowvichit/subscriptions") (organizations_url . "https://api.github.com/users/sakul-kaowvichit/orgs") (repos_url . "https://api.github.com/users/sakul-kaowvichit/repos") (events_url . "https://api.github.com/users/sakul-kaowvichit/events{/privacy}") (received_events_url . "https://api.github.com/users/sakul-kaowvichit/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-09-29T21:36:52Z") (updated_at . "2017-12-26T19:10:14Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)))))) ((login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin) (name . "Bryan Shell") (company . "Expedia") (blog . "") (location . "Chicago, IL") (email) (hireable . t) (bio) (public_repos . 48) (public_gists . 2) (followers . 16) (following . 18) (created_at . "2010-09-13T18:21:54Z") (updated_at . "2018-01-05T20:00:02Z") (private_gists . 1) (total_private_repos . 5) (owned_private_repos . 0) (disk_usage . 11940) (collaborators . 0) (two_factor_authentication . t) (plan (name . "free") (space . 976562499) (collaborators . 0) (private_repos . 0))) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPElsingla") (id . 14923473) (avatar_url . "https://avatars1.githubusercontent.com/u/14923473?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPElsingla") (html_url . "https://github.com/EXPElsingla") (followers_url . "https://api.github.com/users/EXPElsingla/followers") (following_url . "https://api.github.com/users/EXPElsingla/following{/other_user}") (gists_url . "https://api.github.com/users/EXPElsingla/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPElsingla/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPElsingla/subscriptions") (organizations_url . "https://api.github.com/users/EXPElsingla/orgs") (repos_url . "https://api.github.com/users/EXPElsingla/repos") (events_url . "https://api.github.com/users/EXPElsingla/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPElsingla/received_events") (type . "User") (site_admin)))))) ((login . "EXPElsingla") (id . 14923473) (avatar_url . "https://avatars1.githubusercontent.com/u/14923473?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPElsingla") (html_url . "https://github.com/EXPElsingla") (followers_url . "https://api.github.com/users/EXPElsingla/followers") (following_url . "https://api.github.com/users/EXPElsingla/following{/other_user}") (gists_url . "https://api.github.com/users/EXPElsingla/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPElsingla/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPElsingla/subscriptions") (organizations_url . "https://api.github.com/users/EXPElsingla/orgs") (repos_url . "https://api.github.com/users/EXPElsingla/repos") (events_url . "https://api.github.com/users/EXPElsingla/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPElsingla/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "lsingla@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-10-01T11:05:35Z") (updated_at . "2017-11-07T10:40:11Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin)))))) ((login . "vlalwani") (id . 9964256) (avatar_url . "https://avatars2.githubusercontent.com/u/9964256?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vlalwani") (html_url . "https://github.com/vlalwani") (followers_url . "https://api.github.com/users/vlalwani/followers") (following_url . "https://api.github.com/users/vlalwani/following{/other_user}") (gists_url . "https://api.github.com/users/vlalwani/gists{/gist_id}") (starred_url . "https://api.github.com/users/vlalwani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vlalwani/subscriptions") (organizations_url . "https://api.github.com/users/vlalwani/orgs") (repos_url . "https://api.github.com/users/vlalwani/repos") (events_url . "https://api.github.com/users/vlalwani/events{/privacy}") (received_events_url . "https://api.github.com/users/vlalwani/received_events") (type . "User") (site_admin) (name . "Vikas Lalwani") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2014-11-26T15:38:15Z") (updated_at . "2018-01-20T12:12:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "antdrums") (id . 2259526) (avatar_url . "https://avatars3.githubusercontent.com/u/2259526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/antdrums") (html_url . "https://github.com/antdrums") (followers_url . "https://api.github.com/users/antdrums/followers") (following_url . "https://api.github.com/users/antdrums/following{/other_user}") (gists_url . "https://api.github.com/users/antdrums/gists{/gist_id}") (starred_url . "https://api.github.com/users/antdrums/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/antdrums/subscriptions") (organizations_url . "https://api.github.com/users/antdrums/orgs") (repos_url . "https://api.github.com/users/antdrums/repos") (events_url . "https://api.github.com/users/antdrums/events{/privacy}") (received_events_url . "https://api.github.com/users/antdrums/received_events") (type . "User") (site_admin)))))) ((login . "antdrums") (id . 2259526) (avatar_url . "https://avatars3.githubusercontent.com/u/2259526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/antdrums") (html_url . "https://github.com/antdrums") (followers_url . "https://api.github.com/users/antdrums/followers") (following_url . "https://api.github.com/users/antdrums/following{/other_user}") (gists_url . "https://api.github.com/users/antdrums/gists{/gist_id}") (starred_url . "https://api.github.com/users/antdrums/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/antdrums/subscriptions") (organizations_url . "https://api.github.com/users/antdrums/orgs") (repos_url . "https://api.github.com/users/antdrums/repos") (events_url . "https://api.github.com/users/antdrums/events{/privacy}") (received_events_url . "https://api.github.com/users/antdrums/received_events") (type . "User") (site_admin) (name . "A P") (company . "Expedia") (blog . "") (location . "Brisbane") (email) (hireable) (bio) (public_repos . 10) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2012-09-01T08:00:30Z") (updated_at . "2018-01-22T03:59:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "astewart") (id . 715599) (avatar_url . "https://avatars3.githubusercontent.com/u/715599?v=4") (gravatar_id . "") (url . "https://api.github.com/users/astewart") (html_url . "https://github.com/astewart") (followers_url . "https://api.github.com/users/astewart/followers") (following_url . "https://api.github.com/users/astewart/following{/other_user}") (gists_url . "https://api.github.com/users/astewart/gists{/gist_id}") (starred_url . "https://api.github.com/users/astewart/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/astewart/subscriptions") (organizations_url . "https://api.github.com/users/astewart/orgs") (repos_url . "https://api.github.com/users/astewart/repos") (events_url . "https://api.github.com/users/astewart/events{/privacy}") (received_events_url . "https://api.github.com/users/astewart/received_events") (type . "User") (site_admin)))))) ((login . "astewart") (id . 715599) (avatar_url . "https://avatars3.githubusercontent.com/u/715599?v=4") (gravatar_id . "") (url . "https://api.github.com/users/astewart") (html_url . "https://github.com/astewart") (followers_url . "https://api.github.com/users/astewart/followers") (following_url . "https://api.github.com/users/astewart/following{/other_user}") (gists_url . "https://api.github.com/users/astewart/gists{/gist_id}") (starred_url . "https://api.github.com/users/astewart/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/astewart/subscriptions") (organizations_url . "https://api.github.com/users/astewart/orgs") (repos_url . "https://api.github.com/users/astewart/repos") (events_url . "https://api.github.com/users/astewart/events{/privacy}") (received_events_url . "https://api.github.com/users/astewart/received_events") (type . "User") (site_admin) (name . "Andrew Stewart") (company) (blog . "") (location) (email . "astewart@expedia.com") (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2011-04-07T15:41:14Z") (updated_at . "2018-01-17T22:08:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEasinghal") (id . 10918350) (avatar_url . "https://avatars1.githubusercontent.com/u/10918350?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEasinghal") (html_url . "https://github.com/EXPEasinghal") (followers_url . "https://api.github.com/users/EXPEasinghal/followers") (following_url . "https://api.github.com/users/EXPEasinghal/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEasinghal/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEasinghal/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEasinghal/subscriptions") (organizations_url . "https://api.github.com/users/EXPEasinghal/orgs") (repos_url . "https://api.github.com/users/EXPEasinghal/repos") (events_url . "https://api.github.com/users/EXPEasinghal/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEasinghal/received_events") (type . "User") (site_admin)))))) ((login . "EXPEasinghal") (id . 10918350) (avatar_url . "https://avatars1.githubusercontent.com/u/10918350?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEasinghal") (html_url . "https://github.com/EXPEasinghal") (followers_url . "https://api.github.com/users/EXPEasinghal/followers") (following_url . "https://api.github.com/users/EXPEasinghal/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEasinghal/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEasinghal/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEasinghal/subscriptions") (organizations_url . "https://api.github.com/users/EXPEasinghal/orgs") (repos_url . "https://api.github.com/users/EXPEasinghal/repos") (events_url . "https://api.github.com/users/EXPEasinghal/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEasinghal/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "asinghal@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 3) (created_at . "2015-02-09T07:03:58Z") (updated_at . "2017-09-15T05:23:34Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin)))))) ((login . "MADHAVITRIVEDI") (id . 7313538) (avatar_url . "https://avatars3.githubusercontent.com/u/7313538?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MADHAVITRIVEDI") (html_url . "https://github.com/MADHAVITRIVEDI") (followers_url . "https://api.github.com/users/MADHAVITRIVEDI/followers") (following_url . "https://api.github.com/users/MADHAVITRIVEDI/following{/other_user}") (gists_url . "https://api.github.com/users/MADHAVITRIVEDI/gists{/gist_id}") (starred_url . "https://api.github.com/users/MADHAVITRIVEDI/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MADHAVITRIVEDI/subscriptions") (organizations_url . "https://api.github.com/users/MADHAVITRIVEDI/orgs") (repos_url . "https://api.github.com/users/MADHAVITRIVEDI/repos") (events_url . "https://api.github.com/users/MADHAVITRIVEDI/events{/privacy}") (received_events_url . "https://api.github.com/users/MADHAVITRIVEDI/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-16T10:42:19Z") (updated_at . "2017-03-22T11:09:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ttapping333") (id . 7170082) (avatar_url . "https://avatars2.githubusercontent.com/u/7170082?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ttapping333") (html_url . "https://github.com/ttapping333") (followers_url . "https://api.github.com/users/ttapping333/followers") (following_url . "https://api.github.com/users/ttapping333/following{/other_user}") (gists_url . "https://api.github.com/users/ttapping333/gists{/gist_id}") (starred_url . "https://api.github.com/users/ttapping333/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ttapping333/subscriptions") (organizations_url . "https://api.github.com/users/ttapping333/orgs") (repos_url . "https://api.github.com/users/ttapping333/repos") (events_url . "https://api.github.com/users/ttapping333/events{/privacy}") (received_events_url . "https://api.github.com/users/ttapping333/received_events") (type . "User") (site_admin)))))) ((login . "ttapping333") (id . 7170082) (avatar_url . "https://avatars2.githubusercontent.com/u/7170082?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ttapping333") (html_url . "https://github.com/ttapping333") (followers_url . "https://api.github.com/users/ttapping333/followers") (following_url . "https://api.github.com/users/ttapping333/following{/other_user}") (gists_url . "https://api.github.com/users/ttapping333/gists{/gist_id}") (starred_url . "https://api.github.com/users/ttapping333/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ttapping333/subscriptions") (organizations_url . "https://api.github.com/users/ttapping333/orgs") (repos_url . "https://api.github.com/users/ttapping333/repos") (events_url . "https://api.github.com/users/ttapping333/events{/privacy}") (received_events_url . "https://api.github.com/users/ttapping333/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-04T16:10:55Z") (updated_at . "2017-11-01T23:05:57Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin)))))) ((login . "PierreCote") (id . 4174679) (avatar_url . "https://avatars3.githubusercontent.com/u/4174679?v=4") (gravatar_id . "") (url . "https://api.github.com/users/PierreCote") (html_url . "https://github.com/PierreCote") (followers_url . "https://api.github.com/users/PierreCote/followers") (following_url . "https://api.github.com/users/PierreCote/following{/other_user}") (gists_url . "https://api.github.com/users/PierreCote/gists{/gist_id}") (starred_url . "https://api.github.com/users/PierreCote/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/PierreCote/subscriptions") (organizations_url . "https://api.github.com/users/PierreCote/orgs") (repos_url . "https://api.github.com/users/PierreCote/repos") (events_url . "https://api.github.com/users/PierreCote/events{/privacy}") (received_events_url . "https://api.github.com/users/PierreCote/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "pcote@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-04-16T20:07:44Z") (updated_at . "2017-05-23T17:59:12Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "narbs91") (id . 29411347) (avatar_url . "https://avatars2.githubusercontent.com/u/29411347?v=4") (gravatar_id . "") (url . "https://api.github.com/users/narbs91") (html_url . "https://github.com/narbs91") (followers_url . "https://api.github.com/users/narbs91/followers") (following_url . "https://api.github.com/users/narbs91/following{/other_user}") (gists_url . "https://api.github.com/users/narbs91/gists{/gist_id}") (starred_url . "https://api.github.com/users/narbs91/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/narbs91/subscriptions") (organizations_url . "https://api.github.com/users/narbs91/orgs") (repos_url . "https://api.github.com/users/narbs91/repos") (events_url . "https://api.github.com/users/narbs91/events{/privacy}") (received_events_url . "https://api.github.com/users/narbs91/received_events") (type . "User") (site_admin)))))) ((login . "narbs91") (id . 29411347) (avatar_url . "https://avatars2.githubusercontent.com/u/29411347?v=4") (gravatar_id . "") (url . "https://api.github.com/users/narbs91") (html_url . "https://github.com/narbs91") (followers_url . "https://api.github.com/users/narbs91/followers") (following_url . "https://api.github.com/users/narbs91/following{/other_user}") (gists_url . "https://api.github.com/users/narbs91/gists{/gist_id}") (starred_url . "https://api.github.com/users/narbs91/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/narbs91/subscriptions") (organizations_url . "https://api.github.com/users/narbs91/orgs") (repos_url . "https://api.github.com/users/narbs91/repos") (events_url . "https://api.github.com/users/narbs91/events{/privacy}") (received_events_url . "https://api.github.com/users/narbs91/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "nshahnazarian@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-06-13T18:32:23Z") (updated_at . "2017-06-17T19:00:44Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "andreihalici") (id . 1394474) (avatar_url . "https://avatars2.githubusercontent.com/u/1394474?v=4") (gravatar_id . "") (url . "https://api.github.com/users/andreihalici") (html_url . "https://github.com/andreihalici") (followers_url . "https://api.github.com/users/andreihalici/followers") (following_url . "https://api.github.com/users/andreihalici/following{/other_user}") (gists_url . "https://api.github.com/users/andreihalici/gists{/gist_id}") (starred_url . "https://api.github.com/users/andreihalici/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/andreihalici/subscriptions") (organizations_url . "https://api.github.com/users/andreihalici/orgs") (repos_url . "https://api.github.com/users/andreihalici/repos") (events_url . "https://api.github.com/users/andreihalici/events{/privacy}") (received_events_url . "https://api.github.com/users/andreihalici/received_events") (type . "User") (site_admin)))))) ((login . "andreihalici") (id . 1394474) (avatar_url . "https://avatars2.githubusercontent.com/u/1394474?v=4") (gravatar_id . "") (url . "https://api.github.com/users/andreihalici") (html_url . "https://github.com/andreihalici") (followers_url . "https://api.github.com/users/andreihalici/followers") (following_url . "https://api.github.com/users/andreihalici/following{/other_user}") (gists_url . "https://api.github.com/users/andreihalici/gists{/gist_id}") (starred_url . "https://api.github.com/users/andreihalici/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/andreihalici/subscriptions") (organizations_url . "https://api.github.com/users/andreihalici/orgs") (repos_url . "https://api.github.com/users/andreihalici/repos") (events_url . "https://api.github.com/users/andreihalici/events{/privacy}") (received_events_url . "https://api.github.com/users/andreihalici/received_events") (type . "User") (site_admin) (name . "Andrei Halici") (company) (blog . "") (location . "Canada") (email . "andrei.halici@bindingpixels.com") (hireable) (bio) (public_repos . 3) (public_gists . 2) (followers . 3) (following . 4) (created_at . "2012-01-31T12:55:14Z") (updated_at . "2017-12-29T05:23:28Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kkktan") (id . 10984992) (avatar_url . "https://avatars0.githubusercontent.com/u/10984992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkktan") (html_url . "https://github.com/kkktan") (followers_url . "https://api.github.com/users/kkktan/followers") (following_url . "https://api.github.com/users/kkktan/following{/other_user}") (gists_url . "https://api.github.com/users/kkktan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkktan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkktan/subscriptions") (organizations_url . "https://api.github.com/users/kkktan/orgs") (repos_url . "https://api.github.com/users/kkktan/repos") (events_url . "https://api.github.com/users/kkktan/events{/privacy}") (received_events_url . "https://api.github.com/users/kkktan/received_events") (type . "User") (site_admin)))))) ((login . "kkktan") (id . 10984992) (avatar_url . "https://avatars0.githubusercontent.com/u/10984992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kkktan") (html_url . "https://github.com/kkktan") (followers_url . "https://api.github.com/users/kkktan/followers") (following_url . "https://api.github.com/users/kkktan/following{/other_user}") (gists_url . "https://api.github.com/users/kkktan/gists{/gist_id}") (starred_url . "https://api.github.com/users/kkktan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kkktan/subscriptions") (organizations_url . "https://api.github.com/users/kkktan/orgs") (repos_url . "https://api.github.com/users/kkktan/repos") (events_url . "https://api.github.com/users/kkktan/events{/privacy}") (received_events_url . "https://api.github.com/users/kkktan/received_events") (type . "User") (site_admin) (name . "Kevin Tan") (company) (blog . "") (location) (email . "kevtan@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-02-12T23:56:46Z") (updated_at . "2017-02-24T03:59:01Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin)))))) ((login . "rbagai") (id . 4637698) (avatar_url . "https://avatars1.githubusercontent.com/u/4637698?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbagai") (html_url . "https://github.com/rbagai") (followers_url . "https://api.github.com/users/rbagai/followers") (following_url . "https://api.github.com/users/rbagai/following{/other_user}") (gists_url . "https://api.github.com/users/rbagai/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbagai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbagai/subscriptions") (organizations_url . "https://api.github.com/users/rbagai/orgs") (repos_url . "https://api.github.com/users/rbagai/repos") (events_url . "https://api.github.com/users/rbagai/events{/privacy}") (received_events_url . "https://api.github.com/users/rbagai/received_events") (type . "User") (site_admin) (name . "Rahul Bagai") (company . "Expedia") (blog . "") (location) (email) (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-06-07T06:54:50Z") (updated_at . "2017-11-28T19:47:30Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kumarakom") (id . 5487807) (avatar_url . "https://avatars1.githubusercontent.com/u/5487807?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarakom") (html_url . "https://github.com/kumarakom") (followers_url . "https://api.github.com/users/kumarakom/followers") (following_url . "https://api.github.com/users/kumarakom/following{/other_user}") (gists_url . "https://api.github.com/users/kumarakom/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarakom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarakom/subscriptions") (organizations_url . "https://api.github.com/users/kumarakom/orgs") (repos_url . "https://api.github.com/users/kumarakom/repos") (events_url . "https://api.github.com/users/kumarakom/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarakom/received_events") (type . "User") (site_admin)))))) ((login . "kumarakom") (id . 5487807) (avatar_url . "https://avatars1.githubusercontent.com/u/5487807?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarakom") (html_url . "https://github.com/kumarakom") (followers_url . "https://api.github.com/users/kumarakom/followers") (following_url . "https://api.github.com/users/kumarakom/following{/other_user}") (gists_url . "https://api.github.com/users/kumarakom/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarakom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarakom/subscriptions") (organizations_url . "https://api.github.com/users/kumarakom/orgs") (repos_url . "https://api.github.com/users/kumarakom/repos") (events_url . "https://api.github.com/users/kumarakom/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarakom/received_events") (type . "User") (site_admin) (name . "Suraj Abraham") (company) (blog . "") (location) (email . "sabraham@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-09-18T15:40:38Z") (updated_at . "2018-01-08T19:45:25Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "abhayjit") (id . 5379853) (avatar_url . "https://avatars0.githubusercontent.com/u/5379853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abhayjit") (html_url . "https://github.com/abhayjit") (followers_url . "https://api.github.com/users/abhayjit/followers") (following_url . "https://api.github.com/users/abhayjit/following{/other_user}") (gists_url . "https://api.github.com/users/abhayjit/gists{/gist_id}") (starred_url . "https://api.github.com/users/abhayjit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abhayjit/subscriptions") (organizations_url . "https://api.github.com/users/abhayjit/orgs") (repos_url . "https://api.github.com/users/abhayjit/repos") (events_url . "https://api.github.com/users/abhayjit/events{/privacy}") (received_events_url . "https://api.github.com/users/abhayjit/received_events") (type . "User") (site_admin)))))) ((login . "abhayjit") (id . 5379853) (avatar_url . "https://avatars0.githubusercontent.com/u/5379853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abhayjit") (html_url . "https://github.com/abhayjit") (followers_url . "https://api.github.com/users/abhayjit/followers") (following_url . "https://api.github.com/users/abhayjit/following{/other_user}") (gists_url . "https://api.github.com/users/abhayjit/gists{/gist_id}") (starred_url . "https://api.github.com/users/abhayjit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abhayjit/subscriptions") (organizations_url . "https://api.github.com/users/abhayjit/orgs") (repos_url . "https://api.github.com/users/abhayjit/repos") (events_url . "https://api.github.com/users/abhayjit/events{/privacy}") (received_events_url . "https://api.github.com/users/abhayjit/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-09-04T07:27:49Z") (updated_at . "2018-01-17T14:58:50Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "DmitriExpedia") (id . 7164276) (avatar_url . "https://avatars3.githubusercontent.com/u/7164276?v=4") (gravatar_id . "") (url . "https://api.github.com/users/DmitriExpedia") (html_url . "https://github.com/DmitriExpedia") (followers_url . "https://api.github.com/users/DmitriExpedia/followers") (following_url . "https://api.github.com/users/DmitriExpedia/following{/other_user}") (gists_url . "https://api.github.com/users/DmitriExpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/DmitriExpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/DmitriExpedia/subscriptions") (organizations_url . "https://api.github.com/users/DmitriExpedia/orgs") (repos_url . "https://api.github.com/users/DmitriExpedia/repos") (events_url . "https://api.github.com/users/DmitriExpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/DmitriExpedia/received_events") (type . "User") (site_admin)))))) ((login . "DmitriExpedia") (id . 7164276) (avatar_url . "https://avatars3.githubusercontent.com/u/7164276?v=4") (gravatar_id . "") (url . "https://api.github.com/users/DmitriExpedia") (html_url . "https://github.com/DmitriExpedia") (followers_url . "https://api.github.com/users/DmitriExpedia/followers") (following_url . "https://api.github.com/users/DmitriExpedia/following{/other_user}") (gists_url . "https://api.github.com/users/DmitriExpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/DmitriExpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/DmitriExpedia/subscriptions") (organizations_url . "https://api.github.com/users/DmitriExpedia/orgs") (repos_url . "https://api.github.com/users/DmitriExpedia/repos") (events_url . "https://api.github.com/users/DmitriExpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/DmitriExpedia/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-dmelnikov@expedia.com") (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-04T11:27:13Z") (updated_at . "2018-01-16T17:58:14Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEjrajasekaran") (id . 17599263) (avatar_url . "https://avatars0.githubusercontent.com/u/17599263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEjrajasekaran") (html_url . "https://github.com/EXPEjrajasekaran") (followers_url . "https://api.github.com/users/EXPEjrajasekaran/followers") (following_url . "https://api.github.com/users/EXPEjrajasekaran/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEjrajasekaran/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEjrajasekaran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEjrajasekaran/subscriptions") (organizations_url . "https://api.github.com/users/EXPEjrajasekaran/orgs") (repos_url . "https://api.github.com/users/EXPEjrajasekaran/repos") (events_url . "https://api.github.com/users/EXPEjrajasekaran/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEjrajasekaran/received_events") (type . "User") (site_admin)))))) ((login . "EXPEjrajasekaran") (id . 17599263) (avatar_url . "https://avatars0.githubusercontent.com/u/17599263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEjrajasekaran") (html_url . "https://github.com/EXPEjrajasekaran") (followers_url . "https://api.github.com/users/EXPEjrajasekaran/followers") (following_url . "https://api.github.com/users/EXPEjrajasekaran/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEjrajasekaran/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEjrajasekaran/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEjrajasekaran/subscriptions") (organizations_url . "https://api.github.com/users/EXPEjrajasekaran/orgs") (repos_url . "https://api.github.com/users/EXPEjrajasekaran/repos") (events_url . "https://api.github.com/users/EXPEjrajasekaran/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEjrajasekaran/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "jrajasekaran@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-03-02T17:44:54Z") (updated_at . "2017-11-21T22:34:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "bbhuvanadasan") (id . 25220617) (avatar_url . "https://avatars1.githubusercontent.com/u/25220617?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bbhuvanadasan") (html_url . "https://github.com/bbhuvanadasan") (followers_url . "https://api.github.com/users/bbhuvanadasan/followers") (following_url . "https://api.github.com/users/bbhuvanadasan/following{/other_user}") (gists_url . "https://api.github.com/users/bbhuvanadasan/gists{/gist_id}") (starred_url . "https://api.github.com/users/bbhuvanadasan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bbhuvanadasan/subscriptions") (organizations_url . "https://api.github.com/users/bbhuvanadasan/orgs") (repos_url . "https://api.github.com/users/bbhuvanadasan/repos") (events_url . "https://api.github.com/users/bbhuvanadasan/events{/privacy}") (received_events_url . "https://api.github.com/users/bbhuvanadasan/received_events") (type . "User") (site_admin)))))) ((login . "bbhuvanadasan") (id . 25220617) (avatar_url . "https://avatars1.githubusercontent.com/u/25220617?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bbhuvanadasan") (html_url . "https://github.com/bbhuvanadasan") (followers_url . "https://api.github.com/users/bbhuvanadasan/followers") (following_url . "https://api.github.com/users/bbhuvanadasan/following{/other_user}") (gists_url . "https://api.github.com/users/bbhuvanadasan/gists{/gist_id}") (starred_url . "https://api.github.com/users/bbhuvanadasan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bbhuvanadasan/subscriptions") (organizations_url . "https://api.github.com/users/bbhuvanadasan/orgs") (repos_url . "https://api.github.com/users/bbhuvanadasan/repos") (events_url . "https://api.github.com/users/bbhuvanadasan/events{/privacy}") (received_events_url . "https://api.github.com/users/bbhuvanadasan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-bbhuvanadasan@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-01-19T09:13:19Z") (updated_at . "2018-01-15T13:22:54Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "htchepannou") (id . 3145222) (avatar_url . "https://avatars2.githubusercontent.com/u/3145222?v=4") (gravatar_id . "") (url . "https://api.github.com/users/htchepannou") (html_url . "https://github.com/htchepannou") (followers_url . "https://api.github.com/users/htchepannou/followers") (following_url . "https://api.github.com/users/htchepannou/following{/other_user}") (gists_url . "https://api.github.com/users/htchepannou/gists{/gist_id}") (starred_url . "https://api.github.com/users/htchepannou/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/htchepannou/subscriptions") (organizations_url . "https://api.github.com/users/htchepannou/orgs") (repos_url . "https://api.github.com/users/htchepannou/repos") (events_url . "https://api.github.com/users/htchepannou/events{/privacy}") (received_events_url . "https://api.github.com/users/htchepannou/received_events") (type . "User") (site_admin)))))) ((login . "htchepannou") (id . 3145222) (avatar_url . "https://avatars2.githubusercontent.com/u/3145222?v=4") (gravatar_id . "") (url . "https://api.github.com/users/htchepannou") (html_url . "https://github.com/htchepannou") (followers_url . "https://api.github.com/users/htchepannou/followers") (following_url . "https://api.github.com/users/htchepannou/following{/other_user}") (gists_url . "https://api.github.com/users/htchepannou/gists{/gist_id}") (starred_url . "https://api.github.com/users/htchepannou/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/htchepannou/subscriptions") (organizations_url . "https://api.github.com/users/htchepannou/orgs") (repos_url . "https://api.github.com/users/htchepannou/repos") (events_url . "https://api.github.com/users/htchepannou/events{/privacy}") (received_events_url . "https://api.github.com/users/htchepannou/received_events") (type . "User") (site_admin) (name . "Herve Tchepannou") (company) (blog . "") (location) (email . "herve.tchepannou@gmail.com") (hireable) (bio) (public_repos . 72) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2012-12-29T00:17:43Z") (updated_at . "2018-01-02T15:43:50Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sghosh007") (id . 23222244) (avatar_url . "https://avatars3.githubusercontent.com/u/23222244?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sghosh007") (html_url . "https://github.com/sghosh007") (followers_url . "https://api.github.com/users/sghosh007/followers") (following_url . "https://api.github.com/users/sghosh007/following{/other_user}") (gists_url . "https://api.github.com/users/sghosh007/gists{/gist_id}") (starred_url . "https://api.github.com/users/sghosh007/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sghosh007/subscriptions") (organizations_url . "https://api.github.com/users/sghosh007/orgs") (repos_url . "https://api.github.com/users/sghosh007/repos") (events_url . "https://api.github.com/users/sghosh007/events{/privacy}") (received_events_url . "https://api.github.com/users/sghosh007/received_events") (type . "User") (site_admin)))))) ((login . "sghosh007") (id . 23222244) (avatar_url . "https://avatars3.githubusercontent.com/u/23222244?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sghosh007") (html_url . "https://github.com/sghosh007") (followers_url . "https://api.github.com/users/sghosh007/followers") (following_url . "https://api.github.com/users/sghosh007/following{/other_user}") (gists_url . "https://api.github.com/users/sghosh007/gists{/gist_id}") (starred_url . "https://api.github.com/users/sghosh007/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sghosh007/subscriptions") (organizations_url . "https://api.github.com/users/sghosh007/orgs") (repos_url . "https://api.github.com/users/sghosh007/repos") (events_url . "https://api.github.com/users/sghosh007/events{/privacy}") (received_events_url . "https://api.github.com/users/sghosh007/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "sughosh@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-11-02T19:53:47Z") (updated_at . "2017-12-13T23:44:24Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEpaher") (id . 12398894) (avatar_url . "https://avatars0.githubusercontent.com/u/12398894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpaher") (html_url . "https://github.com/EXPEpaher") (followers_url . "https://api.github.com/users/EXPEpaher/followers") (following_url . "https://api.github.com/users/EXPEpaher/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpaher/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpaher/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpaher/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpaher/orgs") (repos_url . "https://api.github.com/users/EXPEpaher/repos") (events_url . "https://api.github.com/users/EXPEpaher/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpaher/received_events") (type . "User") (site_admin)))))) ((login . "EXPEpaher") (id . 12398894) (avatar_url . "https://avatars0.githubusercontent.com/u/12398894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEpaher") (html_url . "https://github.com/EXPEpaher") (followers_url . "https://api.github.com/users/EXPEpaher/followers") (following_url . "https://api.github.com/users/EXPEpaher/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEpaher/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEpaher/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEpaher/subscriptions") (organizations_url . "https://api.github.com/users/EXPEpaher/orgs") (repos_url . "https://api.github.com/users/EXPEpaher/repos") (events_url . "https://api.github.com/users/EXPEpaher/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEpaher/received_events") (type . "User") (site_admin) (name . "Priyanka Aher") (company . "Expedia Inc.") (blog . "") (location . "San Francisco") (email . "paher@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-05-11T17:43:35Z") (updated_at . "2017-08-24T22:03:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dvelozramirez") (id . 19294800) (avatar_url . "https://avatars1.githubusercontent.com/u/19294800?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dvelozramirez") (html_url . "https://github.com/dvelozramirez") (followers_url . "https://api.github.com/users/dvelozramirez/followers") (following_url . "https://api.github.com/users/dvelozramirez/following{/other_user}") (gists_url . "https://api.github.com/users/dvelozramirez/gists{/gist_id}") (starred_url . "https://api.github.com/users/dvelozramirez/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dvelozramirez/subscriptions") (organizations_url . "https://api.github.com/users/dvelozramirez/orgs") (repos_url . "https://api.github.com/users/dvelozramirez/repos") (events_url . "https://api.github.com/users/dvelozramirez/events{/privacy}") (received_events_url . "https://api.github.com/users/dvelozramirez/received_events") (type . "User") (site_admin)))))) ((login . "dvelozramirez") (id . 19294800) (avatar_url . "https://avatars1.githubusercontent.com/u/19294800?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dvelozramirez") (html_url . "https://github.com/dvelozramirez") (followers_url . "https://api.github.com/users/dvelozramirez/followers") (following_url . "https://api.github.com/users/dvelozramirez/following{/other_user}") (gists_url . "https://api.github.com/users/dvelozramirez/gists{/gist_id}") (starred_url . "https://api.github.com/users/dvelozramirez/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dvelozramirez/subscriptions") (organizations_url . "https://api.github.com/users/dvelozramirez/orgs") (repos_url . "https://api.github.com/users/dvelozramirez/repos") (events_url . "https://api.github.com/users/dvelozramirez/events{/privacy}") (received_events_url . "https://api.github.com/users/dvelozramirez/received_events") (type . "User") (site_admin) (name . "Daniela Veloz") (company) (blog . "") (location) (email . "dvelozramirez@wotifgroup.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-05-10T21:53:41Z") (updated_at . "2017-11-08T18:48:02Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ankushjain15") (id . 6978038) (avatar_url . "https://avatars1.githubusercontent.com/u/6978038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankushjain15") (html_url . "https://github.com/ankushjain15") (followers_url . "https://api.github.com/users/ankushjain15/followers") (following_url . "https://api.github.com/users/ankushjain15/following{/other_user}") (gists_url . "https://api.github.com/users/ankushjain15/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankushjain15/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankushjain15/subscriptions") (organizations_url . "https://api.github.com/users/ankushjain15/orgs") (repos_url . "https://api.github.com/users/ankushjain15/repos") (events_url . "https://api.github.com/users/ankushjain15/events{/privacy}") (received_events_url . "https://api.github.com/users/ankushjain15/received_events") (type . "User") (site_admin)))))) ((login . "ankushjain15") (id . 6978038) (avatar_url . "https://avatars1.githubusercontent.com/u/6978038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankushjain15") (html_url . "https://github.com/ankushjain15") (followers_url . "https://api.github.com/users/ankushjain15/followers") (following_url . "https://api.github.com/users/ankushjain15/following{/other_user}") (gists_url . "https://api.github.com/users/ankushjain15/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankushjain15/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankushjain15/subscriptions") (organizations_url . "https://api.github.com/users/ankushjain15/orgs") (repos_url . "https://api.github.com/users/ankushjain15/repos") (events_url . "https://api.github.com/users/ankushjain15/events{/privacy}") (received_events_url . "https://api.github.com/users/ankushjain15/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "ankujain@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 6) (created_at . "2014-03-17T17:30:05Z") (updated_at . "2018-01-17T12:54:58Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin)))))) ((login . "shivsharma83") (id . 5832061) (avatar_url . "https://avatars0.githubusercontent.com/u/5832061?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shivsharma83") (html_url . "https://github.com/shivsharma83") (followers_url . "https://api.github.com/users/shivsharma83/followers") (following_url . "https://api.github.com/users/shivsharma83/following{/other_user}") (gists_url . "https://api.github.com/users/shivsharma83/gists{/gist_id}") (starred_url . "https://api.github.com/users/shivsharma83/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shivsharma83/subscriptions") (organizations_url . "https://api.github.com/users/shivsharma83/orgs") (repos_url . "https://api.github.com/users/shivsharma83/repos") (events_url . "https://api.github.com/users/shivsharma83/events{/privacy}") (received_events_url . "https://api.github.com/users/shivsharma83/received_events") (type . "User") (site_admin) (name . "Shiv Sharma") (company . "Expedia Inc") (blog . "") (location . "London") (email) (hireable) (bio) (public_repos . 14) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2013-11-01T15:09:45Z") (updated_at . "2018-01-17T01:51:46Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kamranalinitb") (id . 8807997) (avatar_url . "https://avatars0.githubusercontent.com/u/8807997?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kamranalinitb") (html_url . "https://github.com/kamranalinitb") (followers_url . "https://api.github.com/users/kamranalinitb/followers") (following_url . "https://api.github.com/users/kamranalinitb/following{/other_user}") (gists_url . "https://api.github.com/users/kamranalinitb/gists{/gist_id}") (starred_url . "https://api.github.com/users/kamranalinitb/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kamranalinitb/subscriptions") (organizations_url . "https://api.github.com/users/kamranalinitb/orgs") (repos_url . "https://api.github.com/users/kamranalinitb/repos") (events_url . "https://api.github.com/users/kamranalinitb/events{/privacy}") (received_events_url . "https://api.github.com/users/kamranalinitb/received_events") (type . "User") (site_admin)))))) ((login . "kamranalinitb") (id . 8807997) (avatar_url . "https://avatars0.githubusercontent.com/u/8807997?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kamranalinitb") (html_url . "https://github.com/kamranalinitb") (followers_url . "https://api.github.com/users/kamranalinitb/followers") (following_url . "https://api.github.com/users/kamranalinitb/following{/other_user}") (gists_url . "https://api.github.com/users/kamranalinitb/gists{/gist_id}") (starred_url . "https://api.github.com/users/kamranalinitb/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kamranalinitb/subscriptions") (organizations_url . "https://api.github.com/users/kamranalinitb/orgs") (repos_url . "https://api.github.com/users/kamranalinitb/repos") (events_url . "https://api.github.com/users/kamranalinitb/events{/privacy}") (received_events_url . "https://api.github.com/users/kamranalinitb/received_events") (type . "User") (site_admin) (name . "Kamran Ali") (company) (blog . "https://kamranali.in") (location . "https://goo.gl/maps/fgSp8CupPCT2") (email . "kamranalinitb@gmail.com") (hireable) (bio . "Involved in building Scalable, Low Latency Spring Boot Services based on Microservice Architecture.
Interested in AWS Technologies.") (public_repos . 22) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-09-17T14:16:08Z") (updated_at . "2018-01-22T15:19:05Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "igellai") (id . 19945789) (avatar_url . "https://avatars2.githubusercontent.com/u/19945789?v=4") (gravatar_id . "") (url . "https://api.github.com/users/igellai") (html_url . "https://github.com/igellai") (followers_url . "https://api.github.com/users/igellai/followers") (following_url . "https://api.github.com/users/igellai/following{/other_user}") (gists_url . "https://api.github.com/users/igellai/gists{/gist_id}") (starred_url . "https://api.github.com/users/igellai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/igellai/subscriptions") (organizations_url . "https://api.github.com/users/igellai/orgs") (repos_url . "https://api.github.com/users/igellai/repos") (events_url . "https://api.github.com/users/igellai/events{/privacy}") (received_events_url . "https://api.github.com/users/igellai/received_events") (type . "User") (site_admin)))))) ((login . "igellai") (id . 19945789) (avatar_url . "https://avatars2.githubusercontent.com/u/19945789?v=4") (gravatar_id . "") (url . "https://api.github.com/users/igellai") (html_url . "https://github.com/igellai") (followers_url . "https://api.github.com/users/igellai/followers") (following_url . "https://api.github.com/users/igellai/following{/other_user}") (gists_url . "https://api.github.com/users/igellai/gists{/gist_id}") (starred_url . "https://api.github.com/users/igellai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/igellai/subscriptions") (organizations_url . "https://api.github.com/users/igellai/orgs") (repos_url . "https://api.github.com/users/igellai/repos") (events_url . "https://api.github.com/users/igellai/events{/privacy}") (received_events_url . "https://api.github.com/users/igellai/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-igellai@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-06-15T06:53:00Z") (updated_at . "2017-12-11T09:12:48Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jaydee864") (id . 7988064) (avatar_url . "https://avatars2.githubusercontent.com/u/7988064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaydee864") (html_url . "https://github.com/jaydee864") (followers_url . "https://api.github.com/users/jaydee864/followers") (following_url . "https://api.github.com/users/jaydee864/following{/other_user}") (gists_url . "https://api.github.com/users/jaydee864/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaydee864/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaydee864/subscriptions") (organizations_url . "https://api.github.com/users/jaydee864/orgs") (repos_url . "https://api.github.com/users/jaydee864/repos") (events_url . "https://api.github.com/users/jaydee864/events{/privacy}") (received_events_url . "https://api.github.com/users/jaydee864/received_events") (type . "User") (site_admin)))))) ((login . "jaydee864") (id . 7988064) (avatar_url . "https://avatars2.githubusercontent.com/u/7988064?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaydee864") (html_url . "https://github.com/jaydee864") (followers_url . "https://api.github.com/users/jaydee864/followers") (following_url . "https://api.github.com/users/jaydee864/following{/other_user}") (gists_url . "https://api.github.com/users/jaydee864/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaydee864/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaydee864/subscriptions") (organizations_url . "https://api.github.com/users/jaydee864/orgs") (repos_url . "https://api.github.com/users/jaydee864/repos") (events_url . "https://api.github.com/users/jaydee864/events{/privacy}") (received_events_url . "https://api.github.com/users/jaydee864/received_events") (type . "User") (site_admin) (name . "Joe DeStefano") (company) (blog . "") (location) (email . "jdestefano@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-06-25T16:56:29Z") (updated_at . "2018-01-08T21:04:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "gmunisifreddy") (id . 5504246) (avatar_url . "https://avatars0.githubusercontent.com/u/5504246?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gmunisifreddy") (html_url . "https://github.com/gmunisifreddy") (followers_url . "https://api.github.com/users/gmunisifreddy/followers") (following_url . "https://api.github.com/users/gmunisifreddy/following{/other_user}") (gists_url . "https://api.github.com/users/gmunisifreddy/gists{/gist_id}") (starred_url . "https://api.github.com/users/gmunisifreddy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gmunisifreddy/subscriptions") (organizations_url . "https://api.github.com/users/gmunisifreddy/orgs") (repos_url . "https://api.github.com/users/gmunisifreddy/repos") (events_url . "https://api.github.com/users/gmunisifreddy/events{/privacy}") (received_events_url . "https://api.github.com/users/gmunisifreddy/received_events") (type . "User") (site_admin)))))) ((login . "gmunisifreddy") (id . 5504246) (avatar_url . "https://avatars0.githubusercontent.com/u/5504246?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gmunisifreddy") (html_url . "https://github.com/gmunisifreddy") (followers_url . "https://api.github.com/users/gmunisifreddy/followers") (following_url . "https://api.github.com/users/gmunisifreddy/following{/other_user}") (gists_url . "https://api.github.com/users/gmunisifreddy/gists{/gist_id}") (starred_url . "https://api.github.com/users/gmunisifreddy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gmunisifreddy/subscriptions") (organizations_url . "https://api.github.com/users/gmunisifreddy/orgs") (repos_url . "https://api.github.com/users/gmunisifreddy/repos") (events_url . "https://api.github.com/users/gmunisifreddy/events{/privacy}") (received_events_url . "https://api.github.com/users/gmunisifreddy/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 1) (following . 1) (created_at . "2013-09-20T19:53:46Z") (updated_at . "2017-12-18T22:43:00Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ragakhar") (id . 12843503) (avatar_url . "https://avatars2.githubusercontent.com/u/12843503?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ragakhar") (html_url . "https://github.com/ragakhar") (followers_url . "https://api.github.com/users/ragakhar/followers") (following_url . "https://api.github.com/users/ragakhar/following{/other_user}") (gists_url . "https://api.github.com/users/ragakhar/gists{/gist_id}") (starred_url . "https://api.github.com/users/ragakhar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ragakhar/subscriptions") (organizations_url . "https://api.github.com/users/ragakhar/orgs") (repos_url . "https://api.github.com/users/ragakhar/repos") (events_url . "https://api.github.com/users/ragakhar/events{/privacy}") (received_events_url . "https://api.github.com/users/ragakhar/received_events") (type . "User") (site_admin)))))) ((login . "ragakhar") (id . 12843503) (avatar_url . "https://avatars2.githubusercontent.com/u/12843503?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ragakhar") (html_url . "https://github.com/ragakhar") (followers_url . "https://api.github.com/users/ragakhar/followers") (following_url . "https://api.github.com/users/ragakhar/following{/other_user}") (gists_url . "https://api.github.com/users/ragakhar/gists{/gist_id}") (starred_url . "https://api.github.com/users/ragakhar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ragakhar/subscriptions") (organizations_url . "https://api.github.com/users/ragakhar/orgs") (repos_url . "https://api.github.com/users/ragakhar/repos") (events_url . "https://api.github.com/users/ragakhar/events{/privacy}") (received_events_url . "https://api.github.com/users/ragakhar/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-06-11T09:51:39Z") (updated_at . "2017-11-28T05:51:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "michaelpaquette") (id . 457296) (avatar_url . "https://avatars2.githubusercontent.com/u/457296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelpaquette") (html_url . "https://github.com/michaelpaquette") (followers_url . "https://api.github.com/users/michaelpaquette/followers") (following_url . "https://api.github.com/users/michaelpaquette/following{/other_user}") (gists_url . "https://api.github.com/users/michaelpaquette/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelpaquette/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelpaquette/subscriptions") (organizations_url . "https://api.github.com/users/michaelpaquette/orgs") (repos_url . "https://api.github.com/users/michaelpaquette/repos") (events_url . "https://api.github.com/users/michaelpaquette/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelpaquette/received_events") (type . "User") (site_admin)))))) ((login . "michaelpaquette") (id . 457296) (avatar_url . "https://avatars2.githubusercontent.com/u/457296?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelpaquette") (html_url . "https://github.com/michaelpaquette") (followers_url . "https://api.github.com/users/michaelpaquette/followers") (following_url . "https://api.github.com/users/michaelpaquette/following{/other_user}") (gists_url . "https://api.github.com/users/michaelpaquette/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelpaquette/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelpaquette/subscriptions") (organizations_url . "https://api.github.com/users/michaelpaquette/orgs") (repos_url . "https://api.github.com/users/michaelpaquette/repos") (events_url . "https://api.github.com/users/michaelpaquette/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelpaquette/received_events") (type . "User") (site_admin) (name . "Michael Paquette") (company . "Expedia") (blog . "") (location . "Montreal") (email . "mpaquette@expedia.com") (hireable) (bio) (public_repos . 12) (public_gists . 1) (followers . 1) (following . 0) (created_at . "2010-10-28T01:24:56Z") (updated_at . "2017-12-19T19:58:58Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pmanwatkar") (id . 5390225) (avatar_url . "https://avatars3.githubusercontent.com/u/5390225?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pmanwatkar") (html_url . "https://github.com/pmanwatkar") (followers_url . "https://api.github.com/users/pmanwatkar/followers") (following_url . "https://api.github.com/users/pmanwatkar/following{/other_user}") (gists_url . "https://api.github.com/users/pmanwatkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pmanwatkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pmanwatkar/subscriptions") (organizations_url . "https://api.github.com/users/pmanwatkar/orgs") (repos_url . "https://api.github.com/users/pmanwatkar/repos") (events_url . "https://api.github.com/users/pmanwatkar/events{/privacy}") (received_events_url . "https://api.github.com/users/pmanwatkar/received_events") (type . "User") (site_admin)))))) ((login . "pmanwatkar") (id . 5390225) (avatar_url . "https://avatars3.githubusercontent.com/u/5390225?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pmanwatkar") (html_url . "https://github.com/pmanwatkar") (followers_url . "https://api.github.com/users/pmanwatkar/followers") (following_url . "https://api.github.com/users/pmanwatkar/following{/other_user}") (gists_url . "https://api.github.com/users/pmanwatkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/pmanwatkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pmanwatkar/subscriptions") (organizations_url . "https://api.github.com/users/pmanwatkar/orgs") (repos_url . "https://api.github.com/users/pmanwatkar/repos") (events_url . "https://api.github.com/users/pmanwatkar/events{/privacy}") (received_events_url . "https://api.github.com/users/pmanwatkar/received_events") (type . "User") (site_admin) (name . "Pranay") (company) (blog . "") (location . "India") (email) (hireable) (bio . "`whoami`") (public_repos . 12) (public_gists . 1) (followers . 0) (following . 0) (created_at . "2013-09-05T10:06:59Z") (updated_at . "2018-01-16T03:25:45Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rbudhbhattiexpedia") (id . 8714681) (avatar_url . "https://avatars1.githubusercontent.com/u/8714681?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbudhbhattiexpedia") (html_url . "https://github.com/rbudhbhattiexpedia") (followers_url . "https://api.github.com/users/rbudhbhattiexpedia/followers") (following_url . "https://api.github.com/users/rbudhbhattiexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/rbudhbhattiexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbudhbhattiexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbudhbhattiexpedia/subscriptions") (organizations_url . "https://api.github.com/users/rbudhbhattiexpedia/orgs") (repos_url . "https://api.github.com/users/rbudhbhattiexpedia/repos") (events_url . "https://api.github.com/users/rbudhbhattiexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/rbudhbhattiexpedia/received_events") (type . "User") (site_admin)))))) ((login . "rbudhbhattiexpedia") (id . 8714681) (avatar_url . "https://avatars1.githubusercontent.com/u/8714681?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbudhbhattiexpedia") (html_url . "https://github.com/rbudhbhattiexpedia") (followers_url . "https://api.github.com/users/rbudhbhattiexpedia/followers") (following_url . "https://api.github.com/users/rbudhbhattiexpedia/following{/other_user}") (gists_url . "https://api.github.com/users/rbudhbhattiexpedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbudhbhattiexpedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbudhbhattiexpedia/subscriptions") (organizations_url . "https://api.github.com/users/rbudhbhattiexpedia/orgs") (repos_url . "https://api.github.com/users/rbudhbhattiexpedia/repos") (events_url . "https://api.github.com/users/rbudhbhattiexpedia/events{/privacy}") (received_events_url . "https://api.github.com/users/rbudhbhattiexpedia/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-09-09T20:44:43Z") (updated_at . "2017-10-03T22:17:55Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dkashettynagar") (id . 18708165) (avatar_url . "https://avatars3.githubusercontent.com/u/18708165?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dkashettynagar") (html_url . "https://github.com/dkashettynagar") (followers_url . "https://api.github.com/users/dkashettynagar/followers") (following_url . "https://api.github.com/users/dkashettynagar/following{/other_user}") (gists_url . "https://api.github.com/users/dkashettynagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/dkashettynagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dkashettynagar/subscriptions") (organizations_url . "https://api.github.com/users/dkashettynagar/orgs") (repos_url . "https://api.github.com/users/dkashettynagar/repos") (events_url . "https://api.github.com/users/dkashettynagar/events{/privacy}") (received_events_url . "https://api.github.com/users/dkashettynagar/received_events") (type . "User") (site_admin)))))) ((login . "dkashettynagar") (id . 18708165) (avatar_url . "https://avatars3.githubusercontent.com/u/18708165?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dkashettynagar") (html_url . "https://github.com/dkashettynagar") (followers_url . "https://api.github.com/users/dkashettynagar/followers") (following_url . "https://api.github.com/users/dkashettynagar/following{/other_user}") (gists_url . "https://api.github.com/users/dkashettynagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/dkashettynagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dkashettynagar/subscriptions") (organizations_url . "https://api.github.com/users/dkashettynagar/orgs") (repos_url . "https://api.github.com/users/dkashettynagar/repos") (events_url . "https://api.github.com/users/dkashettynagar/events{/privacy}") (received_events_url . "https://api.github.com/users/dkashettynagar/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "dkashettynagar@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-04-27T20:54:03Z") (updated_at . "2018-01-04T23:36:20Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rehevkor5") (id . 16899) (avatar_url . "https://avatars0.githubusercontent.com/u/16899?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rehevkor5") (html_url . "https://github.com/rehevkor5") (followers_url . "https://api.github.com/users/rehevkor5/followers") (following_url . "https://api.github.com/users/rehevkor5/following{/other_user}") (gists_url . "https://api.github.com/users/rehevkor5/gists{/gist_id}") (starred_url . "https://api.github.com/users/rehevkor5/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rehevkor5/subscriptions") (organizations_url . "https://api.github.com/users/rehevkor5/orgs") (repos_url . "https://api.github.com/users/rehevkor5/repos") (events_url . "https://api.github.com/users/rehevkor5/events{/privacy}") (received_events_url . "https://api.github.com/users/rehevkor5/received_events") (type . "User") (site_admin)))))) ((login . "rehevkor5") (id . 16899) (avatar_url . "https://avatars0.githubusercontent.com/u/16899?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rehevkor5") (html_url . "https://github.com/rehevkor5") (followers_url . "https://api.github.com/users/rehevkor5/followers") (following_url . "https://api.github.com/users/rehevkor5/following{/other_user}") (gists_url . "https://api.github.com/users/rehevkor5/gists{/gist_id}") (starred_url . "https://api.github.com/users/rehevkor5/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rehevkor5/subscriptions") (organizations_url . "https://api.github.com/users/rehevkor5/orgs") (repos_url . "https://api.github.com/users/rehevkor5/repos") (events_url . "https://api.github.com/users/rehevkor5/events{/privacy}") (received_events_url . "https://api.github.com/users/rehevkor5/received_events") (type . "User") (site_admin) (name . "Shannon Carey") (company . "@ExpediaInc ") (blog . "https://keybase.io/scarey") (location . "Chicago, IL") (email . "scarey@expedia.com") (hireable) (bio) (public_repos . 44) (public_gists . 3) (followers . 7) (following . 3) (created_at . "2008-07-12T23:47:47Z") (updated_at . "2017-10-29T18:45:44Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Ansujoys") (id . 20520241) (avatar_url . "https://avatars2.githubusercontent.com/u/20520241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Ansujoys") (html_url . "https://github.com/Ansujoys") (followers_url . "https://api.github.com/users/Ansujoys/followers") (following_url . "https://api.github.com/users/Ansujoys/following{/other_user}") (gists_url . "https://api.github.com/users/Ansujoys/gists{/gist_id}") (starred_url . "https://api.github.com/users/Ansujoys/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Ansujoys/subscriptions") (organizations_url . "https://api.github.com/users/Ansujoys/orgs") (repos_url . "https://api.github.com/users/Ansujoys/repos") (events_url . "https://api.github.com/users/Ansujoys/events{/privacy}") (received_events_url . "https://api.github.com/users/Ansujoys/received_events") (type . "User") (site_admin)))))) ((login . "Ansujoys") (id . 20520241) (avatar_url . "https://avatars2.githubusercontent.com/u/20520241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Ansujoys") (html_url . "https://github.com/Ansujoys") (followers_url . "https://api.github.com/users/Ansujoys/followers") (following_url . "https://api.github.com/users/Ansujoys/following{/other_user}") (gists_url . "https://api.github.com/users/Ansujoys/gists{/gist_id}") (starred_url . "https://api.github.com/users/Ansujoys/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Ansujoys/subscriptions") (organizations_url . "https://api.github.com/users/Ansujoys/orgs") (repos_url . "https://api.github.com/users/Ansujoys/repos") (events_url . "https://api.github.com/users/Ansujoys/events{/privacy}") (received_events_url . "https://api.github.com/users/Ansujoys/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "ajoys@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-07-18T15:31:15Z") (updated_at . "2017-08-17T15:17:13Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "joedj") (id . 250501) (avatar_url . "https://avatars2.githubusercontent.com/u/250501?v=4") (gravatar_id . "") (url . "https://api.github.com/users/joedj") (html_url . "https://github.com/joedj") (followers_url . "https://api.github.com/users/joedj/followers") (following_url . "https://api.github.com/users/joedj/following{/other_user}") (gists_url . "https://api.github.com/users/joedj/gists{/gist_id}") (starred_url . "https://api.github.com/users/joedj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/joedj/subscriptions") (organizations_url . "https://api.github.com/users/joedj/orgs") (repos_url . "https://api.github.com/users/joedj/repos") (events_url . "https://api.github.com/users/joedj/events{/privacy}") (received_events_url . "https://api.github.com/users/joedj/received_events") (type . "User") (site_admin)))))) ((login . "joedj") (id . 250501) (avatar_url . "https://avatars2.githubusercontent.com/u/250501?v=4") (gravatar_id . "") (url . "https://api.github.com/users/joedj") (html_url . "https://github.com/joedj") (followers_url . "https://api.github.com/users/joedj/followers") (following_url . "https://api.github.com/users/joedj/following{/other_user}") (gists_url . "https://api.github.com/users/joedj/gists{/gist_id}") (starred_url . "https://api.github.com/users/joedj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/joedj/subscriptions") (organizations_url . "https://api.github.com/users/joedj/orgs") (repos_url . "https://api.github.com/users/joedj/repos") (events_url . "https://api.github.com/users/joedj/events{/privacy}") (received_events_url . "https://api.github.com/users/joedj/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 14) (public_gists . 4) (followers . 16) (following . 0) (created_at . "2010-04-23T05:31:00Z") (updated_at . "2017-10-12T04:56:01Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin)))))) ((login . "expvictordamian") (id . 12911497) (avatar_url . "https://avatars2.githubusercontent.com/u/12911497?v=4") (gravatar_id . "") (url . "https://api.github.com/users/expvictordamian") (html_url . "https://github.com/expvictordamian") (followers_url . "https://api.github.com/users/expvictordamian/followers") (following_url . "https://api.github.com/users/expvictordamian/following{/other_user}") (gists_url . "https://api.github.com/users/expvictordamian/gists{/gist_id}") (starred_url . "https://api.github.com/users/expvictordamian/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/expvictordamian/subscriptions") (organizations_url . "https://api.github.com/users/expvictordamian/orgs") (repos_url . "https://api.github.com/users/expvictordamian/repos") (events_url . "https://api.github.com/users/expvictordamian/events{/privacy}") (received_events_url . "https://api.github.com/users/expvictordamian/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 18) (public_gists . 1) (followers . 2) (following . 2) (created_at . "2015-06-16T12:24:44Z") (updated_at . "2017-05-14T03:41:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "MaanuK") (id . 16563161) (avatar_url . "https://avatars0.githubusercontent.com/u/16563161?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MaanuK") (html_url . "https://github.com/MaanuK") (followers_url . "https://api.github.com/users/MaanuK/followers") (following_url . "https://api.github.com/users/MaanuK/following{/other_user}") (gists_url . "https://api.github.com/users/MaanuK/gists{/gist_id}") (starred_url . "https://api.github.com/users/MaanuK/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MaanuK/subscriptions") (organizations_url . "https://api.github.com/users/MaanuK/orgs") (repos_url . "https://api.github.com/users/MaanuK/repos") (events_url . "https://api.github.com/users/MaanuK/events{/privacy}") (received_events_url . "https://api.github.com/users/MaanuK/received_events") (type . "User") (site_admin)))))) ((login . "MaanuK") (id . 16563161) (avatar_url . "https://avatars0.githubusercontent.com/u/16563161?v=4") (gravatar_id . "") (url . "https://api.github.com/users/MaanuK") (html_url . "https://github.com/MaanuK") (followers_url . "https://api.github.com/users/MaanuK/followers") (following_url . "https://api.github.com/users/MaanuK/following{/other_user}") (gists_url . "https://api.github.com/users/MaanuK/gists{/gist_id}") (starred_url . "https://api.github.com/users/MaanuK/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/MaanuK/subscriptions") (organizations_url . "https://api.github.com/users/MaanuK/orgs") (repos_url . "https://api.github.com/users/MaanuK/repos") (events_url . "https://api.github.com/users/MaanuK/events{/privacy}") (received_events_url . "https://api.github.com/users/MaanuK/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "mmuthu@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-01-05T17:53:50Z") (updated_at . "2017-10-31T16:53:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "gearora") (id . 8953992) (avatar_url . "https://avatars3.githubusercontent.com/u/8953992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gearora") (html_url . "https://github.com/gearora") (followers_url . "https://api.github.com/users/gearora/followers") (following_url . "https://api.github.com/users/gearora/following{/other_user}") (gists_url . "https://api.github.com/users/gearora/gists{/gist_id}") (starred_url . "https://api.github.com/users/gearora/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gearora/subscriptions") (organizations_url . "https://api.github.com/users/gearora/orgs") (repos_url . "https://api.github.com/users/gearora/repos") (events_url . "https://api.github.com/users/gearora/events{/privacy}") (received_events_url . "https://api.github.com/users/gearora/received_events") (type . "User") (site_admin)))))) ((login . "gearora") (id . 8953992) (avatar_url . "https://avatars3.githubusercontent.com/u/8953992?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gearora") (html_url . "https://github.com/gearora") (followers_url . "https://api.github.com/users/gearora/followers") (following_url . "https://api.github.com/users/gearora/following{/other_user}") (gists_url . "https://api.github.com/users/gearora/gists{/gist_id}") (starred_url . "https://api.github.com/users/gearora/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gearora/subscriptions") (organizations_url . "https://api.github.com/users/gearora/orgs") (repos_url . "https://api.github.com/users/gearora/repos") (events_url . "https://api.github.com/users/gearora/events{/privacy}") (received_events_url . "https://api.github.com/users/gearora/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "gearora@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-09-29T05:41:58Z") (updated_at . "2017-10-24T05:34:00Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "v-akerek") (id . 6941834) (avatar_url . "https://avatars1.githubusercontent.com/u/6941834?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-akerek") (html_url . "https://github.com/v-akerek") (followers_url . "https://api.github.com/users/v-akerek/followers") (following_url . "https://api.github.com/users/v-akerek/following{/other_user}") (gists_url . "https://api.github.com/users/v-akerek/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-akerek/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-akerek/subscriptions") (organizations_url . "https://api.github.com/users/v-akerek/orgs") (repos_url . "https://api.github.com/users/v-akerek/repos") (events_url . "https://api.github.com/users/v-akerek/events{/privacy}") (received_events_url . "https://api.github.com/users/v-akerek/received_events") (type . "User") (site_admin)))))) ((login . "v-akerek") (id . 6941834) (avatar_url . "https://avatars1.githubusercontent.com/u/6941834?v=4") (gravatar_id . "") (url . "https://api.github.com/users/v-akerek") (html_url . "https://github.com/v-akerek") (followers_url . "https://api.github.com/users/v-akerek/followers") (following_url . "https://api.github.com/users/v-akerek/following{/other_user}") (gists_url . "https://api.github.com/users/v-akerek/gists{/gist_id}") (starred_url . "https://api.github.com/users/v-akerek/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/v-akerek/subscriptions") (organizations_url . "https://api.github.com/users/v-akerek/orgs") (repos_url . "https://api.github.com/users/v-akerek/repos") (events_url . "https://api.github.com/users/v-akerek/events{/privacy}") (received_events_url . "https://api.github.com/users/v-akerek/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-03-13T14:17:50Z") (updated_at . "2018-01-09T09:52:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin)))))) ((login . "kevin-staiger") (id . 8867243) (avatar_url . "https://avatars2.githubusercontent.com/u/8867243?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kevin-staiger") (html_url . "https://github.com/kevin-staiger") (followers_url . "https://api.github.com/users/kevin-staiger/followers") (following_url . "https://api.github.com/users/kevin-staiger/following{/other_user}") (gists_url . "https://api.github.com/users/kevin-staiger/gists{/gist_id}") (starred_url . "https://api.github.com/users/kevin-staiger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kevin-staiger/subscriptions") (organizations_url . "https://api.github.com/users/kevin-staiger/orgs") (repos_url . "https://api.github.com/users/kevin-staiger/repos") (events_url . "https://api.github.com/users/kevin-staiger/events{/privacy}") (received_events_url . "https://api.github.com/users/kevin-staiger/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-09-22T22:23:26Z") (updated_at . "2017-12-05T17:46:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEv-tzadori") (id . 14938414) (avatar_url . "https://avatars1.githubusercontent.com/u/14938414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEv-tzadori") (html_url . "https://github.com/EXPEv-tzadori") (followers_url . "https://api.github.com/users/EXPEv-tzadori/followers") (following_url . "https://api.github.com/users/EXPEv-tzadori/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEv-tzadori/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEv-tzadori/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEv-tzadori/subscriptions") (organizations_url . "https://api.github.com/users/EXPEv-tzadori/orgs") (repos_url . "https://api.github.com/users/EXPEv-tzadori/repos") (events_url . "https://api.github.com/users/EXPEv-tzadori/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEv-tzadori/received_events") (type . "User") (site_admin)))))) ((login . "EXPEv-tzadori") (id . 14938414) (avatar_url . "https://avatars1.githubusercontent.com/u/14938414?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEv-tzadori") (html_url . "https://github.com/EXPEv-tzadori") (followers_url . "https://api.github.com/users/EXPEv-tzadori/followers") (following_url . "https://api.github.com/users/EXPEv-tzadori/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEv-tzadori/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEv-tzadori/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEv-tzadori/subscriptions") (organizations_url . "https://api.github.com/users/EXPEv-tzadori/orgs") (repos_url . "https://api.github.com/users/EXPEv-tzadori/repos") (events_url . "https://api.github.com/users/EXPEv-tzadori/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEv-tzadori/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-tzadori@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-10-02T09:13:46Z") (updated_at . "2018-01-08T09:50:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ManishMaheshwari") (id . 1227565) (avatar_url . "https://avatars3.githubusercontent.com/u/1227565?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ManishMaheshwari") (html_url . "https://github.com/ManishMaheshwari") (followers_url . "https://api.github.com/users/ManishMaheshwari/followers") (following_url . "https://api.github.com/users/ManishMaheshwari/following{/other_user}") (gists_url . "https://api.github.com/users/ManishMaheshwari/gists{/gist_id}") (starred_url . "https://api.github.com/users/ManishMaheshwari/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ManishMaheshwari/subscriptions") (organizations_url . "https://api.github.com/users/ManishMaheshwari/orgs") (repos_url . "https://api.github.com/users/ManishMaheshwari/repos") (events_url . "https://api.github.com/users/ManishMaheshwari/events{/privacy}") (received_events_url . "https://api.github.com/users/ManishMaheshwari/received_events") (type . "User") (site_admin)))))) ((login . "ManishMaheshwari") (id . 1227565) (avatar_url . "https://avatars3.githubusercontent.com/u/1227565?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ManishMaheshwari") (html_url . "https://github.com/ManishMaheshwari") (followers_url . "https://api.github.com/users/ManishMaheshwari/followers") (following_url . "https://api.github.com/users/ManishMaheshwari/following{/other_user}") (gists_url . "https://api.github.com/users/ManishMaheshwari/gists{/gist_id}") (starred_url . "https://api.github.com/users/ManishMaheshwari/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ManishMaheshwari/subscriptions") (organizations_url . "https://api.github.com/users/ManishMaheshwari/orgs") (repos_url . "https://api.github.com/users/ManishMaheshwari/repos") (events_url . "https://api.github.com/users/ManishMaheshwari/events{/privacy}") (received_events_url . "https://api.github.com/users/ManishMaheshwari/received_events") (type . "User") (site_admin) (name . "Manish Maheshwari") (company . "Expedia") (blog . "") (location) (email . "mmaheshwari@expedia.com") (hireable) (bio) (public_repos . 15) (public_gists . 0) (followers . 2) (following . 1) (created_at . "2011-11-29T08:52:31Z") (updated_at . "2018-01-03T16:28:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ternst32") (id . 22227111) (avatar_url . "https://avatars1.githubusercontent.com/u/22227111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ternst32") (html_url . "https://github.com/ternst32") (followers_url . "https://api.github.com/users/ternst32/followers") (following_url . "https://api.github.com/users/ternst32/following{/other_user}") (gists_url . "https://api.github.com/users/ternst32/gists{/gist_id}") (starred_url . "https://api.github.com/users/ternst32/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ternst32/subscriptions") (organizations_url . "https://api.github.com/users/ternst32/orgs") (repos_url . "https://api.github.com/users/ternst32/repos") (events_url . "https://api.github.com/users/ternst32/events{/privacy}") (received_events_url . "https://api.github.com/users/ternst32/received_events") (type . "User") (site_admin)))))) ((login . "ternst32") (id . 22227111) (avatar_url . "https://avatars1.githubusercontent.com/u/22227111?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ternst32") (html_url . "https://github.com/ternst32") (followers_url . "https://api.github.com/users/ternst32/followers") (following_url . "https://api.github.com/users/ternst32/following{/other_user}") (gists_url . "https://api.github.com/users/ternst32/gists{/gist_id}") (starred_url . "https://api.github.com/users/ternst32/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ternst32/subscriptions") (organizations_url . "https://api.github.com/users/ternst32/orgs") (repos_url . "https://api.github.com/users/ternst32/repos") (events_url . "https://api.github.com/users/ternst32/events{/privacy}") (received_events_url . "https://api.github.com/users/ternst32/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "ternst@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-09-15T22:15:03Z") (updated_at . "2017-06-13T19:22:14Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pratikp09") (id . 22455143) (avatar_url . "https://avatars1.githubusercontent.com/u/22455143?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pratikp09") (html_url . "https://github.com/pratikp09") (followers_url . "https://api.github.com/users/pratikp09/followers") (following_url . "https://api.github.com/users/pratikp09/following{/other_user}") (gists_url . "https://api.github.com/users/pratikp09/gists{/gist_id}") (starred_url . "https://api.github.com/users/pratikp09/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pratikp09/subscriptions") (organizations_url . "https://api.github.com/users/pratikp09/orgs") (repos_url . "https://api.github.com/users/pratikp09/repos") (events_url . "https://api.github.com/users/pratikp09/events{/privacy}") (received_events_url . "https://api.github.com/users/pratikp09/received_events") (type . "User") (site_admin)))))) ((login . "pratikp09") (id . 22455143) (avatar_url . "https://avatars1.githubusercontent.com/u/22455143?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pratikp09") (html_url . "https://github.com/pratikp09") (followers_url . "https://api.github.com/users/pratikp09/followers") (following_url . "https://api.github.com/users/pratikp09/following{/other_user}") (gists_url . "https://api.github.com/users/pratikp09/gists{/gist_id}") (starred_url . "https://api.github.com/users/pratikp09/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pratikp09/subscriptions") (organizations_url . "https://api.github.com/users/pratikp09/orgs") (repos_url . "https://api.github.com/users/pratikp09/repos") (events_url . "https://api.github.com/users/pratikp09/events{/privacy}") (received_events_url . "https://api.github.com/users/pratikp09/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2016-09-26T17:47:33Z") (updated_at . "2017-11-28T15:58:10Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "brobertson19") (id . 20522035) (avatar_url . "https://avatars2.githubusercontent.com/u/20522035?v=4") (gravatar_id . "") (url . "https://api.github.com/users/brobertson19") (html_url . "https://github.com/brobertson19") (followers_url . "https://api.github.com/users/brobertson19/followers") (following_url . "https://api.github.com/users/brobertson19/following{/other_user}") (gists_url . "https://api.github.com/users/brobertson19/gists{/gist_id}") (starred_url . "https://api.github.com/users/brobertson19/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/brobertson19/subscriptions") (organizations_url . "https://api.github.com/users/brobertson19/orgs") (repos_url . "https://api.github.com/users/brobertson19/repos") (events_url . "https://api.github.com/users/brobertson19/events{/privacy}") (received_events_url . "https://api.github.com/users/brobertson19/received_events") (type . "User") (site_admin)))))) ((login . "brobertson19") (id . 20522035) (avatar_url . "https://avatars2.githubusercontent.com/u/20522035?v=4") (gravatar_id . "") (url . "https://api.github.com/users/brobertson19") (html_url . "https://github.com/brobertson19") (followers_url . "https://api.github.com/users/brobertson19/followers") (following_url . "https://api.github.com/users/brobertson19/following{/other_user}") (gists_url . "https://api.github.com/users/brobertson19/gists{/gist_id}") (starred_url . "https://api.github.com/users/brobertson19/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/brobertson19/subscriptions") (organizations_url . "https://api.github.com/users/brobertson19/orgs") (repos_url . "https://api.github.com/users/brobertson19/repos") (events_url . "https://api.github.com/users/brobertson19/events{/privacy}") (received_events_url . "https://api.github.com/users/brobertson19/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "brobertson@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-07-18T17:27:00Z") (updated_at . "2018-01-10T19:04:23Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "philipschwarz") (id . 116804) (avatar_url . "https://avatars2.githubusercontent.com/u/116804?v=4") (gravatar_id . "") (url . "https://api.github.com/users/philipschwarz") (html_url . "https://github.com/philipschwarz") (followers_url . "https://api.github.com/users/philipschwarz/followers") (following_url . "https://api.github.com/users/philipschwarz/following{/other_user}") (gists_url . "https://api.github.com/users/philipschwarz/gists{/gist_id}") (starred_url . "https://api.github.com/users/philipschwarz/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/philipschwarz/subscriptions") (organizations_url . "https://api.github.com/users/philipschwarz/orgs") (repos_url . "https://api.github.com/users/philipschwarz/repos") (events_url . "https://api.github.com/users/philipschwarz/events{/privacy}") (received_events_url . "https://api.github.com/users/philipschwarz/received_events") (type . "User") (site_admin)))))) ((login . "philipschwarz") (id . 116804) (avatar_url . "https://avatars2.githubusercontent.com/u/116804?v=4") (gravatar_id . "") (url . "https://api.github.com/users/philipschwarz") (html_url . "https://github.com/philipschwarz") (followers_url . "https://api.github.com/users/philipschwarz/followers") (following_url . "https://api.github.com/users/philipschwarz/following{/other_user}") (gists_url . "https://api.github.com/users/philipschwarz/gists{/gist_id}") (starred_url . "https://api.github.com/users/philipschwarz/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/philipschwarz/subscriptions") (organizations_url . "https://api.github.com/users/philipschwarz/orgs") (repos_url . "https://api.github.com/users/philipschwarz/repos") (events_url . "https://api.github.com/users/philipschwarz/events{/privacy}") (received_events_url . "https://api.github.com/users/philipschwarz/received_events") (type . "User") (site_admin) (name . "Philip") (company) (blog . "") (location) (email . "philip.johann.schwarz@gmail.com") (hireable) (bio) (public_repos . 40) (public_gists . 30) (followers . 14) (following . 19) (created_at . "2009-08-18T22:36:30Z") (updated_at . "2018-01-05T15:08:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ssimfukwe") (id . 8495216) (avatar_url . "https://avatars3.githubusercontent.com/u/8495216?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ssimfukwe") (html_url . "https://github.com/ssimfukwe") (followers_url . "https://api.github.com/users/ssimfukwe/followers") (following_url . "https://api.github.com/users/ssimfukwe/following{/other_user}") (gists_url . "https://api.github.com/users/ssimfukwe/gists{/gist_id}") (starred_url . "https://api.github.com/users/ssimfukwe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ssimfukwe/subscriptions") (organizations_url . "https://api.github.com/users/ssimfukwe/orgs") (repos_url . "https://api.github.com/users/ssimfukwe/repos") (events_url . "https://api.github.com/users/ssimfukwe/events{/privacy}") (received_events_url . "https://api.github.com/users/ssimfukwe/received_events") (type . "User") (site_admin)))))) ((login . "ssimfukwe") (id . 8495216) (avatar_url . "https://avatars3.githubusercontent.com/u/8495216?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ssimfukwe") (html_url . "https://github.com/ssimfukwe") (followers_url . "https://api.github.com/users/ssimfukwe/followers") (following_url . "https://api.github.com/users/ssimfukwe/following{/other_user}") (gists_url . "https://api.github.com/users/ssimfukwe/gists{/gist_id}") (starred_url . "https://api.github.com/users/ssimfukwe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ssimfukwe/subscriptions") (organizations_url . "https://api.github.com/users/ssimfukwe/orgs") (repos_url . "https://api.github.com/users/ssimfukwe/repos") (events_url . "https://api.github.com/users/ssimfukwe/events{/privacy}") (received_events_url . "https://api.github.com/users/ssimfukwe/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-08-19T18:56:08Z") (updated_at . "2017-12-01T22:26:11Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEyufguo") (id . 14915288) (avatar_url . "https://avatars1.githubusercontent.com/u/14915288?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEyufguo") (html_url . "https://github.com/EXPEyufguo") (followers_url . "https://api.github.com/users/EXPEyufguo/followers") (following_url . "https://api.github.com/users/EXPEyufguo/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEyufguo/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEyufguo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEyufguo/subscriptions") (organizations_url . "https://api.github.com/users/EXPEyufguo/orgs") (repos_url . "https://api.github.com/users/EXPEyufguo/repos") (events_url . "https://api.github.com/users/EXPEyufguo/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEyufguo/received_events") (type . "User") (site_admin)))))) ((login . "EXPEyufguo") (id . 14915288) (avatar_url . "https://avatars1.githubusercontent.com/u/14915288?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEyufguo") (html_url . "https://github.com/EXPEyufguo") (followers_url . "https://api.github.com/users/EXPEyufguo/followers") (following_url . "https://api.github.com/users/EXPEyufguo/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEyufguo/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEyufguo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEyufguo/subscriptions") (organizations_url . "https://api.github.com/users/EXPEyufguo/orgs") (repos_url . "https://api.github.com/users/EXPEyufguo/repos") (events_url . "https://api.github.com/users/EXPEyufguo/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEyufguo/received_events") (type . "User") (site_admin) (name . "yufguo") (company) (blog . "") (location) (email . "yufguo@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-09-30T21:42:36Z") (updated_at . "2017-10-16T22:03:38Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "skakodkar") (id . 19696649) (avatar_url . "https://avatars0.githubusercontent.com/u/19696649?v=4") (gravatar_id . "") (url . "https://api.github.com/users/skakodkar") (html_url . "https://github.com/skakodkar") (followers_url . "https://api.github.com/users/skakodkar/followers") (following_url . "https://api.github.com/users/skakodkar/following{/other_user}") (gists_url . "https://api.github.com/users/skakodkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/skakodkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/skakodkar/subscriptions") (organizations_url . "https://api.github.com/users/skakodkar/orgs") (repos_url . "https://api.github.com/users/skakodkar/repos") (events_url . "https://api.github.com/users/skakodkar/events{/privacy}") (received_events_url . "https://api.github.com/users/skakodkar/received_events") (type . "User") (site_admin)))))) ((login . "skakodkar") (id . 19696649) (avatar_url . "https://avatars0.githubusercontent.com/u/19696649?v=4") (gravatar_id . "") (url . "https://api.github.com/users/skakodkar") (html_url . "https://github.com/skakodkar") (followers_url . "https://api.github.com/users/skakodkar/followers") (following_url . "https://api.github.com/users/skakodkar/following{/other_user}") (gists_url . "https://api.github.com/users/skakodkar/gists{/gist_id}") (starred_url . "https://api.github.com/users/skakodkar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/skakodkar/subscriptions") (organizations_url . "https://api.github.com/users/skakodkar/orgs") (repos_url . "https://api.github.com/users/skakodkar/repos") (events_url . "https://api.github.com/users/skakodkar/events{/privacy}") (received_events_url . "https://api.github.com/users/skakodkar/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "skakodkar@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-06-01T20:33:43Z") (updated_at . "2017-12-20T00:09:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rickfast") (id . 295068) (avatar_url . "https://avatars1.githubusercontent.com/u/295068?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rickfast") (html_url . "https://github.com/rickfast") (followers_url . "https://api.github.com/users/rickfast/followers") (following_url . "https://api.github.com/users/rickfast/following{/other_user}") (gists_url . "https://api.github.com/users/rickfast/gists{/gist_id}") (starred_url . "https://api.github.com/users/rickfast/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rickfast/subscriptions") (organizations_url . "https://api.github.com/users/rickfast/orgs") (repos_url . "https://api.github.com/users/rickfast/repos") (events_url . "https://api.github.com/users/rickfast/events{/privacy}") (received_events_url . "https://api.github.com/users/rickfast/received_events") (type . "User") (site_admin)))))) ((login . "rickfast") (id . 295068) (avatar_url . "https://avatars1.githubusercontent.com/u/295068?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rickfast") (html_url . "https://github.com/rickfast") (followers_url . "https://api.github.com/users/rickfast/followers") (following_url . "https://api.github.com/users/rickfast/following{/other_user}") (gists_url . "https://api.github.com/users/rickfast/gists{/gist_id}") (starred_url . "https://api.github.com/users/rickfast/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rickfast/subscriptions") (organizations_url . "https://api.github.com/users/rickfast/orgs") (repos_url . "https://api.github.com/users/rickfast/repos") (events_url . "https://api.github.com/users/rickfast/events{/privacy}") (received_events_url . "https://api.github.com/users/rickfast/received_events") (type . "User") (site_admin) (name . "Rick Fast") (company . "Orbitz Worldwide") (blog . "") (location . "Chicago, IL") (email) (hireable) (bio) (public_repos . 23) (public_gists . 1) (followers . 30) (following . 7) (created_at . "2010-06-03T02:50:54Z") (updated_at . "2018-01-17T23:14:21Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEgzarazaga") (id . 17164722) (avatar_url . "https://avatars3.githubusercontent.com/u/17164722?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgzarazaga") (html_url . "https://github.com/EXPEgzarazaga") (followers_url . "https://api.github.com/users/EXPEgzarazaga/followers") (following_url . "https://api.github.com/users/EXPEgzarazaga/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgzarazaga/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgzarazaga/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgzarazaga/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgzarazaga/orgs") (repos_url . "https://api.github.com/users/EXPEgzarazaga/repos") (events_url . "https://api.github.com/users/EXPEgzarazaga/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgzarazaga/received_events") (type . "User") (site_admin)))))) ((login . "EXPEgzarazaga") (id . 17164722) (avatar_url . "https://avatars3.githubusercontent.com/u/17164722?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEgzarazaga") (html_url . "https://github.com/EXPEgzarazaga") (followers_url . "https://api.github.com/users/EXPEgzarazaga/followers") (following_url . "https://api.github.com/users/EXPEgzarazaga/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEgzarazaga/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEgzarazaga/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEgzarazaga/subscriptions") (organizations_url . "https://api.github.com/users/EXPEgzarazaga/orgs") (repos_url . "https://api.github.com/users/EXPEgzarazaga/repos") (events_url . "https://api.github.com/users/EXPEgzarazaga/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEgzarazaga/received_events") (type . "User") (site_admin) (name) (company . "ExpediaInc") (blog . "") (location) (email . "v-gzarazaga@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-02-10T17:31:38Z") (updated_at . "2016-11-09T20:40:00Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dube25") (id . 7274504) (avatar_url . "https://avatars1.githubusercontent.com/u/7274504?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dube25") (html_url . "https://github.com/dube25") (followers_url . "https://api.github.com/users/dube25/followers") (following_url . "https://api.github.com/users/dube25/following{/other_user}") (gists_url . "https://api.github.com/users/dube25/gists{/gist_id}") (starred_url . "https://api.github.com/users/dube25/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dube25/subscriptions") (organizations_url . "https://api.github.com/users/dube25/orgs") (repos_url . "https://api.github.com/users/dube25/repos") (events_url . "https://api.github.com/users/dube25/events{/privacy}") (received_events_url . "https://api.github.com/users/dube25/received_events") (type . "User") (site_admin)))))) ((login . "dube25") (id . 7274504) (avatar_url . "https://avatars1.githubusercontent.com/u/7274504?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dube25") (html_url . "https://github.com/dube25") (followers_url . "https://api.github.com/users/dube25/followers") (following_url . "https://api.github.com/users/dube25/following{/other_user}") (gists_url . "https://api.github.com/users/dube25/gists{/gist_id}") (starred_url . "https://api.github.com/users/dube25/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dube25/subscriptions") (organizations_url . "https://api.github.com/users/dube25/orgs") (repos_url . "https://api.github.com/users/dube25/repos") (events_url . "https://api.github.com/users/dube25/events{/privacy}") (received_events_url . "https://api.github.com/users/dube25/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-12T17:20:52Z") (updated_at . "2017-07-27T19:59:10Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "krackoder") (id . 6703583) (avatar_url . "https://avatars0.githubusercontent.com/u/6703583?v=4") (gravatar_id . "") (url . "https://api.github.com/users/krackoder") (html_url . "https://github.com/krackoder") (followers_url . "https://api.github.com/users/krackoder/followers") (following_url . "https://api.github.com/users/krackoder/following{/other_user}") (gists_url . "https://api.github.com/users/krackoder/gists{/gist_id}") (starred_url . "https://api.github.com/users/krackoder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/krackoder/subscriptions") (organizations_url . "https://api.github.com/users/krackoder/orgs") (repos_url . "https://api.github.com/users/krackoder/repos") (events_url . "https://api.github.com/users/krackoder/events{/privacy}") (received_events_url . "https://api.github.com/users/krackoder/received_events") (type . "User") (site_admin)))))) ((login . "krackoder") (id . 6703583) (avatar_url . "https://avatars0.githubusercontent.com/u/6703583?v=4") (gravatar_id . "") (url . "https://api.github.com/users/krackoder") (html_url . "https://github.com/krackoder") (followers_url . "https://api.github.com/users/krackoder/followers") (following_url . "https://api.github.com/users/krackoder/following{/other_user}") (gists_url . "https://api.github.com/users/krackoder/gists{/gist_id}") (starred_url . "https://api.github.com/users/krackoder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/krackoder/subscriptions") (organizations_url . "https://api.github.com/users/krackoder/orgs") (repos_url . "https://api.github.com/users/krackoder/repos") (events_url . "https://api.github.com/users/krackoder/events{/privacy}") (received_events_url . "https://api.github.com/users/krackoder/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "nsinha@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-02-17T10:09:06Z") (updated_at . "2017-11-20T09:13:54Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin)))))) ((login . "EXPEanisingh") (id . 13013186) (avatar_url . "https://avatars3.githubusercontent.com/u/13013186?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEanisingh") (html_url . "https://github.com/EXPEanisingh") (followers_url . "https://api.github.com/users/EXPEanisingh/followers") (following_url . "https://api.github.com/users/EXPEanisingh/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEanisingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEanisingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEanisingh/subscriptions") (organizations_url . "https://api.github.com/users/EXPEanisingh/orgs") (repos_url . "https://api.github.com/users/EXPEanisingh/repos") (events_url . "https://api.github.com/users/EXPEanisingh/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEanisingh/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "anisingh@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-06-23T07:16:52Z") (updated_at . "2017-07-24T07:52:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "prasadmandore") (id . 16143023) (avatar_url . "https://avatars2.githubusercontent.com/u/16143023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/prasadmandore") (html_url . "https://github.com/prasadmandore") (followers_url . "https://api.github.com/users/prasadmandore/followers") (following_url . "https://api.github.com/users/prasadmandore/following{/other_user}") (gists_url . "https://api.github.com/users/prasadmandore/gists{/gist_id}") (starred_url . "https://api.github.com/users/prasadmandore/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/prasadmandore/subscriptions") (organizations_url . "https://api.github.com/users/prasadmandore/orgs") (repos_url . "https://api.github.com/users/prasadmandore/repos") (events_url . "https://api.github.com/users/prasadmandore/events{/privacy}") (received_events_url . "https://api.github.com/users/prasadmandore/received_events") (type . "User") (site_admin)))))) ((login . "prasadmandore") (id . 16143023) (avatar_url . "https://avatars2.githubusercontent.com/u/16143023?v=4") (gravatar_id . "") (url . "https://api.github.com/users/prasadmandore") (html_url . "https://github.com/prasadmandore") (followers_url . "https://api.github.com/users/prasadmandore/followers") (following_url . "https://api.github.com/users/prasadmandore/following{/other_user}") (gists_url . "https://api.github.com/users/prasadmandore/gists{/gist_id}") (starred_url . "https://api.github.com/users/prasadmandore/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/prasadmandore/subscriptions") (organizations_url . "https://api.github.com/users/prasadmandore/orgs") (repos_url . "https://api.github.com/users/prasadmandore/repos") (events_url . "https://api.github.com/users/prasadmandore/events{/privacy}") (received_events_url . "https://api.github.com/users/prasadmandore/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "pmandore@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-12-03T22:32:39Z") (updated_at . "2016-10-03T23:31:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vasanthksexp") (id . 16090796) (avatar_url . "https://avatars1.githubusercontent.com/u/16090796?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthksexp") (html_url . "https://github.com/vasanthksexp") (followers_url . "https://api.github.com/users/vasanthksexp/followers") (following_url . "https://api.github.com/users/vasanthksexp/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthksexp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthksexp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthksexp/subscriptions") (organizations_url . "https://api.github.com/users/vasanthksexp/orgs") (repos_url . "https://api.github.com/users/vasanthksexp/repos") (events_url . "https://api.github.com/users/vasanthksexp/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthksexp/received_events") (type . "User") (site_admin)))))) ((login . "vasanthksexp") (id . 16090796) (avatar_url . "https://avatars1.githubusercontent.com/u/16090796?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vasanthksexp") (html_url . "https://github.com/vasanthksexp") (followers_url . "https://api.github.com/users/vasanthksexp/followers") (following_url . "https://api.github.com/users/vasanthksexp/following{/other_user}") (gists_url . "https://api.github.com/users/vasanthksexp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vasanthksexp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vasanthksexp/subscriptions") (organizations_url . "https://api.github.com/users/vasanthksexp/orgs") (repos_url . "https://api.github.com/users/vasanthksexp/repos") (events_url . "https://api.github.com/users/vasanthksexp/events{/privacy}") (received_events_url . "https://api.github.com/users/vasanthksexp/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-vsomasundaram@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-11-30T23:22:00Z") (updated_at . "2017-09-29T16:11:12Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "akhilp") (id . 81716) (avatar_url . "https://avatars3.githubusercontent.com/u/81716?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akhilp") (html_url . "https://github.com/akhilp") (followers_url . "https://api.github.com/users/akhilp/followers") (following_url . "https://api.github.com/users/akhilp/following{/other_user}") (gists_url . "https://api.github.com/users/akhilp/gists{/gist_id}") (starred_url . "https://api.github.com/users/akhilp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akhilp/subscriptions") (organizations_url . "https://api.github.com/users/akhilp/orgs") (repos_url . "https://api.github.com/users/akhilp/repos") (events_url . "https://api.github.com/users/akhilp/events{/privacy}") (received_events_url . "https://api.github.com/users/akhilp/received_events") (type . "User") (site_admin)))))) ((login . "akhilp") (id . 81716) (avatar_url . "https://avatars3.githubusercontent.com/u/81716?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akhilp") (html_url . "https://github.com/akhilp") (followers_url . "https://api.github.com/users/akhilp/followers") (following_url . "https://api.github.com/users/akhilp/following{/other_user}") (gists_url . "https://api.github.com/users/akhilp/gists{/gist_id}") (starred_url . "https://api.github.com/users/akhilp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akhilp/subscriptions") (organizations_url . "https://api.github.com/users/akhilp/orgs") (repos_url . "https://api.github.com/users/akhilp/repos") (events_url . "https://api.github.com/users/akhilp/events{/privacy}") (received_events_url . "https://api.github.com/users/akhilp/received_events") (type . "User") (site_admin) (name . "Akhil Patel") (company) (blog . "") (location . "Seattle,WA") (email . "v-akpatel@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 3) (following . 0) (created_at . "2009-05-06T17:14:45Z") (updated_at . "2017-12-08T16:57:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "anandjoshi2016") (id . 18406870) (avatar_url . "https://avatars0.githubusercontent.com/u/18406870?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anandjoshi2016") (html_url . "https://github.com/anandjoshi2016") (followers_url . "https://api.github.com/users/anandjoshi2016/followers") (following_url . "https://api.github.com/users/anandjoshi2016/following{/other_user}") (gists_url . "https://api.github.com/users/anandjoshi2016/gists{/gist_id}") (starred_url . "https://api.github.com/users/anandjoshi2016/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anandjoshi2016/subscriptions") (organizations_url . "https://api.github.com/users/anandjoshi2016/orgs") (repos_url . "https://api.github.com/users/anandjoshi2016/repos") (events_url . "https://api.github.com/users/anandjoshi2016/events{/privacy}") (received_events_url . "https://api.github.com/users/anandjoshi2016/received_events") (type . "User") (site_admin)))))) ((login . "anandjoshi2016") (id . 18406870) (avatar_url . "https://avatars0.githubusercontent.com/u/18406870?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anandjoshi2016") (html_url . "https://github.com/anandjoshi2016") (followers_url . "https://api.github.com/users/anandjoshi2016/followers") (following_url . "https://api.github.com/users/anandjoshi2016/following{/other_user}") (gists_url . "https://api.github.com/users/anandjoshi2016/gists{/gist_id}") (starred_url . "https://api.github.com/users/anandjoshi2016/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anandjoshi2016/subscriptions") (organizations_url . "https://api.github.com/users/anandjoshi2016/orgs") (repos_url . "https://api.github.com/users/anandjoshi2016/repos") (events_url . "https://api.github.com/users/anandjoshi2016/events{/privacy}") (received_events_url . "https://api.github.com/users/anandjoshi2016/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "anjoshi@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-04-11T20:35:04Z") (updated_at . "2017-10-03T19:40:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rohanvishwasrao") (id . 704635) (avatar_url . "https://avatars0.githubusercontent.com/u/704635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rohanvishwasrao") (html_url . "https://github.com/rohanvishwasrao") (followers_url . "https://api.github.com/users/rohanvishwasrao/followers") (following_url . "https://api.github.com/users/rohanvishwasrao/following{/other_user}") (gists_url . "https://api.github.com/users/rohanvishwasrao/gists{/gist_id}") (starred_url . "https://api.github.com/users/rohanvishwasrao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rohanvishwasrao/subscriptions") (organizations_url . "https://api.github.com/users/rohanvishwasrao/orgs") (repos_url . "https://api.github.com/users/rohanvishwasrao/repos") (events_url . "https://api.github.com/users/rohanvishwasrao/events{/privacy}") (received_events_url . "https://api.github.com/users/rohanvishwasrao/received_events") (type . "User") (site_admin)))))) ((login . "rohanvishwasrao") (id . 704635) (avatar_url . "https://avatars0.githubusercontent.com/u/704635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rohanvishwasrao") (html_url . "https://github.com/rohanvishwasrao") (followers_url . "https://api.github.com/users/rohanvishwasrao/followers") (following_url . "https://api.github.com/users/rohanvishwasrao/following{/other_user}") (gists_url . "https://api.github.com/users/rohanvishwasrao/gists{/gist_id}") (starred_url . "https://api.github.com/users/rohanvishwasrao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rohanvishwasrao/subscriptions") (organizations_url . "https://api.github.com/users/rohanvishwasrao/orgs") (repos_url . "https://api.github.com/users/rohanvishwasrao/repos") (events_url . "https://api.github.com/users/rohanvishwasrao/events{/privacy}") (received_events_url . "https://api.github.com/users/rohanvishwasrao/received_events") (type . "User") (site_admin) (name . "Rohan Vishwasrao") (company . "Expedia Corp, Microsoft Corp") (blog . "http://8finite.webs.com/") (location . "Bellevue, WA") (email . "rv.rohan@gmail.com") (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 3) (following . 7) (created_at . "2011-04-01T23:10:56Z") (updated_at . "2017-09-01T00:47:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "foobarbarfoo") (id . 1737526) (avatar_url . "https://avatars2.githubusercontent.com/u/1737526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/foobarbarfoo") (html_url . "https://github.com/foobarbarfoo") (followers_url . "https://api.github.com/users/foobarbarfoo/followers") (following_url . "https://api.github.com/users/foobarbarfoo/following{/other_user}") (gists_url . "https://api.github.com/users/foobarbarfoo/gists{/gist_id}") (starred_url . "https://api.github.com/users/foobarbarfoo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/foobarbarfoo/subscriptions") (organizations_url . "https://api.github.com/users/foobarbarfoo/orgs") (repos_url . "https://api.github.com/users/foobarbarfoo/repos") (events_url . "https://api.github.com/users/foobarbarfoo/events{/privacy}") (received_events_url . "https://api.github.com/users/foobarbarfoo/received_events") (type . "User") (site_admin)))))) ((login . "foobarbarfoo") (id . 1737526) (avatar_url . "https://avatars2.githubusercontent.com/u/1737526?v=4") (gravatar_id . "") (url . "https://api.github.com/users/foobarbarfoo") (html_url . "https://github.com/foobarbarfoo") (followers_url . "https://api.github.com/users/foobarbarfoo/followers") (following_url . "https://api.github.com/users/foobarbarfoo/following{/other_user}") (gists_url . "https://api.github.com/users/foobarbarfoo/gists{/gist_id}") (starred_url . "https://api.github.com/users/foobarbarfoo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/foobarbarfoo/subscriptions") (organizations_url . "https://api.github.com/users/foobarbarfoo/orgs") (repos_url . "https://api.github.com/users/foobarbarfoo/repos") (events_url . "https://api.github.com/users/foobarbarfoo/events{/privacy}") (received_events_url . "https://api.github.com/users/foobarbarfoo/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2012-05-14T14:06:12Z") (updated_at . "2017-12-12T17:30:18Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "fuzan") (id . 1542837) (avatar_url . "https://avatars3.githubusercontent.com/u/1542837?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fuzan") (html_url . "https://github.com/fuzan") (followers_url . "https://api.github.com/users/fuzan/followers") (following_url . "https://api.github.com/users/fuzan/following{/other_user}") (gists_url . "https://api.github.com/users/fuzan/gists{/gist_id}") (starred_url . "https://api.github.com/users/fuzan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fuzan/subscriptions") (organizations_url . "https://api.github.com/users/fuzan/orgs") (repos_url . "https://api.github.com/users/fuzan/repos") (events_url . "https://api.github.com/users/fuzan/events{/privacy}") (received_events_url . "https://api.github.com/users/fuzan/received_events") (type . "User") (site_admin)))))) ((login . "fuzan") (id . 1542837) (avatar_url . "https://avatars3.githubusercontent.com/u/1542837?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fuzan") (html_url . "https://github.com/fuzan") (followers_url . "https://api.github.com/users/fuzan/followers") (following_url . "https://api.github.com/users/fuzan/following{/other_user}") (gists_url . "https://api.github.com/users/fuzan/gists{/gist_id}") (starred_url . "https://api.github.com/users/fuzan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fuzan/subscriptions") (organizations_url . "https://api.github.com/users/fuzan/orgs") (repos_url . "https://api.github.com/users/fuzan/repos") (events_url . "https://api.github.com/users/fuzan/events{/privacy}") (received_events_url . "https://api.github.com/users/fuzan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 37) (public_gists . 0) (followers . 4) (following . 6) (created_at . "2012-03-16T04:26:36Z") (updated_at . "2018-01-08T21:32:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin)))))) ((login . "frankliu1980") (id . 1227005) (avatar_url . "https://avatars1.githubusercontent.com/u/1227005?v=4") (gravatar_id . "") (url . "https://api.github.com/users/frankliu1980") (html_url . "https://github.com/frankliu1980") (followers_url . "https://api.github.com/users/frankliu1980/followers") (following_url . "https://api.github.com/users/frankliu1980/following{/other_user}") (gists_url . "https://api.github.com/users/frankliu1980/gists{/gist_id}") (starred_url . "https://api.github.com/users/frankliu1980/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/frankliu1980/subscriptions") (organizations_url . "https://api.github.com/users/frankliu1980/orgs") (repos_url . "https://api.github.com/users/frankliu1980/repos") (events_url . "https://api.github.com/users/frankliu1980/events{/privacy}") (received_events_url . "https://api.github.com/users/frankliu1980/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "fenliu@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2011-11-29T02:30:28Z") (updated_at . "2017-10-04T10:34:51Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "anilananthacharya") (id . 7916351) (avatar_url . "https://avatars0.githubusercontent.com/u/7916351?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anilananthacharya") (html_url . "https://github.com/anilananthacharya") (followers_url . "https://api.github.com/users/anilananthacharya/followers") (following_url . "https://api.github.com/users/anilananthacharya/following{/other_user}") (gists_url . "https://api.github.com/users/anilananthacharya/gists{/gist_id}") (starred_url . "https://api.github.com/users/anilananthacharya/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anilananthacharya/subscriptions") (organizations_url . "https://api.github.com/users/anilananthacharya/orgs") (repos_url . "https://api.github.com/users/anilananthacharya/repos") (events_url . "https://api.github.com/users/anilananthacharya/events{/privacy}") (received_events_url . "https://api.github.com/users/anilananthacharya/received_events") (type . "User") (site_admin)))))) ((login . "anilananthacharya") (id . 7916351) (avatar_url . "https://avatars0.githubusercontent.com/u/7916351?v=4") (gravatar_id . "") (url . "https://api.github.com/users/anilananthacharya") (html_url . "https://github.com/anilananthacharya") (followers_url . "https://api.github.com/users/anilananthacharya/followers") (following_url . "https://api.github.com/users/anilananthacharya/following{/other_user}") (gists_url . "https://api.github.com/users/anilananthacharya/gists{/gist_id}") (starred_url . "https://api.github.com/users/anilananthacharya/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/anilananthacharya/subscriptions") (organizations_url . "https://api.github.com/users/anilananthacharya/orgs") (repos_url . "https://api.github.com/users/anilananthacharya/repos") (events_url . "https://api.github.com/users/anilananthacharya/events{/privacy}") (received_events_url . "https://api.github.com/users/anilananthacharya/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-06-17T19:21:44Z") (updated_at . "2018-01-03T23:44:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tawalsh") (id . 12540313) (avatar_url . "https://avatars2.githubusercontent.com/u/12540313?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tawalsh") (html_url . "https://github.com/tawalsh") (followers_url . "https://api.github.com/users/tawalsh/followers") (following_url . "https://api.github.com/users/tawalsh/following{/other_user}") (gists_url . "https://api.github.com/users/tawalsh/gists{/gist_id}") (starred_url . "https://api.github.com/users/tawalsh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tawalsh/subscriptions") (organizations_url . "https://api.github.com/users/tawalsh/orgs") (repos_url . "https://api.github.com/users/tawalsh/repos") (events_url . "https://api.github.com/users/tawalsh/events{/privacy}") (received_events_url . "https://api.github.com/users/tawalsh/received_events") (type . "User") (site_admin)))))) ((login . "tawalsh") (id . 12540313) (avatar_url . "https://avatars2.githubusercontent.com/u/12540313?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tawalsh") (html_url . "https://github.com/tawalsh") (followers_url . "https://api.github.com/users/tawalsh/followers") (following_url . "https://api.github.com/users/tawalsh/following{/other_user}") (gists_url . "https://api.github.com/users/tawalsh/gists{/gist_id}") (starred_url . "https://api.github.com/users/tawalsh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tawalsh/subscriptions") (organizations_url . "https://api.github.com/users/tawalsh/orgs") (repos_url . "https://api.github.com/users/tawalsh/repos") (events_url . "https://api.github.com/users/tawalsh/events{/privacy}") (received_events_url . "https://api.github.com/users/tawalsh/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-05-21T06:20:14Z") (updated_at . "2016-10-03T23:11:31Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sayali10") (id . 6752141) (avatar_url . "https://avatars1.githubusercontent.com/u/6752141?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sayali10") (html_url . "https://github.com/sayali10") (followers_url . "https://api.github.com/users/sayali10/followers") (following_url . "https://api.github.com/users/sayali10/following{/other_user}") (gists_url . "https://api.github.com/users/sayali10/gists{/gist_id}") (starred_url . "https://api.github.com/users/sayali10/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sayali10/subscriptions") (organizations_url . "https://api.github.com/users/sayali10/orgs") (repos_url . "https://api.github.com/users/sayali10/repos") (events_url . "https://api.github.com/users/sayali10/events{/privacy}") (received_events_url . "https://api.github.com/users/sayali10/received_events") (type . "User") (site_admin)))))) ((login . "sayali10") (id . 6752141) (avatar_url . "https://avatars1.githubusercontent.com/u/6752141?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sayali10") (html_url . "https://github.com/sayali10") (followers_url . "https://api.github.com/users/sayali10/followers") (following_url . "https://api.github.com/users/sayali10/following{/other_user}") (gists_url . "https://api.github.com/users/sayali10/gists{/gist_id}") (starred_url . "https://api.github.com/users/sayali10/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sayali10/subscriptions") (organizations_url . "https://api.github.com/users/sayali10/orgs") (repos_url . "https://api.github.com/users/sayali10/repos") (events_url . "https://api.github.com/users/sayali10/events{/privacy}") (received_events_url . "https://api.github.com/users/sayali10/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "swarule@expedia.com") (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-02-21T21:55:20Z") (updated_at . "2017-01-24T03:00:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Nishant2909") (id . 14986638) (avatar_url . "https://avatars1.githubusercontent.com/u/14986638?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nishant2909") (html_url . "https://github.com/Nishant2909") (followers_url . "https://api.github.com/users/Nishant2909/followers") (following_url . "https://api.github.com/users/Nishant2909/following{/other_user}") (gists_url . "https://api.github.com/users/Nishant2909/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nishant2909/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nishant2909/subscriptions") (organizations_url . "https://api.github.com/users/Nishant2909/orgs") (repos_url . "https://api.github.com/users/Nishant2909/repos") (events_url . "https://api.github.com/users/Nishant2909/events{/privacy}") (received_events_url . "https://api.github.com/users/Nishant2909/received_events") (type . "User") (site_admin)))))) ((login . "Nishant2909") (id . 14986638) (avatar_url . "https://avatars1.githubusercontent.com/u/14986638?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Nishant2909") (html_url . "https://github.com/Nishant2909") (followers_url . "https://api.github.com/users/Nishant2909/followers") (following_url . "https://api.github.com/users/Nishant2909/following{/other_user}") (gists_url . "https://api.github.com/users/Nishant2909/gists{/gist_id}") (starred_url . "https://api.github.com/users/Nishant2909/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Nishant2909/subscriptions") (organizations_url . "https://api.github.com/users/Nishant2909/orgs") (repos_url . "https://api.github.com/users/Nishant2909/repos") (events_url . "https://api.github.com/users/Nishant2909/events{/privacy}") (received_events_url . "https://api.github.com/users/Nishant2909/received_events") (type . "User") (site_admin) (name . "Nishant Jain") (company) (blog . "") (location) (email . "nijain@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-10-05T21:42:10Z") (updated_at . "2018-01-13T17:12:23Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "cpmurphy-ewe") (id . 17604184) (avatar_url . "https://avatars0.githubusercontent.com/u/17604184?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cpmurphy-ewe") (html_url . "https://github.com/cpmurphy-ewe") (followers_url . "https://api.github.com/users/cpmurphy-ewe/followers") (following_url . "https://api.github.com/users/cpmurphy-ewe/following{/other_user}") (gists_url . "https://api.github.com/users/cpmurphy-ewe/gists{/gist_id}") (starred_url . "https://api.github.com/users/cpmurphy-ewe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cpmurphy-ewe/subscriptions") (organizations_url . "https://api.github.com/users/cpmurphy-ewe/orgs") (repos_url . "https://api.github.com/users/cpmurphy-ewe/repos") (events_url . "https://api.github.com/users/cpmurphy-ewe/events{/privacy}") (received_events_url . "https://api.github.com/users/cpmurphy-ewe/received_events") (type . "User") (site_admin)))))) ((login . "cpmurphy-ewe") (id . 17604184) (avatar_url . "https://avatars0.githubusercontent.com/u/17604184?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cpmurphy-ewe") (html_url . "https://github.com/cpmurphy-ewe") (followers_url . "https://api.github.com/users/cpmurphy-ewe/followers") (following_url . "https://api.github.com/users/cpmurphy-ewe/following{/other_user}") (gists_url . "https://api.github.com/users/cpmurphy-ewe/gists{/gist_id}") (starred_url . "https://api.github.com/users/cpmurphy-ewe/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cpmurphy-ewe/subscriptions") (organizations_url . "https://api.github.com/users/cpmurphy-ewe/orgs") (repos_url . "https://api.github.com/users/cpmurphy-ewe/repos") (events_url . "https://api.github.com/users/cpmurphy-ewe/events{/privacy}") (received_events_url . "https://api.github.com/users/cpmurphy-ewe/received_events") (type . "User") (site_admin) (name . "Christian Murphy") (company . "Expedia") (blog . "") (location . "Chicago") (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-03-02T22:48:45Z") (updated_at . "2017-09-19T14:29:14Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kumarvipul1707") (id . 12214995) (avatar_url . "https://avatars1.githubusercontent.com/u/12214995?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarvipul1707") (html_url . "https://github.com/kumarvipul1707") (followers_url . "https://api.github.com/users/kumarvipul1707/followers") (following_url . "https://api.github.com/users/kumarvipul1707/following{/other_user}") (gists_url . "https://api.github.com/users/kumarvipul1707/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarvipul1707/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarvipul1707/subscriptions") (organizations_url . "https://api.github.com/users/kumarvipul1707/orgs") (repos_url . "https://api.github.com/users/kumarvipul1707/repos") (events_url . "https://api.github.com/users/kumarvipul1707/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarvipul1707/received_events") (type . "User") (site_admin)))))) ((login . "kumarvipul1707") (id . 12214995) (avatar_url . "https://avatars1.githubusercontent.com/u/12214995?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kumarvipul1707") (html_url . "https://github.com/kumarvipul1707") (followers_url . "https://api.github.com/users/kumarvipul1707/followers") (following_url . "https://api.github.com/users/kumarvipul1707/following{/other_user}") (gists_url . "https://api.github.com/users/kumarvipul1707/gists{/gist_id}") (starred_url . "https://api.github.com/users/kumarvipul1707/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kumarvipul1707/subscriptions") (organizations_url . "https://api.github.com/users/kumarvipul1707/orgs") (repos_url . "https://api.github.com/users/kumarvipul1707/repos") (events_url . "https://api.github.com/users/kumarvipul1707/events{/privacy}") (received_events_url . "https://api.github.com/users/kumarvipul1707/received_events") (type . "User") (site_admin) (name . "Kumar Vipul") (company . "Expedia") (blog . "") (location . "Bellevue, WA") (email . "kvipul@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-05-03T00:14:15Z") (updated_at . "2017-11-10T16:45:42Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vysapanranjan") (id . 16240215) (avatar_url . "https://avatars1.githubusercontent.com/u/16240215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vysapanranjan") (html_url . "https://github.com/vysapanranjan") (followers_url . "https://api.github.com/users/vysapanranjan/followers") (following_url . "https://api.github.com/users/vysapanranjan/following{/other_user}") (gists_url . "https://api.github.com/users/vysapanranjan/gists{/gist_id}") (starred_url . "https://api.github.com/users/vysapanranjan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vysapanranjan/subscriptions") (organizations_url . "https://api.github.com/users/vysapanranjan/orgs") (repos_url . "https://api.github.com/users/vysapanranjan/repos") (events_url . "https://api.github.com/users/vysapanranjan/events{/privacy}") (received_events_url . "https://api.github.com/users/vysapanranjan/received_events") (type . "User") (site_admin)))))) ((login . "vysapanranjan") (id . 16240215) (avatar_url . "https://avatars1.githubusercontent.com/u/16240215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vysapanranjan") (html_url . "https://github.com/vysapanranjan") (followers_url . "https://api.github.com/users/vysapanranjan/followers") (following_url . "https://api.github.com/users/vysapanranjan/following{/other_user}") (gists_url . "https://api.github.com/users/vysapanranjan/gists{/gist_id}") (starred_url . "https://api.github.com/users/vysapanranjan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vysapanranjan/subscriptions") (organizations_url . "https://api.github.com/users/vysapanranjan/orgs") (repos_url . "https://api.github.com/users/vysapanranjan/repos") (events_url . "https://api.github.com/users/vysapanranjan/events{/privacy}") (received_events_url . "https://api.github.com/users/vysapanranjan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-sapranjan@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2015-12-10T12:19:34Z") (updated_at . "2017-01-10T03:51:50Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sandeepspatel") (id . 2301241) (avatar_url . "https://avatars0.githubusercontent.com/u/2301241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sandeepspatel") (html_url . "https://github.com/sandeepspatel") (followers_url . "https://api.github.com/users/sandeepspatel/followers") (following_url . "https://api.github.com/users/sandeepspatel/following{/other_user}") (gists_url . "https://api.github.com/users/sandeepspatel/gists{/gist_id}") (starred_url . "https://api.github.com/users/sandeepspatel/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sandeepspatel/subscriptions") (organizations_url . "https://api.github.com/users/sandeepspatel/orgs") (repos_url . "https://api.github.com/users/sandeepspatel/repos") (events_url . "https://api.github.com/users/sandeepspatel/events{/privacy}") (received_events_url . "https://api.github.com/users/sandeepspatel/received_events") (type . "User") (site_admin)))))) ((login . "sandeepspatel") (id . 2301241) (avatar_url . "https://avatars0.githubusercontent.com/u/2301241?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sandeepspatel") (html_url . "https://github.com/sandeepspatel") (followers_url . "https://api.github.com/users/sandeepspatel/followers") (following_url . "https://api.github.com/users/sandeepspatel/following{/other_user}") (gists_url . "https://api.github.com/users/sandeepspatel/gists{/gist_id}") (starred_url . "https://api.github.com/users/sandeepspatel/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sandeepspatel/subscriptions") (organizations_url . "https://api.github.com/users/sandeepspatel/orgs") (repos_url . "https://api.github.com/users/sandeepspatel/repos") (events_url . "https://api.github.com/users/sandeepspatel/events{/privacy}") (received_events_url . "https://api.github.com/users/sandeepspatel/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "sanpatel@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2012-09-07T17:17:08Z") (updated_at . "2017-11-16T21:49:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "atimbro") (id . 14234831) (avatar_url . "https://avatars2.githubusercontent.com/u/14234831?v=4") (gravatar_id . "") (url . "https://api.github.com/users/atimbro") (html_url . "https://github.com/atimbro") (followers_url . "https://api.github.com/users/atimbro/followers") (following_url . "https://api.github.com/users/atimbro/following{/other_user}") (gists_url . "https://api.github.com/users/atimbro/gists{/gist_id}") (starred_url . "https://api.github.com/users/atimbro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/atimbro/subscriptions") (organizations_url . "https://api.github.com/users/atimbro/orgs") (repos_url . "https://api.github.com/users/atimbro/repos") (events_url . "https://api.github.com/users/atimbro/events{/privacy}") (received_events_url . "https://api.github.com/users/atimbro/received_events") (type . "User") (site_admin)))))) ((login . "atimbro") (id . 14234831) (avatar_url . "https://avatars2.githubusercontent.com/u/14234831?v=4") (gravatar_id . "") (url . "https://api.github.com/users/atimbro") (html_url . "https://github.com/atimbro") (followers_url . "https://api.github.com/users/atimbro/followers") (following_url . "https://api.github.com/users/atimbro/following{/other_user}") (gists_url . "https://api.github.com/users/atimbro/gists{/gist_id}") (starred_url . "https://api.github.com/users/atimbro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/atimbro/subscriptions") (organizations_url . "https://api.github.com/users/atimbro/orgs") (repos_url . "https://api.github.com/users/atimbro/repos") (events_url . "https://api.github.com/users/atimbro/events{/privacy}") (received_events_url . "https://api.github.com/users/atimbro/received_events") (type . "User") (site_admin) (name . "Alexandre Timbro") (company . "Expedia ") (blog . "") (location . "Montreal") (email . "atimbro@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2015-09-11T12:40:06Z") (updated_at . "2017-09-18T19:25:39Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "sarpk") (id . 4318934) (avatar_url . "https://avatars1.githubusercontent.com/u/4318934?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sarpk") (html_url . "https://github.com/sarpk") (followers_url . "https://api.github.com/users/sarpk/followers") (following_url . "https://api.github.com/users/sarpk/following{/other_user}") (gists_url . "https://api.github.com/users/sarpk/gists{/gist_id}") (starred_url . "https://api.github.com/users/sarpk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sarpk/subscriptions") (organizations_url . "https://api.github.com/users/sarpk/orgs") (repos_url . "https://api.github.com/users/sarpk/repos") (events_url . "https://api.github.com/users/sarpk/events{/privacy}") (received_events_url . "https://api.github.com/users/sarpk/received_events") (type . "User") (site_admin)))))) ((login . "sarpk") (id . 4318934) (avatar_url . "https://avatars1.githubusercontent.com/u/4318934?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sarpk") (html_url . "https://github.com/sarpk") (followers_url . "https://api.github.com/users/sarpk/followers") (following_url . "https://api.github.com/users/sarpk/following{/other_user}") (gists_url . "https://api.github.com/users/sarpk/gists{/gist_id}") (starred_url . "https://api.github.com/users/sarpk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sarpk/subscriptions") (organizations_url . "https://api.github.com/users/sarpk/orgs") (repos_url . "https://api.github.com/users/sarpk/repos") (events_url . "https://api.github.com/users/sarpk/events{/privacy}") (received_events_url . "https://api.github.com/users/sarpk/received_events") (type . "User") (site_admin) (name . "Sarp") (company) (blog . "") (location . "Australia") (email) (hireable) (bio) (public_repos . 16) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2013-05-02T07:10:24Z") (updated_at . "2017-09-09T13:56:59Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "allenpsuner") (id . 10819359) (avatar_url . "https://avatars0.githubusercontent.com/u/10819359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/allenpsuner") (html_url . "https://github.com/allenpsuner") (followers_url . "https://api.github.com/users/allenpsuner/followers") (following_url . "https://api.github.com/users/allenpsuner/following{/other_user}") (gists_url . "https://api.github.com/users/allenpsuner/gists{/gist_id}") (starred_url . "https://api.github.com/users/allenpsuner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/allenpsuner/subscriptions") (organizations_url . "https://api.github.com/users/allenpsuner/orgs") (repos_url . "https://api.github.com/users/allenpsuner/repos") (events_url . "https://api.github.com/users/allenpsuner/events{/privacy}") (received_events_url . "https://api.github.com/users/allenpsuner/received_events") (type . "User") (site_admin)))))) ((login . "allenpsuner") (id . 10819359) (avatar_url . "https://avatars0.githubusercontent.com/u/10819359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/allenpsuner") (html_url . "https://github.com/allenpsuner") (followers_url . "https://api.github.com/users/allenpsuner/followers") (following_url . "https://api.github.com/users/allenpsuner/following{/other_user}") (gists_url . "https://api.github.com/users/allenpsuner/gists{/gist_id}") (starred_url . "https://api.github.com/users/allenpsuner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/allenpsuner/subscriptions") (organizations_url . "https://api.github.com/users/allenpsuner/orgs") (repos_url . "https://api.github.com/users/allenpsuner/repos") (events_url . "https://api.github.com/users/allenpsuner/events{/privacy}") (received_events_url . "https://api.github.com/users/allenpsuner/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2015-02-02T22:33:08Z") (updated_at . "2018-01-04T21:26:19Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "raghvendra-iiita-work") (id . 11025692) (avatar_url . "https://avatars3.githubusercontent.com/u/11025692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raghvendra-iiita-work") (html_url . "https://github.com/raghvendra-iiita-work") (followers_url . "https://api.github.com/users/raghvendra-iiita-work/followers") (following_url . "https://api.github.com/users/raghvendra-iiita-work/following{/other_user}") (gists_url . "https://api.github.com/users/raghvendra-iiita-work/gists{/gist_id}") (starred_url . "https://api.github.com/users/raghvendra-iiita-work/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raghvendra-iiita-work/subscriptions") (organizations_url . "https://api.github.com/users/raghvendra-iiita-work/orgs") (repos_url . "https://api.github.com/users/raghvendra-iiita-work/repos") (events_url . "https://api.github.com/users/raghvendra-iiita-work/events{/privacy}") (received_events_url . "https://api.github.com/users/raghvendra-iiita-work/received_events") (type . "User") (site_admin)))))) ((login . "raghvendra-iiita-work") (id . 11025692) (avatar_url . "https://avatars3.githubusercontent.com/u/11025692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raghvendra-iiita-work") (html_url . "https://github.com/raghvendra-iiita-work") (followers_url . "https://api.github.com/users/raghvendra-iiita-work/followers") (following_url . "https://api.github.com/users/raghvendra-iiita-work/following{/other_user}") (gists_url . "https://api.github.com/users/raghvendra-iiita-work/gists{/gist_id}") (starred_url . "https://api.github.com/users/raghvendra-iiita-work/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raghvendra-iiita-work/subscriptions") (organizations_url . "https://api.github.com/users/raghvendra-iiita-work/orgs") (repos_url . "https://api.github.com/users/raghvendra-iiita-work/repos") (events_url . "https://api.github.com/users/raghvendra-iiita-work/events{/privacy}") (received_events_url . "https://api.github.com/users/raghvendra-iiita-work/received_events") (type . "User") (site_admin) (name . "Raghvendra Singh") (company) (blog . "") (location) (email . "raghvendra.iiita.work@gmail.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-02-16T07:27:35Z") (updated_at . "2018-01-17T07:04:01Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "karlringrose") (id . 5466743) (avatar_url . "https://avatars2.githubusercontent.com/u/5466743?v=4") (gravatar_id . "") (url . "https://api.github.com/users/karlringrose") (html_url . "https://github.com/karlringrose") (followers_url . "https://api.github.com/users/karlringrose/followers") (following_url . "https://api.github.com/users/karlringrose/following{/other_user}") (gists_url . "https://api.github.com/users/karlringrose/gists{/gist_id}") (starred_url . "https://api.github.com/users/karlringrose/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/karlringrose/subscriptions") (organizations_url . "https://api.github.com/users/karlringrose/orgs") (repos_url . "https://api.github.com/users/karlringrose/repos") (events_url . "https://api.github.com/users/karlringrose/events{/privacy}") (received_events_url . "https://api.github.com/users/karlringrose/received_events") (type . "User") (site_admin)))))) ((login . "karlringrose") (id . 5466743) (avatar_url . "https://avatars2.githubusercontent.com/u/5466743?v=4") (gravatar_id . "") (url . "https://api.github.com/users/karlringrose") (html_url . "https://github.com/karlringrose") (followers_url . "https://api.github.com/users/karlringrose/followers") (following_url . "https://api.github.com/users/karlringrose/following{/other_user}") (gists_url . "https://api.github.com/users/karlringrose/gists{/gist_id}") (starred_url . "https://api.github.com/users/karlringrose/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/karlringrose/subscriptions") (organizations_url . "https://api.github.com/users/karlringrose/orgs") (repos_url . "https://api.github.com/users/karlringrose/repos") (events_url . "https://api.github.com/users/karlringrose/events{/privacy}") (received_events_url . "https://api.github.com/users/karlringrose/received_events") (type . "User") (site_admin) (name . "Karl Ringrose") (company . "Expedia Inc") (blog . "http://quirkandsoul.com") (location . "Brisbane, Queensland, Australia") (email . "kringrose@expedia.com") (hireable) (bio) (public_repos . 14) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2013-09-16T03:57:04Z") (updated_at . "2017-11-18T22:16:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pblanchette-expedia") (id . 18538586) (avatar_url . "https://avatars0.githubusercontent.com/u/18538586?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pblanchette-expedia") (html_url . "https://github.com/pblanchette-expedia") (followers_url . "https://api.github.com/users/pblanchette-expedia/followers") (following_url . "https://api.github.com/users/pblanchette-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/pblanchette-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/pblanchette-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pblanchette-expedia/subscriptions") (organizations_url . "https://api.github.com/users/pblanchette-expedia/orgs") (repos_url . "https://api.github.com/users/pblanchette-expedia/repos") (events_url . "https://api.github.com/users/pblanchette-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/pblanchette-expedia/received_events") (type . "User") (site_admin)))))) ((login . "pblanchette-expedia") (id . 18538586) (avatar_url . "https://avatars0.githubusercontent.com/u/18538586?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pblanchette-expedia") (html_url . "https://github.com/pblanchette-expedia") (followers_url . "https://api.github.com/users/pblanchette-expedia/followers") (following_url . "https://api.github.com/users/pblanchette-expedia/following{/other_user}") (gists_url . "https://api.github.com/users/pblanchette-expedia/gists{/gist_id}") (starred_url . "https://api.github.com/users/pblanchette-expedia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pblanchette-expedia/subscriptions") (organizations_url . "https://api.github.com/users/pblanchette-expedia/orgs") (repos_url . "https://api.github.com/users/pblanchette-expedia/repos") (events_url . "https://api.github.com/users/pblanchette-expedia/events{/privacy}") (received_events_url . "https://api.github.com/users/pblanchette-expedia/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "pblanchette@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2016-04-18T19:34:53Z") (updated_at . "2017-11-24T14:24:26Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Vaithia") (id . 20691574) (avatar_url . "https://avatars2.githubusercontent.com/u/20691574?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Vaithia") (html_url . "https://github.com/Vaithia") (followers_url . "https://api.github.com/users/Vaithia/followers") (following_url . "https://api.github.com/users/Vaithia/following{/other_user}") (gists_url . "https://api.github.com/users/Vaithia/gists{/gist_id}") (starred_url . "https://api.github.com/users/Vaithia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Vaithia/subscriptions") (organizations_url . "https://api.github.com/users/Vaithia/orgs") (repos_url . "https://api.github.com/users/Vaithia/repos") (events_url . "https://api.github.com/users/Vaithia/events{/privacy}") (received_events_url . "https://api.github.com/users/Vaithia/received_events") (type . "User") (site_admin)))))) ((login . "Vaithia") (id . 20691574) (avatar_url . "https://avatars2.githubusercontent.com/u/20691574?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Vaithia") (html_url . "https://github.com/Vaithia") (followers_url . "https://api.github.com/users/Vaithia/followers") (following_url . "https://api.github.com/users/Vaithia/following{/other_user}") (gists_url . "https://api.github.com/users/Vaithia/gists{/gist_id}") (starred_url . "https://api.github.com/users/Vaithia/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Vaithia/subscriptions") (organizations_url . "https://api.github.com/users/Vaithia/orgs") (repos_url . "https://api.github.com/users/Vaithia/repos") (events_url . "https://api.github.com/users/Vaithia/events{/privacy}") (received_events_url . "https://api.github.com/users/Vaithia/received_events") (type . "User") (site_admin) (name . "Vaithiandan Ramalingam (vramalingam)") (company . "@ExpediaInc") (blog . "") (location) (email . "vramalingam@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-07-27T22:24:00Z") (updated_at . "2017-10-16T21:55:12Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jwecker") (id . 12177614) (avatar_url . "https://avatars3.githubusercontent.com/u/12177614?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jwecker") (html_url . "https://github.com/jwecker") (followers_url . "https://api.github.com/users/jwecker/followers") (following_url . "https://api.github.com/users/jwecker/following{/other_user}") (gists_url . "https://api.github.com/users/jwecker/gists{/gist_id}") (starred_url . "https://api.github.com/users/jwecker/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jwecker/subscriptions") (organizations_url . "https://api.github.com/users/jwecker/orgs") (repos_url . "https://api.github.com/users/jwecker/repos") (events_url . "https://api.github.com/users/jwecker/events{/privacy}") (received_events_url . "https://api.github.com/users/jwecker/received_events") (type . "User") (site_admin)))))) ((login . "jwecker") (id . 12177614) (avatar_url . "https://avatars3.githubusercontent.com/u/12177614?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jwecker") (html_url . "https://github.com/jwecker") (followers_url . "https://api.github.com/users/jwecker/followers") (following_url . "https://api.github.com/users/jwecker/following{/other_user}") (gists_url . "https://api.github.com/users/jwecker/gists{/gist_id}") (starred_url . "https://api.github.com/users/jwecker/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jwecker/subscriptions") (organizations_url . "https://api.github.com/users/jwecker/orgs") (repos_url . "https://api.github.com/users/jwecker/repos") (events_url . "https://api.github.com/users/jwecker/events{/privacy}") (received_events_url . "https://api.github.com/users/jwecker/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "jwecker@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-04-29T22:53:07Z") (updated_at . "2017-05-15T22:10:16Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "gcraddock") (id . 7342396) (avatar_url . "https://avatars3.githubusercontent.com/u/7342396?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gcraddock") (html_url . "https://github.com/gcraddock") (followers_url . "https://api.github.com/users/gcraddock/followers") (following_url . "https://api.github.com/users/gcraddock/following{/other_user}") (gists_url . "https://api.github.com/users/gcraddock/gists{/gist_id}") (starred_url . "https://api.github.com/users/gcraddock/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gcraddock/subscriptions") (organizations_url . "https://api.github.com/users/gcraddock/orgs") (repos_url . "https://api.github.com/users/gcraddock/repos") (events_url . "https://api.github.com/users/gcraddock/events{/privacy}") (received_events_url . "https://api.github.com/users/gcraddock/received_events") (type . "User") (site_admin)))))) ((login . "gcraddock") (id . 7342396) (avatar_url . "https://avatars3.githubusercontent.com/u/7342396?v=4") (gravatar_id . "") (url . "https://api.github.com/users/gcraddock") (html_url . "https://github.com/gcraddock") (followers_url . "https://api.github.com/users/gcraddock/followers") (following_url . "https://api.github.com/users/gcraddock/following{/other_user}") (gists_url . "https://api.github.com/users/gcraddock/gists{/gist_id}") (starred_url . "https://api.github.com/users/gcraddock/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/gcraddock/subscriptions") (organizations_url . "https://api.github.com/users/gcraddock/orgs") (repos_url . "https://api.github.com/users/gcraddock/repos") (events_url . "https://api.github.com/users/gcraddock/events{/privacy}") (received_events_url . "https://api.github.com/users/gcraddock/received_events") (type . "User") (site_admin) (name . "Garrett Craddock") (company . "Expedia") (blog . "") (location . "Bellevue, WA") (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-18T23:26:44Z") (updated_at . "2016-07-25T19:19:05Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "akalinski") (id . 7364731) (avatar_url . "https://avatars3.githubusercontent.com/u/7364731?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akalinski") (html_url . "https://github.com/akalinski") (followers_url . "https://api.github.com/users/akalinski/followers") (following_url . "https://api.github.com/users/akalinski/following{/other_user}") (gists_url . "https://api.github.com/users/akalinski/gists{/gist_id}") (starred_url . "https://api.github.com/users/akalinski/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akalinski/subscriptions") (organizations_url . "https://api.github.com/users/akalinski/orgs") (repos_url . "https://api.github.com/users/akalinski/repos") (events_url . "https://api.github.com/users/akalinski/events{/privacy}") (received_events_url . "https://api.github.com/users/akalinski/received_events") (type . "User") (site_admin)))))) ((login . "akalinski") (id . 7364731) (avatar_url . "https://avatars3.githubusercontent.com/u/7364731?v=4") (gravatar_id . "") (url . "https://api.github.com/users/akalinski") (html_url . "https://github.com/akalinski") (followers_url . "https://api.github.com/users/akalinski/followers") (following_url . "https://api.github.com/users/akalinski/following{/other_user}") (gists_url . "https://api.github.com/users/akalinski/gists{/gist_id}") (starred_url . "https://api.github.com/users/akalinski/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/akalinski/subscriptions") (organizations_url . "https://api.github.com/users/akalinski/orgs") (repos_url . "https://api.github.com/users/akalinski/repos") (events_url . "https://api.github.com/users/akalinski/events{/privacy}") (received_events_url . "https://api.github.com/users/akalinski/received_events") (type . "User") (site_admin) (name . "Alenka Kalinski") (company . "Expedia") (blog . "") (location . "Bellevue. WA") (email . "akalinski@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-21T19:02:44Z") (updated_at . "2017-09-13T20:31:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vmalarcon") (id . 5175032) (avatar_url . "https://avatars0.githubusercontent.com/u/5175032?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vmalarcon") (html_url . "https://github.com/vmalarcon") (followers_url . "https://api.github.com/users/vmalarcon/followers") (following_url . "https://api.github.com/users/vmalarcon/following{/other_user}") (gists_url . "https://api.github.com/users/vmalarcon/gists{/gist_id}") (starred_url . "https://api.github.com/users/vmalarcon/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vmalarcon/subscriptions") (organizations_url . "https://api.github.com/users/vmalarcon/orgs") (repos_url . "https://api.github.com/users/vmalarcon/repos") (events_url . "https://api.github.com/users/vmalarcon/events{/privacy}") (received_events_url . "https://api.github.com/users/vmalarcon/received_events") (type . "User") (site_admin)))))) ((login . "vmalarcon") (id . 5175032) (avatar_url . "https://avatars0.githubusercontent.com/u/5175032?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vmalarcon") (html_url . "https://github.com/vmalarcon") (followers_url . "https://api.github.com/users/vmalarcon/followers") (following_url . "https://api.github.com/users/vmalarcon/following{/other_user}") (gists_url . "https://api.github.com/users/vmalarcon/gists{/gist_id}") (starred_url . "https://api.github.com/users/vmalarcon/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vmalarcon/subscriptions") (organizations_url . "https://api.github.com/users/vmalarcon/orgs") (repos_url . "https://api.github.com/users/vmalarcon/repos") (events_url . "https://api.github.com/users/vmalarcon/events{/privacy}") (received_events_url . "https://api.github.com/users/vmalarcon/received_events") (type . "User") (site_admin) (name . "Victor Alarcon") (company) (blog . "") (location . "Montreal, QC, Canada") (email . "vmalarcon@gmail.com") (hireable) (bio) (public_repos . 19) (public_gists . 0) (followers . 5) (following . 0) (created_at . "2013-08-06T15:04:40Z") (updated_at . "2018-01-11T19:23:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "senli27") (id . 14896300) (avatar_url . "https://avatars0.githubusercontent.com/u/14896300?v=4") (gravatar_id . "") (url . "https://api.github.com/users/senli27") (html_url . "https://github.com/senli27") (followers_url . "https://api.github.com/users/senli27/followers") (following_url . "https://api.github.com/users/senli27/following{/other_user}") (gists_url . "https://api.github.com/users/senli27/gists{/gist_id}") (starred_url . "https://api.github.com/users/senli27/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/senli27/subscriptions") (organizations_url . "https://api.github.com/users/senli27/orgs") (repos_url . "https://api.github.com/users/senli27/repos") (events_url . "https://api.github.com/users/senli27/events{/privacy}") (received_events_url . "https://api.github.com/users/senli27/received_events") (type . "User") (site_admin)))))) ((login . "senli27") (id . 14896300) (avatar_url . "https://avatars0.githubusercontent.com/u/14896300?v=4") (gravatar_id . "") (url . "https://api.github.com/users/senli27") (html_url . "https://github.com/senli27") (followers_url . "https://api.github.com/users/senli27/followers") (following_url . "https://api.github.com/users/senli27/following{/other_user}") (gists_url . "https://api.github.com/users/senli27/gists{/gist_id}") (starred_url . "https://api.github.com/users/senli27/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/senli27/subscriptions") (organizations_url . "https://api.github.com/users/senli27/orgs") (repos_url . "https://api.github.com/users/senli27/repos") (events_url . "https://api.github.com/users/senli27/events{/privacy}") (received_events_url . "https://api.github.com/users/senli27/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "seli@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-09-29T20:29:27Z") (updated_at . "2018-01-06T04:13:48Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vikash-exp") (id . 13537388) (avatar_url . "https://avatars3.githubusercontent.com/u/13537388?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vikash-exp") (html_url . "https://github.com/vikash-exp") (followers_url . "https://api.github.com/users/vikash-exp/followers") (following_url . "https://api.github.com/users/vikash-exp/following{/other_user}") (gists_url . "https://api.github.com/users/vikash-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vikash-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vikash-exp/subscriptions") (organizations_url . "https://api.github.com/users/vikash-exp/orgs") (repos_url . "https://api.github.com/users/vikash-exp/repos") (events_url . "https://api.github.com/users/vikash-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/vikash-exp/received_events") (type . "User") (site_admin)))))) ((login . "vikash-exp") (id . 13537388) (avatar_url . "https://avatars3.githubusercontent.com/u/13537388?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vikash-exp") (html_url . "https://github.com/vikash-exp") (followers_url . "https://api.github.com/users/vikash-exp/followers") (following_url . "https://api.github.com/users/vikash-exp/following{/other_user}") (gists_url . "https://api.github.com/users/vikash-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/vikash-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vikash-exp/subscriptions") (organizations_url . "https://api.github.com/users/vikash-exp/orgs") (repos_url . "https://api.github.com/users/vikash-exp/repos") (events_url . "https://api.github.com/users/vikash-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/vikash-exp/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "vjha@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-07-28T10:55:37Z") (updated_at . "2016-07-19T06:29:00Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vgiguere") (id . 502406) (avatar_url . "https://avatars1.githubusercontent.com/u/502406?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vgiguere") (html_url . "https://github.com/vgiguere") (followers_url . "https://api.github.com/users/vgiguere/followers") (following_url . "https://api.github.com/users/vgiguere/following{/other_user}") (gists_url . "https://api.github.com/users/vgiguere/gists{/gist_id}") (starred_url . "https://api.github.com/users/vgiguere/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vgiguere/subscriptions") (organizations_url . "https://api.github.com/users/vgiguere/orgs") (repos_url . "https://api.github.com/users/vgiguere/repos") (events_url . "https://api.github.com/users/vgiguere/events{/privacy}") (received_events_url . "https://api.github.com/users/vgiguere/received_events") (type . "User") (site_admin)))))) ((login . "vgiguere") (id . 502406) (avatar_url . "https://avatars1.githubusercontent.com/u/502406?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vgiguere") (html_url . "https://github.com/vgiguere") (followers_url . "https://api.github.com/users/vgiguere/followers") (following_url . "https://api.github.com/users/vgiguere/following{/other_user}") (gists_url . "https://api.github.com/users/vgiguere/gists{/gist_id}") (starred_url . "https://api.github.com/users/vgiguere/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vgiguere/subscriptions") (organizations_url . "https://api.github.com/users/vgiguere/orgs") (repos_url . "https://api.github.com/users/vgiguere/repos") (events_url . "https://api.github.com/users/vgiguere/events{/privacy}") (received_events_url . "https://api.github.com/users/vgiguere/received_events") (type . "User") (site_admin) (name . "Vincent Giguere") (company) (blog . "") (location . "Montréal, QC, Canada") (email . "a-vgiguere@expedia.com") (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2010-11-29T20:41:15Z") (updated_at . "2017-05-05T17:55:40Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mattcallanan") (id . 876423) (avatar_url . "https://avatars1.githubusercontent.com/u/876423?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mattcallanan") (html_url . "https://github.com/mattcallanan") (followers_url . "https://api.github.com/users/mattcallanan/followers") (following_url . "https://api.github.com/users/mattcallanan/following{/other_user}") (gists_url . "https://api.github.com/users/mattcallanan/gists{/gist_id}") (starred_url . "https://api.github.com/users/mattcallanan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mattcallanan/subscriptions") (organizations_url . "https://api.github.com/users/mattcallanan/orgs") (repos_url . "https://api.github.com/users/mattcallanan/repos") (events_url . "https://api.github.com/users/mattcallanan/events{/privacy}") (received_events_url . "https://api.github.com/users/mattcallanan/received_events") (type . "User") (site_admin)))))) ((login . "mattcallanan") (id . 876423) (avatar_url . "https://avatars1.githubusercontent.com/u/876423?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mattcallanan") (html_url . "https://github.com/mattcallanan") (followers_url . "https://api.github.com/users/mattcallanan/followers") (following_url . "https://api.github.com/users/mattcallanan/following{/other_user}") (gists_url . "https://api.github.com/users/mattcallanan/gists{/gist_id}") (starred_url . "https://api.github.com/users/mattcallanan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mattcallanan/subscriptions") (organizations_url . "https://api.github.com/users/mattcallanan/orgs") (repos_url . "https://api.github.com/users/mattcallanan/repos") (events_url . "https://api.github.com/users/mattcallanan/events{/privacy}") (received_events_url . "https://api.github.com/users/mattcallanan/received_events") (type . "User") (site_admin) (name . "Matt Callanan") (company) (blog . "mattcallanan.blogspot.com") (location) (email) (hireable) (bio) (public_repos . 15) (public_gists . 1) (followers . 6) (following . 0) (created_at . "2011-06-26T08:19:36Z") (updated_at . "2017-12-11T01:22:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "avgupta") (id . 10864247) (avatar_url . "https://avatars0.githubusercontent.com/u/10864247?v=4") (gravatar_id . "") (url . "https://api.github.com/users/avgupta") (html_url . "https://github.com/avgupta") (followers_url . "https://api.github.com/users/avgupta/followers") (following_url . "https://api.github.com/users/avgupta/following{/other_user}") (gists_url . "https://api.github.com/users/avgupta/gists{/gist_id}") (starred_url . "https://api.github.com/users/avgupta/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/avgupta/subscriptions") (organizations_url . "https://api.github.com/users/avgupta/orgs") (repos_url . "https://api.github.com/users/avgupta/repos") (events_url . "https://api.github.com/users/avgupta/events{/privacy}") (received_events_url . "https://api.github.com/users/avgupta/received_events") (type . "User") (site_admin)))))) ((login . "avgupta") (id . 10864247) (avatar_url . "https://avatars0.githubusercontent.com/u/10864247?v=4") (gravatar_id . "") (url . "https://api.github.com/users/avgupta") (html_url . "https://github.com/avgupta") (followers_url . "https://api.github.com/users/avgupta/followers") (following_url . "https://api.github.com/users/avgupta/following{/other_user}") (gists_url . "https://api.github.com/users/avgupta/gists{/gist_id}") (starred_url . "https://api.github.com/users/avgupta/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/avgupta/subscriptions") (organizations_url . "https://api.github.com/users/avgupta/orgs") (repos_url . "https://api.github.com/users/avgupta/repos") (events_url . "https://api.github.com/users/avgupta/events{/privacy}") (received_events_url . "https://api.github.com/users/avgupta/received_events") (type . "User") (site_admin) (name . "avgupta") (company) (blog . "") (location) (email . "avgupta@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-02-05T10:34:22Z") (updated_at . "2017-10-24T07:42:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "NinaQ") (id . 13465673) (avatar_url . "https://avatars0.githubusercontent.com/u/13465673?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NinaQ") (html_url . "https://github.com/NinaQ") (followers_url . "https://api.github.com/users/NinaQ/followers") (following_url . "https://api.github.com/users/NinaQ/following{/other_user}") (gists_url . "https://api.github.com/users/NinaQ/gists{/gist_id}") (starred_url . "https://api.github.com/users/NinaQ/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NinaQ/subscriptions") (organizations_url . "https://api.github.com/users/NinaQ/orgs") (repos_url . "https://api.github.com/users/NinaQ/repos") (events_url . "https://api.github.com/users/NinaQ/events{/privacy}") (received_events_url . "https://api.github.com/users/NinaQ/received_events") (type . "User") (site_admin)))))) ((login . "NinaQ") (id . 13465673) (avatar_url . "https://avatars0.githubusercontent.com/u/13465673?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NinaQ") (html_url . "https://github.com/NinaQ") (followers_url . "https://api.github.com/users/NinaQ/followers") (following_url . "https://api.github.com/users/NinaQ/following{/other_user}") (gists_url . "https://api.github.com/users/NinaQ/gists{/gist_id}") (starred_url . "https://api.github.com/users/NinaQ/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NinaQ/subscriptions") (organizations_url . "https://api.github.com/users/NinaQ/orgs") (repos_url . "https://api.github.com/users/NinaQ/repos") (events_url . "https://api.github.com/users/NinaQ/events{/privacy}") (received_events_url . "https://api.github.com/users/NinaQ/received_events") (type . "User") (site_admin) (name . "Nina Qiu") (company) (blog . "") (location) (email . "nqiu@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2015-07-23T09:36:37Z") (updated_at . "2017-10-07T23:05:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "my3raj") (id . 18277183) (avatar_url . "https://avatars2.githubusercontent.com/u/18277183?v=4") (gravatar_id . "") (url . "https://api.github.com/users/my3raj") (html_url . "https://github.com/my3raj") (followers_url . "https://api.github.com/users/my3raj/followers") (following_url . "https://api.github.com/users/my3raj/following{/other_user}") (gists_url . "https://api.github.com/users/my3raj/gists{/gist_id}") (starred_url . "https://api.github.com/users/my3raj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/my3raj/subscriptions") (organizations_url . "https://api.github.com/users/my3raj/orgs") (repos_url . "https://api.github.com/users/my3raj/repos") (events_url . "https://api.github.com/users/my3raj/events{/privacy}") (received_events_url . "https://api.github.com/users/my3raj/received_events") (type . "User") (site_admin)))))) ((login . "my3raj") (id . 18277183) (avatar_url . "https://avatars2.githubusercontent.com/u/18277183?v=4") (gravatar_id . "") (url . "https://api.github.com/users/my3raj") (html_url . "https://github.com/my3raj") (followers_url . "https://api.github.com/users/my3raj/followers") (following_url . "https://api.github.com/users/my3raj/following{/other_user}") (gists_url . "https://api.github.com/users/my3raj/gists{/gist_id}") (starred_url . "https://api.github.com/users/my3raj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/my3raj/subscriptions") (organizations_url . "https://api.github.com/users/my3raj/orgs") (repos_url . "https://api.github.com/users/my3raj/repos") (events_url . "https://api.github.com/users/my3raj/events{/privacy}") (received_events_url . "https://api.github.com/users/my3raj/received_events") (type . "User") (site_admin) (name . "Mythri Raj") (company) (blog . "") (location) (email . "mraj@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-04-05T03:49:47Z") (updated_at . "2017-11-07T06:50:49Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ashishagg") (id . 4974230) (avatar_url . "https://avatars3.githubusercontent.com/u/4974230?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishagg") (html_url . "https://github.com/ashishagg") (followers_url . "https://api.github.com/users/ashishagg/followers") (following_url . "https://api.github.com/users/ashishagg/following{/other_user}") (gists_url . "https://api.github.com/users/ashishagg/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishagg/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishagg/subscriptions") (organizations_url . "https://api.github.com/users/ashishagg/orgs") (repos_url . "https://api.github.com/users/ashishagg/repos") (events_url . "https://api.github.com/users/ashishagg/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishagg/received_events") (type . "User") (site_admin)))))) ((login . "ashishagg") (id . 4974230) (avatar_url . "https://avatars3.githubusercontent.com/u/4974230?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishagg") (html_url . "https://github.com/ashishagg") (followers_url . "https://api.github.com/users/ashishagg/followers") (following_url . "https://api.github.com/users/ashishagg/following{/other_user}") (gists_url . "https://api.github.com/users/ashishagg/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishagg/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishagg/subscriptions") (organizations_url . "https://api.github.com/users/ashishagg/orgs") (repos_url . "https://api.github.com/users/ashishagg/repos") (events_url . "https://api.github.com/users/ashishagg/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishagg/received_events") (type . "User") (site_admin) (name . "Ashish Aggarwal") (company . "Expedia") (blog . "") (location) (email . "asaggarwal@expedia.com") (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2013-07-09T14:39:33Z") (updated_at . "2018-01-12T14:16:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jeremyscully") (id . 5140906) (avatar_url . "https://avatars0.githubusercontent.com/u/5140906?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jeremyscully") (html_url . "https://github.com/jeremyscully") (followers_url . "https://api.github.com/users/jeremyscully/followers") (following_url . "https://api.github.com/users/jeremyscully/following{/other_user}") (gists_url . "https://api.github.com/users/jeremyscully/gists{/gist_id}") (starred_url . "https://api.github.com/users/jeremyscully/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jeremyscully/subscriptions") (organizations_url . "https://api.github.com/users/jeremyscully/orgs") (repos_url . "https://api.github.com/users/jeremyscully/repos") (events_url . "https://api.github.com/users/jeremyscully/events{/privacy}") (received_events_url . "https://api.github.com/users/jeremyscully/received_events") (type . "User") (site_admin)))))) ((login . "jeremyscully") (id . 5140906) (avatar_url . "https://avatars0.githubusercontent.com/u/5140906?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jeremyscully") (html_url . "https://github.com/jeremyscully") (followers_url . "https://api.github.com/users/jeremyscully/followers") (following_url . "https://api.github.com/users/jeremyscully/following{/other_user}") (gists_url . "https://api.github.com/users/jeremyscully/gists{/gist_id}") (starred_url . "https://api.github.com/users/jeremyscully/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jeremyscully/subscriptions") (organizations_url . "https://api.github.com/users/jeremyscully/orgs") (repos_url . "https://api.github.com/users/jeremyscully/repos") (events_url . "https://api.github.com/users/jeremyscully/events{/privacy}") (received_events_url . "https://api.github.com/users/jeremyscully/received_events") (type . "User") (site_admin) (name . "jeremyscully") (company) (blog . "") (location) (email . "jeremys@expedia.com") (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-08-01T18:30:12Z") (updated_at . "2017-11-30T17:23:13Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rirossi") (id . 16587511) (avatar_url . "https://avatars3.githubusercontent.com/u/16587511?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rirossi") (html_url . "https://github.com/rirossi") (followers_url . "https://api.github.com/users/rirossi/followers") (following_url . "https://api.github.com/users/rirossi/following{/other_user}") (gists_url . "https://api.github.com/users/rirossi/gists{/gist_id}") (starred_url . "https://api.github.com/users/rirossi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rirossi/subscriptions") (organizations_url . "https://api.github.com/users/rirossi/orgs") (repos_url . "https://api.github.com/users/rirossi/repos") (events_url . "https://api.github.com/users/rirossi/events{/privacy}") (received_events_url . "https://api.github.com/users/rirossi/received_events") (type . "User") (site_admin)))))) ((login . "rirossi") (id . 16587511) (avatar_url . "https://avatars3.githubusercontent.com/u/16587511?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rirossi") (html_url . "https://github.com/rirossi") (followers_url . "https://api.github.com/users/rirossi/followers") (following_url . "https://api.github.com/users/rirossi/following{/other_user}") (gists_url . "https://api.github.com/users/rirossi/gists{/gist_id}") (starred_url . "https://api.github.com/users/rirossi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rirossi/subscriptions") (organizations_url . "https://api.github.com/users/rirossi/orgs") (repos_url . "https://api.github.com/users/rirossi/repos") (events_url . "https://api.github.com/users/rirossi/events{/privacy}") (received_events_url . "https://api.github.com/users/rirossi/received_events") (type . "User") (site_admin) (name . "rirossi") (company . "Expedia") (blog . "") (location . "Sydney, Australia") (email . "rirossi@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2016-01-07T04:57:54Z") (updated_at . "2017-11-02T23:31:42Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEaneparaczki") (id . 19188570) (avatar_url . "https://avatars2.githubusercontent.com/u/19188570?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEaneparaczki") (html_url . "https://github.com/EXPEaneparaczki") (followers_url . "https://api.github.com/users/EXPEaneparaczki/followers") (following_url . "https://api.github.com/users/EXPEaneparaczki/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEaneparaczki/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEaneparaczki/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEaneparaczki/subscriptions") (organizations_url . "https://api.github.com/users/EXPEaneparaczki/orgs") (repos_url . "https://api.github.com/users/EXPEaneparaczki/repos") (events_url . "https://api.github.com/users/EXPEaneparaczki/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEaneparaczki/received_events") (type . "User") (site_admin)))))) ((login . "EXPEaneparaczki") (id . 19188570) (avatar_url . "https://avatars2.githubusercontent.com/u/19188570?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEaneparaczki") (html_url . "https://github.com/EXPEaneparaczki") (followers_url . "https://api.github.com/users/EXPEaneparaczki/followers") (following_url . "https://api.github.com/users/EXPEaneparaczki/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEaneparaczki/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEaneparaczki/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEaneparaczki/subscriptions") (organizations_url . "https://api.github.com/users/EXPEaneparaczki/orgs") (repos_url . "https://api.github.com/users/EXPEaneparaczki/repos") (events_url . "https://api.github.com/users/EXPEaneparaczki/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEaneparaczki/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-aneparaczki@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-05-04T13:24:32Z") (updated_at . "2018-01-04T08:53:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "nitishagar") (id . 1592163) (avatar_url . "https://avatars0.githubusercontent.com/u/1592163?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nitishagar") (html_url . "https://github.com/nitishagar") (followers_url . "https://api.github.com/users/nitishagar/followers") (following_url . "https://api.github.com/users/nitishagar/following{/other_user}") (gists_url . "https://api.github.com/users/nitishagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/nitishagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nitishagar/subscriptions") (organizations_url . "https://api.github.com/users/nitishagar/orgs") (repos_url . "https://api.github.com/users/nitishagar/repos") (events_url . "https://api.github.com/users/nitishagar/events{/privacy}") (received_events_url . "https://api.github.com/users/nitishagar/received_events") (type . "User") (site_admin)))))) ((login . "nitishagar") (id . 1592163) (avatar_url . "https://avatars0.githubusercontent.com/u/1592163?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nitishagar") (html_url . "https://github.com/nitishagar") (followers_url . "https://api.github.com/users/nitishagar/followers") (following_url . "https://api.github.com/users/nitishagar/following{/other_user}") (gists_url . "https://api.github.com/users/nitishagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/nitishagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nitishagar/subscriptions") (organizations_url . "https://api.github.com/users/nitishagar/orgs") (repos_url . "https://api.github.com/users/nitishagar/repos") (events_url . "https://api.github.com/users/nitishagar/events{/privacy}") (received_events_url . "https://api.github.com/users/nitishagar/received_events") (type . "User") (site_admin) (name . "Nitish Agarwal") (company) (blog . "http://about.me/nitish_ag") (location) (email) (hireable . t) (bio) (public_repos . 7) (public_gists . 3) (followers . 0) (following . 0) (created_at . "2012-03-31T00:55:49Z") (updated_at . "2018-01-12T05:50:57Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "EXPEchdesai") (id . 15839628) (avatar_url . "https://avatars3.githubusercontent.com/u/15839628?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEchdesai") (html_url . "https://github.com/EXPEchdesai") (followers_url . "https://api.github.com/users/EXPEchdesai/followers") (following_url . "https://api.github.com/users/EXPEchdesai/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEchdesai/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEchdesai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEchdesai/subscriptions") (organizations_url . "https://api.github.com/users/EXPEchdesai/orgs") (repos_url . "https://api.github.com/users/EXPEchdesai/repos") (events_url . "https://api.github.com/users/EXPEchdesai/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEchdesai/received_events") (type . "User") (site_admin)))))) ((login . "EXPEchdesai") (id . 15839628) (avatar_url . "https://avatars3.githubusercontent.com/u/15839628?v=4") (gravatar_id . "") (url . "https://api.github.com/users/EXPEchdesai") (html_url . "https://github.com/EXPEchdesai") (followers_url . "https://api.github.com/users/EXPEchdesai/followers") (following_url . "https://api.github.com/users/EXPEchdesai/following{/other_user}") (gists_url . "https://api.github.com/users/EXPEchdesai/gists{/gist_id}") (starred_url . "https://api.github.com/users/EXPEchdesai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/EXPEchdesai/subscriptions") (organizations_url . "https://api.github.com/users/EXPEchdesai/orgs") (repos_url . "https://api.github.com/users/EXPEchdesai/repos") (events_url . "https://api.github.com/users/EXPEchdesai/events{/privacy}") (received_events_url . "https://api.github.com/users/EXPEchdesai/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "chdesai@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-11-13T21:44:39Z") (updated_at . "2017-11-02T00:07:50Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "exp-snatesan") (id . 4307447) (avatar_url . "https://avatars2.githubusercontent.com/u/4307447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-snatesan") (html_url . "https://github.com/exp-snatesan") (followers_url . "https://api.github.com/users/exp-snatesan/followers") (following_url . "https://api.github.com/users/exp-snatesan/following{/other_user}") (gists_url . "https://api.github.com/users/exp-snatesan/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-snatesan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-snatesan/subscriptions") (organizations_url . "https://api.github.com/users/exp-snatesan/orgs") (repos_url . "https://api.github.com/users/exp-snatesan/repos") (events_url . "https://api.github.com/users/exp-snatesan/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-snatesan/received_events") (type . "User") (site_admin)))))) ((login . "exp-snatesan") (id . 4307447) (avatar_url . "https://avatars2.githubusercontent.com/u/4307447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/exp-snatesan") (html_url . "https://github.com/exp-snatesan") (followers_url . "https://api.github.com/users/exp-snatesan/followers") (following_url . "https://api.github.com/users/exp-snatesan/following{/other_user}") (gists_url . "https://api.github.com/users/exp-snatesan/gists{/gist_id}") (starred_url . "https://api.github.com/users/exp-snatesan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/exp-snatesan/subscriptions") (organizations_url . "https://api.github.com/users/exp-snatesan/orgs") (repos_url . "https://api.github.com/users/exp-snatesan/repos") (events_url . "https://api.github.com/users/exp-snatesan/events{/privacy}") (received_events_url . "https://api.github.com/users/exp-snatesan/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-04-30T23:39:40Z") (updated_at . "2017-10-19T21:21:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "yanizhang") (id . 8484128) (avatar_url . "https://avatars0.githubusercontent.com/u/8484128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yanizhang") (html_url . "https://github.com/yanizhang") (followers_url . "https://api.github.com/users/yanizhang/followers") (following_url . "https://api.github.com/users/yanizhang/following{/other_user}") (gists_url . "https://api.github.com/users/yanizhang/gists{/gist_id}") (starred_url . "https://api.github.com/users/yanizhang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yanizhang/subscriptions") (organizations_url . "https://api.github.com/users/yanizhang/orgs") (repos_url . "https://api.github.com/users/yanizhang/repos") (events_url . "https://api.github.com/users/yanizhang/events{/privacy}") (received_events_url . "https://api.github.com/users/yanizhang/received_events") (type . "User") (site_admin)))))) ((login . "yanizhang") (id . 8484128) (avatar_url . "https://avatars0.githubusercontent.com/u/8484128?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yanizhang") (html_url . "https://github.com/yanizhang") (followers_url . "https://api.github.com/users/yanizhang/followers") (following_url . "https://api.github.com/users/yanizhang/following{/other_user}") (gists_url . "https://api.github.com/users/yanizhang/gists{/gist_id}") (starred_url . "https://api.github.com/users/yanizhang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yanizhang/subscriptions") (organizations_url . "https://api.github.com/users/yanizhang/orgs") (repos_url . "https://api.github.com/users/yanizhang/repos") (events_url . "https://api.github.com/users/yanizhang/events{/privacy}") (received_events_url . "https://api.github.com/users/yanizhang/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-08-18T21:14:03Z") (updated_at . "2016-05-16T22:30:59Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ruroy") (id . 7848133) (avatar_url . "https://avatars3.githubusercontent.com/u/7848133?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ruroy") (html_url . "https://github.com/ruroy") (followers_url . "https://api.github.com/users/ruroy/followers") (following_url . "https://api.github.com/users/ruroy/following{/other_user}") (gists_url . "https://api.github.com/users/ruroy/gists{/gist_id}") (starred_url . "https://api.github.com/users/ruroy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ruroy/subscriptions") (organizations_url . "https://api.github.com/users/ruroy/orgs") (repos_url . "https://api.github.com/users/ruroy/repos") (events_url . "https://api.github.com/users/ruroy/events{/privacy}") (received_events_url . "https://api.github.com/users/ruroy/received_events") (type . "User") (site_admin)))))) ((login . "ruroy") (id . 7848133) (avatar_url . "https://avatars3.githubusercontent.com/u/7848133?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ruroy") (html_url . "https://github.com/ruroy") (followers_url . "https://api.github.com/users/ruroy/followers") (following_url . "https://api.github.com/users/ruroy/following{/other_user}") (gists_url . "https://api.github.com/users/ruroy/gists{/gist_id}") (starred_url . "https://api.github.com/users/ruroy/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ruroy/subscriptions") (organizations_url . "https://api.github.com/users/ruroy/orgs") (repos_url . "https://api.github.com/users/ruroy/repos") (events_url . "https://api.github.com/users/ruroy/events{/privacy}") (received_events_url . "https://api.github.com/users/ruroy/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-06-10T10:33:51Z") (updated_at . "2017-08-29T13:43:06Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mroark-exp") (id . 16804850) (avatar_url . "https://avatars2.githubusercontent.com/u/16804850?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mroark-exp") (html_url . "https://github.com/mroark-exp") (followers_url . "https://api.github.com/users/mroark-exp/followers") (following_url . "https://api.github.com/users/mroark-exp/following{/other_user}") (gists_url . "https://api.github.com/users/mroark-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/mroark-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mroark-exp/subscriptions") (organizations_url . "https://api.github.com/users/mroark-exp/orgs") (repos_url . "https://api.github.com/users/mroark-exp/repos") (events_url . "https://api.github.com/users/mroark-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/mroark-exp/received_events") (type . "User") (site_admin)))))) ((login . "mroark-exp") (id . 16804850) (avatar_url . "https://avatars2.githubusercontent.com/u/16804850?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mroark-exp") (html_url . "https://github.com/mroark-exp") (followers_url . "https://api.github.com/users/mroark-exp/followers") (following_url . "https://api.github.com/users/mroark-exp/following{/other_user}") (gists_url . "https://api.github.com/users/mroark-exp/gists{/gist_id}") (starred_url . "https://api.github.com/users/mroark-exp/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mroark-exp/subscriptions") (organizations_url . "https://api.github.com/users/mroark-exp/orgs") (repos_url . "https://api.github.com/users/mroark-exp/repos") (events_url . "https://api.github.com/users/mroark-exp/events{/privacy}") (received_events_url . "https://api.github.com/users/mroark-exp/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-01-20T18:52:55Z") (updated_at . "2017-12-12T22:06:27Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "malonem") (id . 2077805) (avatar_url . "https://avatars1.githubusercontent.com/u/2077805?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malonem") (html_url . "https://github.com/malonem") (followers_url . "https://api.github.com/users/malonem/followers") (following_url . "https://api.github.com/users/malonem/following{/other_user}") (gists_url . "https://api.github.com/users/malonem/gists{/gist_id}") (starred_url . "https://api.github.com/users/malonem/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malonem/subscriptions") (organizations_url . "https://api.github.com/users/malonem/orgs") (repos_url . "https://api.github.com/users/malonem/repos") (events_url . "https://api.github.com/users/malonem/events{/privacy}") (received_events_url . "https://api.github.com/users/malonem/received_events") (type . "User") (site_admin)))))) ((login . "malonem") (id . 2077805) (avatar_url . "https://avatars1.githubusercontent.com/u/2077805?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malonem") (html_url . "https://github.com/malonem") (followers_url . "https://api.github.com/users/malonem/followers") (following_url . "https://api.github.com/users/malonem/following{/other_user}") (gists_url . "https://api.github.com/users/malonem/gists{/gist_id}") (starred_url . "https://api.github.com/users/malonem/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malonem/subscriptions") (organizations_url . "https://api.github.com/users/malonem/orgs") (repos_url . "https://api.github.com/users/malonem/repos") (events_url . "https://api.github.com/users/malonem/events{/privacy}") (received_events_url . "https://api.github.com/users/malonem/received_events") (type . "User") (site_admin) (name . "Mark Malone") (company) (blog . "") (location . "Chicago, Il") (email . "mmalone@expedia.com") (hireable) (bio) (public_repos . 9) (public_gists . 1) (followers . 3) (following . 1) (created_at . "2012-08-01T13:54:32Z") (updated_at . "2018-01-22T18:17:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kgolodets") (id . 17054091) (avatar_url . "https://avatars1.githubusercontent.com/u/17054091?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kgolodets") (html_url . "https://github.com/kgolodets") (followers_url . "https://api.github.com/users/kgolodets/followers") (following_url . "https://api.github.com/users/kgolodets/following{/other_user}") (gists_url . "https://api.github.com/users/kgolodets/gists{/gist_id}") (starred_url . "https://api.github.com/users/kgolodets/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kgolodets/subscriptions") (organizations_url . "https://api.github.com/users/kgolodets/orgs") (repos_url . "https://api.github.com/users/kgolodets/repos") (events_url . "https://api.github.com/users/kgolodets/events{/privacy}") (received_events_url . "https://api.github.com/users/kgolodets/received_events") (type . "User") (site_admin)))))) ((login . "kgolodets") (id . 17054091) (avatar_url . "https://avatars1.githubusercontent.com/u/17054091?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kgolodets") (html_url . "https://github.com/kgolodets") (followers_url . "https://api.github.com/users/kgolodets/followers") (following_url . "https://api.github.com/users/kgolodets/following{/other_user}") (gists_url . "https://api.github.com/users/kgolodets/gists{/gist_id}") (starred_url . "https://api.github.com/users/kgolodets/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kgolodets/subscriptions") (organizations_url . "https://api.github.com/users/kgolodets/orgs") (repos_url . "https://api.github.com/users/kgolodets/repos") (events_url . "https://api.github.com/users/kgolodets/events{/privacy}") (received_events_url . "https://api.github.com/users/kgolodets/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "kgolodets@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-02-03T21:20:29Z") (updated_at . "2016-04-07T06:24:48Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "aamitsingh") (id . 17641407) (avatar_url . "https://avatars2.githubusercontent.com/u/17641407?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aamitsingh") (html_url . "https://github.com/aamitsingh") (followers_url . "https://api.github.com/users/aamitsingh/followers") (following_url . "https://api.github.com/users/aamitsingh/following{/other_user}") (gists_url . "https://api.github.com/users/aamitsingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/aamitsingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aamitsingh/subscriptions") (organizations_url . "https://api.github.com/users/aamitsingh/orgs") (repos_url . "https://api.github.com/users/aamitsingh/repos") (events_url . "https://api.github.com/users/aamitsingh/events{/privacy}") (received_events_url . "https://api.github.com/users/aamitsingh/received_events") (type . "User") (site_admin)))))) ((login . "aamitsingh") (id . 17641407) (avatar_url . "https://avatars2.githubusercontent.com/u/17641407?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aamitsingh") (html_url . "https://github.com/aamitsingh") (followers_url . "https://api.github.com/users/aamitsingh/followers") (following_url . "https://api.github.com/users/aamitsingh/following{/other_user}") (gists_url . "https://api.github.com/users/aamitsingh/gists{/gist_id}") (starred_url . "https://api.github.com/users/aamitsingh/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aamitsingh/subscriptions") (organizations_url . "https://api.github.com/users/aamitsingh/orgs") (repos_url . "https://api.github.com/users/aamitsingh/repos") (events_url . "https://api.github.com/users/aamitsingh/events{/privacy}") (received_events_url . "https://api.github.com/users/aamitsingh/received_events") (type . "User") (site_admin) (name . "Amit Singh") (company) (blog . "") (location) (email . "a-amitsingh@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-03-04T10:50:10Z") (updated_at . "2018-01-09T10:26:18Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "kzmeyao") (id . 2180692) (avatar_url . "https://avatars2.githubusercontent.com/u/2180692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kzmeyao") (html_url . "https://github.com/kzmeyao") (followers_url . "https://api.github.com/users/kzmeyao/followers") (following_url . "https://api.github.com/users/kzmeyao/following{/other_user}") (gists_url . "https://api.github.com/users/kzmeyao/gists{/gist_id}") (starred_url . "https://api.github.com/users/kzmeyao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kzmeyao/subscriptions") (organizations_url . "https://api.github.com/users/kzmeyao/orgs") (repos_url . "https://api.github.com/users/kzmeyao/repos") (events_url . "https://api.github.com/users/kzmeyao/events{/privacy}") (received_events_url . "https://api.github.com/users/kzmeyao/received_events") (type . "User") (site_admin)))))) ((login . "kzmeyao") (id . 2180692) (avatar_url . "https://avatars2.githubusercontent.com/u/2180692?v=4") (gravatar_id . "") (url . "https://api.github.com/users/kzmeyao") (html_url . "https://github.com/kzmeyao") (followers_url . "https://api.github.com/users/kzmeyao/followers") (following_url . "https://api.github.com/users/kzmeyao/following{/other_user}") (gists_url . "https://api.github.com/users/kzmeyao/gists{/gist_id}") (starred_url . "https://api.github.com/users/kzmeyao/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/kzmeyao/subscriptions") (organizations_url . "https://api.github.com/users/kzmeyao/orgs") (repos_url . "https://api.github.com/users/kzmeyao/repos") (events_url . "https://api.github.com/users/kzmeyao/events{/privacy}") (received_events_url . "https://api.github.com/users/kzmeyao/received_events") (type . "User") (site_admin) (name . "Kevin Yao") (company . "Expedia") (blog . "") (location . "Bay Area") (email . "kzmeyao@gmail.com") (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2012-08-20T01:44:24Z") (updated_at . "2017-08-14T19:44:19Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "AnujGadhave") (id . 14205605) (avatar_url . "https://avatars2.githubusercontent.com/u/14205605?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AnujGadhave") (html_url . "https://github.com/AnujGadhave") (followers_url . "https://api.github.com/users/AnujGadhave/followers") (following_url . "https://api.github.com/users/AnujGadhave/following{/other_user}") (gists_url . "https://api.github.com/users/AnujGadhave/gists{/gist_id}") (starred_url . "https://api.github.com/users/AnujGadhave/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AnujGadhave/subscriptions") (organizations_url . "https://api.github.com/users/AnujGadhave/orgs") (repos_url . "https://api.github.com/users/AnujGadhave/repos") (events_url . "https://api.github.com/users/AnujGadhave/events{/privacy}") (received_events_url . "https://api.github.com/users/AnujGadhave/received_events") (type . "User") (site_admin)))))) ((login . "AnujGadhave") (id . 14205605) (avatar_url . "https://avatars2.githubusercontent.com/u/14205605?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AnujGadhave") (html_url . "https://github.com/AnujGadhave") (followers_url . "https://api.github.com/users/AnujGadhave/followers") (following_url . "https://api.github.com/users/AnujGadhave/following{/other_user}") (gists_url . "https://api.github.com/users/AnujGadhave/gists{/gist_id}") (starred_url . "https://api.github.com/users/AnujGadhave/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AnujGadhave/subscriptions") (organizations_url . "https://api.github.com/users/AnujGadhave/orgs") (repos_url . "https://api.github.com/users/AnujGadhave/repos") (events_url . "https://api.github.com/users/AnujGadhave/events{/privacy}") (received_events_url . "https://api.github.com/users/AnujGadhave/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "agadhave@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-09-09T19:53:41Z") (updated_at . "2018-01-16T22:17:46Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ankitsjain22") (id . 17722121) (avatar_url . "https://avatars1.githubusercontent.com/u/17722121?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankitsjain22") (html_url . "https://github.com/ankitsjain22") (followers_url . "https://api.github.com/users/ankitsjain22/followers") (following_url . "https://api.github.com/users/ankitsjain22/following{/other_user}") (gists_url . "https://api.github.com/users/ankitsjain22/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankitsjain22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankitsjain22/subscriptions") (organizations_url . "https://api.github.com/users/ankitsjain22/orgs") (repos_url . "https://api.github.com/users/ankitsjain22/repos") (events_url . "https://api.github.com/users/ankitsjain22/events{/privacy}") (received_events_url . "https://api.github.com/users/ankitsjain22/received_events") (type . "User") (site_admin)))))) ((login . "ankitsjain22") (id . 17722121) (avatar_url . "https://avatars1.githubusercontent.com/u/17722121?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankitsjain22") (html_url . "https://github.com/ankitsjain22") (followers_url . "https://api.github.com/users/ankitsjain22/followers") (following_url . "https://api.github.com/users/ankitsjain22/following{/other_user}") (gists_url . "https://api.github.com/users/ankitsjain22/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankitsjain22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankitsjain22/subscriptions") (organizations_url . "https://api.github.com/users/ankitsjain22/orgs") (repos_url . "https://api.github.com/users/ankitsjain22/repos") (events_url . "https://api.github.com/users/ankitsjain22/events{/privacy}") (received_events_url . "https://api.github.com/users/ankitsjain22/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "ankitjain@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-03-08T10:44:17Z") (updated_at . "2017-03-28T11:14:20Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mfeibig") (id . 18014422) (avatar_url . "https://avatars3.githubusercontent.com/u/18014422?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mfeibig") (html_url . "https://github.com/mfeibig") (followers_url . "https://api.github.com/users/mfeibig/followers") (following_url . "https://api.github.com/users/mfeibig/following{/other_user}") (gists_url . "https://api.github.com/users/mfeibig/gists{/gist_id}") (starred_url . "https://api.github.com/users/mfeibig/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mfeibig/subscriptions") (organizations_url . "https://api.github.com/users/mfeibig/orgs") (repos_url . "https://api.github.com/users/mfeibig/repos") (events_url . "https://api.github.com/users/mfeibig/events{/privacy}") (received_events_url . "https://api.github.com/users/mfeibig/received_events") (type . "User") (site_admin)))))) ((login . "mfeibig") (id . 18014422) (avatar_url . "https://avatars3.githubusercontent.com/u/18014422?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mfeibig") (html_url . "https://github.com/mfeibig") (followers_url . "https://api.github.com/users/mfeibig/followers") (following_url . "https://api.github.com/users/mfeibig/following{/other_user}") (gists_url . "https://api.github.com/users/mfeibig/gists{/gist_id}") (starred_url . "https://api.github.com/users/mfeibig/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mfeibig/subscriptions") (organizations_url . "https://api.github.com/users/mfeibig/orgs") (repos_url . "https://api.github.com/users/mfeibig/repos") (events_url . "https://api.github.com/users/mfeibig/events{/privacy}") (received_events_url . "https://api.github.com/users/mfeibig/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "a-mfeibig@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-03-22T19:03:40Z") (updated_at . "2016-03-22T20:12:09Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "lalwanirenu") (id . 16724929) (avatar_url . "https://avatars0.githubusercontent.com/u/16724929?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lalwanirenu") (html_url . "https://github.com/lalwanirenu") (followers_url . "https://api.github.com/users/lalwanirenu/followers") (following_url . "https://api.github.com/users/lalwanirenu/following{/other_user}") (gists_url . "https://api.github.com/users/lalwanirenu/gists{/gist_id}") (starred_url . "https://api.github.com/users/lalwanirenu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lalwanirenu/subscriptions") (organizations_url . "https://api.github.com/users/lalwanirenu/orgs") (repos_url . "https://api.github.com/users/lalwanirenu/repos") (events_url . "https://api.github.com/users/lalwanirenu/events{/privacy}") (received_events_url . "https://api.github.com/users/lalwanirenu/received_events") (type . "User") (site_admin)))))) ((login . "lalwanirenu") (id . 16724929) (avatar_url . "https://avatars0.githubusercontent.com/u/16724929?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lalwanirenu") (html_url . "https://github.com/lalwanirenu") (followers_url . "https://api.github.com/users/lalwanirenu/followers") (following_url . "https://api.github.com/users/lalwanirenu/following{/other_user}") (gists_url . "https://api.github.com/users/lalwanirenu/gists{/gist_id}") (starred_url . "https://api.github.com/users/lalwanirenu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lalwanirenu/subscriptions") (organizations_url . "https://api.github.com/users/lalwanirenu/orgs") (repos_url . "https://api.github.com/users/lalwanirenu/repos") (events_url . "https://api.github.com/users/lalwanirenu/events{/privacy}") (received_events_url . "https://api.github.com/users/lalwanirenu/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "rlalwani@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-01-15T19:47:09Z") (updated_at . "2016-03-17T19:27:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vnamuduri") (id . 2289444) (avatar_url . "https://avatars1.githubusercontent.com/u/2289444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vnamuduri") (html_url . "https://github.com/vnamuduri") (followers_url . "https://api.github.com/users/vnamuduri/followers") (following_url . "https://api.github.com/users/vnamuduri/following{/other_user}") (gists_url . "https://api.github.com/users/vnamuduri/gists{/gist_id}") (starred_url . "https://api.github.com/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vnamuduri/subscriptions") (organizations_url . "https://api.github.com/users/vnamuduri/orgs") (repos_url . "https://api.github.com/users/vnamuduri/repos") (events_url . "https://api.github.com/users/vnamuduri/events{/privacy}") (received_events_url . "https://api.github.com/users/vnamuduri/received_events") (type . "User") (site_admin)))))) ((login . "vnamuduri") (id . 2289444) (avatar_url . "https://avatars1.githubusercontent.com/u/2289444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vnamuduri") (html_url . "https://github.com/vnamuduri") (followers_url . "https://api.github.com/users/vnamuduri/followers") (following_url . "https://api.github.com/users/vnamuduri/following{/other_user}") (gists_url . "https://api.github.com/users/vnamuduri/gists{/gist_id}") (starred_url . "https://api.github.com/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vnamuduri/subscriptions") (organizations_url . "https://api.github.com/users/vnamuduri/orgs") (repos_url . "https://api.github.com/users/vnamuduri/repos") (events_url . "https://api.github.com/users/vnamuduri/events{/privacy}") (received_events_url . "https://api.github.com/users/vnamuduri/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2012-09-06T04:06:38Z") (updated_at . "2017-06-27T20:35:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "manukbenjamin") (id . 17172207) (avatar_url . "https://avatars3.githubusercontent.com/u/17172207?v=4") (gravatar_id . "") (url . "https://api.github.com/users/manukbenjamin") (html_url . "https://github.com/manukbenjamin") (followers_url . "https://api.github.com/users/manukbenjamin/followers") (following_url . "https://api.github.com/users/manukbenjamin/following{/other_user}") (gists_url . "https://api.github.com/users/manukbenjamin/gists{/gist_id}") (starred_url . "https://api.github.com/users/manukbenjamin/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/manukbenjamin/subscriptions") (organizations_url . "https://api.github.com/users/manukbenjamin/orgs") (repos_url . "https://api.github.com/users/manukbenjamin/repos") (events_url . "https://api.github.com/users/manukbenjamin/events{/privacy}") (received_events_url . "https://api.github.com/users/manukbenjamin/received_events") (type . "User") (site_admin)))))) ((login . "manukbenjamin") (id . 17172207) (avatar_url . "https://avatars3.githubusercontent.com/u/17172207?v=4") (gravatar_id . "") (url . "https://api.github.com/users/manukbenjamin") (html_url . "https://github.com/manukbenjamin") (followers_url . "https://api.github.com/users/manukbenjamin/followers") (following_url . "https://api.github.com/users/manukbenjamin/following{/other_user}") (gists_url . "https://api.github.com/users/manukbenjamin/gists{/gist_id}") (starred_url . "https://api.github.com/users/manukbenjamin/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/manukbenjamin/subscriptions") (organizations_url . "https://api.github.com/users/manukbenjamin/orgs") (repos_url . "https://api.github.com/users/manukbenjamin/repos") (events_url . "https://api.github.com/users/manukbenjamin/events{/privacy}") (received_events_url . "https://api.github.com/users/manukbenjamin/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "v-mbenjamin@egencia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2016-02-11T04:58:49Z") (updated_at . "2017-11-17T05:34:20Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mintekhab") (id . 4941055) (avatar_url . "https://avatars2.githubusercontent.com/u/4941055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mintekhab") (html_url . "https://github.com/mintekhab") (followers_url . "https://api.github.com/users/mintekhab/followers") (following_url . "https://api.github.com/users/mintekhab/following{/other_user}") (gists_url . "https://api.github.com/users/mintekhab/gists{/gist_id}") (starred_url . "https://api.github.com/users/mintekhab/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mintekhab/subscriptions") (organizations_url . "https://api.github.com/users/mintekhab/orgs") (repos_url . "https://api.github.com/users/mintekhab/repos") (events_url . "https://api.github.com/users/mintekhab/events{/privacy}") (received_events_url . "https://api.github.com/users/mintekhab/received_events") (type . "User") (site_admin)))))) ((login . "mintekhab") (id . 4941055) (avatar_url . "https://avatars2.githubusercontent.com/u/4941055?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mintekhab") (html_url . "https://github.com/mintekhab") (followers_url . "https://api.github.com/users/mintekhab/followers") (following_url . "https://api.github.com/users/mintekhab/following{/other_user}") (gists_url . "https://api.github.com/users/mintekhab/gists{/gist_id}") (starred_url . "https://api.github.com/users/mintekhab/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mintekhab/subscriptions") (organizations_url . "https://api.github.com/users/mintekhab/orgs") (repos_url . "https://api.github.com/users/mintekhab/repos") (events_url . "https://api.github.com/users/mintekhab/events{/privacy}") (received_events_url . "https://api.github.com/users/mintekhab/received_events") (type . "User") (site_admin) (name . "Mohammed Intekhab") (company . "Expedia") (blog . "") (location . "Gurgaon") (email) (hireable) (bio) (public_repos . 3) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-07-04T13:53:15Z") (updated_at . "2017-11-07T05:41:42Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ashishsaxena86") (id . 11831126) (avatar_url . "https://avatars3.githubusercontent.com/u/11831126?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishsaxena86") (html_url . "https://github.com/ashishsaxena86") (followers_url . "https://api.github.com/users/ashishsaxena86/followers") (following_url . "https://api.github.com/users/ashishsaxena86/following{/other_user}") (gists_url . "https://api.github.com/users/ashishsaxena86/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishsaxena86/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishsaxena86/subscriptions") (organizations_url . "https://api.github.com/users/ashishsaxena86/orgs") (repos_url . "https://api.github.com/users/ashishsaxena86/repos") (events_url . "https://api.github.com/users/ashishsaxena86/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishsaxena86/received_events") (type . "User") (site_admin)))))) ((login . "ashishsaxena86") (id . 11831126) (avatar_url . "https://avatars3.githubusercontent.com/u/11831126?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ashishsaxena86") (html_url . "https://github.com/ashishsaxena86") (followers_url . "https://api.github.com/users/ashishsaxena86/followers") (following_url . "https://api.github.com/users/ashishsaxena86/following{/other_user}") (gists_url . "https://api.github.com/users/ashishsaxena86/gists{/gist_id}") (starred_url . "https://api.github.com/users/ashishsaxena86/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ashishsaxena86/subscriptions") (organizations_url . "https://api.github.com/users/ashishsaxena86/orgs") (repos_url . "https://api.github.com/users/ashishsaxena86/repos") (events_url . "https://api.github.com/users/ashishsaxena86/events{/privacy}") (received_events_url . "https://api.github.com/users/ashishsaxena86/received_events") (type . "User") (site_admin) (name . "Ashish Saxena") (company) (blog . "") (location) (email . "assaxena@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-04-07T07:33:21Z") (updated_at . "2018-01-22T05:20:51Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "a-fgingras") (id . 12202894) (avatar_url . "https://avatars1.githubusercontent.com/u/12202894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/a-fgingras") (html_url . "https://github.com/a-fgingras") (followers_url . "https://api.github.com/users/a-fgingras/followers") (following_url . "https://api.github.com/users/a-fgingras/following{/other_user}") (gists_url . "https://api.github.com/users/a-fgingras/gists{/gist_id}") (starred_url . "https://api.github.com/users/a-fgingras/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/a-fgingras/subscriptions") (organizations_url . "https://api.github.com/users/a-fgingras/orgs") (repos_url . "https://api.github.com/users/a-fgingras/repos") (events_url . "https://api.github.com/users/a-fgingras/events{/privacy}") (received_events_url . "https://api.github.com/users/a-fgingras/received_events") (type . "User") (site_admin)))))) ((login . "a-fgingras") (id . 12202894) (avatar_url . "https://avatars1.githubusercontent.com/u/12202894?v=4") (gravatar_id . "") (url . "https://api.github.com/users/a-fgingras") (html_url . "https://github.com/a-fgingras") (followers_url . "https://api.github.com/users/a-fgingras/followers") (following_url . "https://api.github.com/users/a-fgingras/following{/other_user}") (gists_url . "https://api.github.com/users/a-fgingras/gists{/gist_id}") (starred_url . "https://api.github.com/users/a-fgingras/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/a-fgingras/subscriptions") (organizations_url . "https://api.github.com/users/a-fgingras/orgs") (repos_url . "https://api.github.com/users/a-fgingras/repos") (events_url . "https://api.github.com/users/a-fgingras/events{/privacy}") (received_events_url . "https://api.github.com/users/a-fgingras/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-05-01T19:47:43Z") (updated_at . "2016-03-17T16:24:08Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "NehaSood") (id . 5012419) (avatar_url . "https://avatars0.githubusercontent.com/u/5012419?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NehaSood") (html_url . "https://github.com/NehaSood") (followers_url . "https://api.github.com/users/NehaSood/followers") (following_url . "https://api.github.com/users/NehaSood/following{/other_user}") (gists_url . "https://api.github.com/users/NehaSood/gists{/gist_id}") (starred_url . "https://api.github.com/users/NehaSood/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NehaSood/subscriptions") (organizations_url . "https://api.github.com/users/NehaSood/orgs") (repos_url . "https://api.github.com/users/NehaSood/repos") (events_url . "https://api.github.com/users/NehaSood/events{/privacy}") (received_events_url . "https://api.github.com/users/NehaSood/received_events") (type . "User") (site_admin)))))) ((login . "NehaSood") (id . 5012419) (avatar_url . "https://avatars0.githubusercontent.com/u/5012419?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NehaSood") (html_url . "https://github.com/NehaSood") (followers_url . "https://api.github.com/users/NehaSood/followers") (following_url . "https://api.github.com/users/NehaSood/following{/other_user}") (gists_url . "https://api.github.com/users/NehaSood/gists{/gist_id}") (starred_url . "https://api.github.com/users/NehaSood/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NehaSood/subscriptions") (organizations_url . "https://api.github.com/users/NehaSood/orgs") (repos_url . "https://api.github.com/users/NehaSood/repos") (events_url . "https://api.github.com/users/NehaSood/events{/privacy}") (received_events_url . "https://api.github.com/users/NehaSood/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-07-15T10:38:54Z") (updated_at . "2016-11-21T04:33:24Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "abanna") (id . 1229639) (avatar_url . "https://avatars2.githubusercontent.com/u/1229639?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abanna") (html_url . "https://github.com/abanna") (followers_url . "https://api.github.com/users/abanna/followers") (following_url . "https://api.github.com/users/abanna/following{/other_user}") (gists_url . "https://api.github.com/users/abanna/gists{/gist_id}") (starred_url . "https://api.github.com/users/abanna/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abanna/subscriptions") (organizations_url . "https://api.github.com/users/abanna/orgs") (repos_url . "https://api.github.com/users/abanna/repos") (events_url . "https://api.github.com/users/abanna/events{/privacy}") (received_events_url . "https://api.github.com/users/abanna/received_events") (type . "User") (site_admin)))))) ((login . "abanna") (id . 1229639) (avatar_url . "https://avatars2.githubusercontent.com/u/1229639?v=4") (gravatar_id . "") (url . "https://api.github.com/users/abanna") (html_url . "https://github.com/abanna") (followers_url . "https://api.github.com/users/abanna/followers") (following_url . "https://api.github.com/users/abanna/following{/other_user}") (gists_url . "https://api.github.com/users/abanna/gists{/gist_id}") (starred_url . "https://api.github.com/users/abanna/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/abanna/subscriptions") (organizations_url . "https://api.github.com/users/abanna/orgs") (repos_url . "https://api.github.com/users/abanna/repos") (events_url . "https://api.github.com/users/abanna/events{/privacy}") (received_events_url . "https://api.github.com/users/abanna/received_events") (type . "User") (site_admin) (name . "Alex Banna") (company . "Expedia") (blog . "") (location . "Seattle, WA") (email . "alexanderbanna@gmail.com") (hireable) (bio) (public_repos . 26) (public_gists . 0) (followers . 9) (following . 12) (created_at . "2011-11-30T01:38:54Z") (updated_at . "2018-01-08T19:50:17Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "nhourani") (id . 9368044) (avatar_url . "https://avatars0.githubusercontent.com/u/9368044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nhourani") (html_url . "https://github.com/nhourani") (followers_url . "https://api.github.com/users/nhourani/followers") (following_url . "https://api.github.com/users/nhourani/following{/other_user}") (gists_url . "https://api.github.com/users/nhourani/gists{/gist_id}") (starred_url . "https://api.github.com/users/nhourani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nhourani/subscriptions") (organizations_url . "https://api.github.com/users/nhourani/orgs") (repos_url . "https://api.github.com/users/nhourani/repos") (events_url . "https://api.github.com/users/nhourani/events{/privacy}") (received_events_url . "https://api.github.com/users/nhourani/received_events") (type . "User") (site_admin)))))) ((login . "nhourani") (id . 9368044) (avatar_url . "https://avatars0.githubusercontent.com/u/9368044?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nhourani") (html_url . "https://github.com/nhourani") (followers_url . "https://api.github.com/users/nhourani/followers") (following_url . "https://api.github.com/users/nhourani/following{/other_user}") (gists_url . "https://api.github.com/users/nhourani/gists{/gist_id}") (starred_url . "https://api.github.com/users/nhourani/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nhourani/subscriptions") (organizations_url . "https://api.github.com/users/nhourani/orgs") (repos_url . "https://api.github.com/users/nhourani/repos") (events_url . "https://api.github.com/users/nhourani/events{/privacy}") (received_events_url . "https://api.github.com/users/nhourani/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email . "nhourani@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-10-23T14:42:14Z") (updated_at . "2017-10-27T18:53:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vijaykrishnagit") (id . 8262440) (avatar_url . "https://avatars1.githubusercontent.com/u/8262440?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vijaykrishnagit") (html_url . "https://github.com/vijaykrishnagit") (followers_url . "https://api.github.com/users/vijaykrishnagit/followers") (following_url . "https://api.github.com/users/vijaykrishnagit/following{/other_user}") (gists_url . "https://api.github.com/users/vijaykrishnagit/gists{/gist_id}") (starred_url . "https://api.github.com/users/vijaykrishnagit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vijaykrishnagit/subscriptions") (organizations_url . "https://api.github.com/users/vijaykrishnagit/orgs") (repos_url . "https://api.github.com/users/vijaykrishnagit/repos") (events_url . "https://api.github.com/users/vijaykrishnagit/events{/privacy}") (received_events_url . "https://api.github.com/users/vijaykrishnagit/received_events") (type . "User") (site_admin)))))) ((login . "vijaykrishnagit") (id . 8262440) (avatar_url . "https://avatars1.githubusercontent.com/u/8262440?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vijaykrishnagit") (html_url . "https://github.com/vijaykrishnagit") (followers_url . "https://api.github.com/users/vijaykrishnagit/followers") (following_url . "https://api.github.com/users/vijaykrishnagit/following{/other_user}") (gists_url . "https://api.github.com/users/vijaykrishnagit/gists{/gist_id}") (starred_url . "https://api.github.com/users/vijaykrishnagit/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vijaykrishnagit/subscriptions") (organizations_url . "https://api.github.com/users/vijaykrishnagit/orgs") (repos_url . "https://api.github.com/users/vijaykrishnagit/repos") (events_url . "https://api.github.com/users/vijaykrishnagit/events{/privacy}") (received_events_url . "https://api.github.com/users/vijaykrishnagit/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-07-25T00:31:51Z") (updated_at . "2017-01-24T00:10:10Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "JamesMcQueen") (id . 769547) (avatar_url . "https://avatars2.githubusercontent.com/u/769547?v=4") (gravatar_id . "") (url . "https://api.github.com/users/JamesMcQueen") (html_url . "https://github.com/JamesMcQueen") (followers_url . "https://api.github.com/users/JamesMcQueen/followers") (following_url . "https://api.github.com/users/JamesMcQueen/following{/other_user}") (gists_url . "https://api.github.com/users/JamesMcQueen/gists{/gist_id}") (starred_url . "https://api.github.com/users/JamesMcQueen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/JamesMcQueen/subscriptions") (organizations_url . "https://api.github.com/users/JamesMcQueen/orgs") (repos_url . "https://api.github.com/users/JamesMcQueen/repos") (events_url . "https://api.github.com/users/JamesMcQueen/events{/privacy}") (received_events_url . "https://api.github.com/users/JamesMcQueen/received_events") (type . "User") (site_admin)))))) ((login . "JamesMcQueen") (id . 769547) (avatar_url . "https://avatars2.githubusercontent.com/u/769547?v=4") (gravatar_id . "") (url . "https://api.github.com/users/JamesMcQueen") (html_url . "https://github.com/JamesMcQueen") (followers_url . "https://api.github.com/users/JamesMcQueen/followers") (following_url . "https://api.github.com/users/JamesMcQueen/following{/other_user}") (gists_url . "https://api.github.com/users/JamesMcQueen/gists{/gist_id}") (starred_url . "https://api.github.com/users/JamesMcQueen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/JamesMcQueen/subscriptions") (organizations_url . "https://api.github.com/users/JamesMcQueen/orgs") (repos_url . "https://api.github.com/users/JamesMcQueen/repos") (events_url . "https://api.github.com/users/JamesMcQueen/events{/privacy}") (received_events_url . "https://api.github.com/users/JamesMcQueen/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2011-05-05T07:54:10Z") (updated_at . "2017-12-11T17:48:56Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "AayushBhatnagar") (id . 3070451) (avatar_url . "https://avatars3.githubusercontent.com/u/3070451?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AayushBhatnagar") (html_url . "https://github.com/AayushBhatnagar") (followers_url . "https://api.github.com/users/AayushBhatnagar/followers") (following_url . "https://api.github.com/users/AayushBhatnagar/following{/other_user}") (gists_url . "https://api.github.com/users/AayushBhatnagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/AayushBhatnagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AayushBhatnagar/subscriptions") (organizations_url . "https://api.github.com/users/AayushBhatnagar/orgs") (repos_url . "https://api.github.com/users/AayushBhatnagar/repos") (events_url . "https://api.github.com/users/AayushBhatnagar/events{/privacy}") (received_events_url . "https://api.github.com/users/AayushBhatnagar/received_events") (type . "User") (site_admin)))))) ((login . "AayushBhatnagar") (id . 3070451) (avatar_url . "https://avatars3.githubusercontent.com/u/3070451?v=4") (gravatar_id . "") (url . "https://api.github.com/users/AayushBhatnagar") (html_url . "https://github.com/AayushBhatnagar") (followers_url . "https://api.github.com/users/AayushBhatnagar/followers") (following_url . "https://api.github.com/users/AayushBhatnagar/following{/other_user}") (gists_url . "https://api.github.com/users/AayushBhatnagar/gists{/gist_id}") (starred_url . "https://api.github.com/users/AayushBhatnagar/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/AayushBhatnagar/subscriptions") (organizations_url . "https://api.github.com/users/AayushBhatnagar/orgs") (repos_url . "https://api.github.com/users/AayushBhatnagar/repos") (events_url . "https://api.github.com/users/AayushBhatnagar/events{/privacy}") (received_events_url . "https://api.github.com/users/AayushBhatnagar/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 4) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2012-12-18T08:34:21Z") (updated_at . "2017-03-22T00:14:44Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "fsiddiqui") (id . 7432820) (avatar_url . "https://avatars2.githubusercontent.com/u/7432820?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fsiddiqui") (html_url . "https://github.com/fsiddiqui") (followers_url . "https://api.github.com/users/fsiddiqui/followers") (following_url . "https://api.github.com/users/fsiddiqui/following{/other_user}") (gists_url . "https://api.github.com/users/fsiddiqui/gists{/gist_id}") (starred_url . "https://api.github.com/users/fsiddiqui/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fsiddiqui/subscriptions") (organizations_url . "https://api.github.com/users/fsiddiqui/orgs") (repos_url . "https://api.github.com/users/fsiddiqui/repos") (events_url . "https://api.github.com/users/fsiddiqui/events{/privacy}") (received_events_url . "https://api.github.com/users/fsiddiqui/received_events") (type . "User") (site_admin)))))) ((login . "fsiddiqui") (id . 7432820) (avatar_url . "https://avatars2.githubusercontent.com/u/7432820?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fsiddiqui") (html_url . "https://github.com/fsiddiqui") (followers_url . "https://api.github.com/users/fsiddiqui/followers") (following_url . "https://api.github.com/users/fsiddiqui/following{/other_user}") (gists_url . "https://api.github.com/users/fsiddiqui/gists{/gist_id}") (starred_url . "https://api.github.com/users/fsiddiqui/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fsiddiqui/subscriptions") (organizations_url . "https://api.github.com/users/fsiddiqui/orgs") (repos_url . "https://api.github.com/users/fsiddiqui/repos") (events_url . "https://api.github.com/users/fsiddiqui/events{/privacy}") (received_events_url . "https://api.github.com/users/fsiddiqui/received_events") (type . "User") (site_admin) (name . "Fahim Siddiqui") (company . "Expedia Inc.") (blog . "") (location . "Bellevue, WA.") (email . "fsiddiqui@expedia.com") (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-04-28T20:00:39Z") (updated_at . "2017-08-24T16:44:14Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "hmachineni") (id . 6448209) (avatar_url . "https://avatars3.githubusercontent.com/u/6448209?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hmachineni") (html_url . "https://github.com/hmachineni") (followers_url . "https://api.github.com/users/hmachineni/followers") (following_url . "https://api.github.com/users/hmachineni/following{/other_user}") (gists_url . "https://api.github.com/users/hmachineni/gists{/gist_id}") (starred_url . "https://api.github.com/users/hmachineni/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hmachineni/subscriptions") (organizations_url . "https://api.github.com/users/hmachineni/orgs") (repos_url . "https://api.github.com/users/hmachineni/repos") (events_url . "https://api.github.com/users/hmachineni/events{/privacy}") (received_events_url . "https://api.github.com/users/hmachineni/received_events") (type . "User") (site_admin)))))) ((login . "hmachineni") (id . 6448209) (avatar_url . "https://avatars3.githubusercontent.com/u/6448209?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hmachineni") (html_url . "https://github.com/hmachineni") (followers_url . "https://api.github.com/users/hmachineni/followers") (following_url . "https://api.github.com/users/hmachineni/following{/other_user}") (gists_url . "https://api.github.com/users/hmachineni/gists{/gist_id}") (starred_url . "https://api.github.com/users/hmachineni/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hmachineni/subscriptions") (organizations_url . "https://api.github.com/users/hmachineni/orgs") (repos_url . "https://api.github.com/users/hmachineni/repos") (events_url . "https://api.github.com/users/hmachineni/events{/privacy}") (received_events_url . "https://api.github.com/users/hmachineni/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-01-20T07:23:22Z") (updated_at . "2017-08-09T17:36:18Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pallavi117") (id . 7627790) (avatar_url . "https://avatars2.githubusercontent.com/u/7627790?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pallavi117") (html_url . "https://github.com/pallavi117") (followers_url . "https://api.github.com/users/pallavi117/followers") (following_url . "https://api.github.com/users/pallavi117/following{/other_user}") (gists_url . "https://api.github.com/users/pallavi117/gists{/gist_id}") (starred_url . "https://api.github.com/users/pallavi117/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pallavi117/subscriptions") (organizations_url . "https://api.github.com/users/pallavi117/orgs") (repos_url . "https://api.github.com/users/pallavi117/repos") (events_url . "https://api.github.com/users/pallavi117/events{/privacy}") (received_events_url . "https://api.github.com/users/pallavi117/received_events") (type . "User") (site_admin)))))) ((login . "pallavi117") (id . 7627790) (avatar_url . "https://avatars2.githubusercontent.com/u/7627790?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pallavi117") (html_url . "https://github.com/pallavi117") (followers_url . "https://api.github.com/users/pallavi117/followers") (following_url . "https://api.github.com/users/pallavi117/following{/other_user}") (gists_url . "https://api.github.com/users/pallavi117/gists{/gist_id}") (starred_url . "https://api.github.com/users/pallavi117/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pallavi117/subscriptions") (organizations_url . "https://api.github.com/users/pallavi117/orgs") (repos_url . "https://api.github.com/users/pallavi117/repos") (events_url . "https://api.github.com/users/pallavi117/events{/privacy}") (received_events_url . "https://api.github.com/users/pallavi117/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-05-19T07:23:47Z") (updated_at . "2017-11-27T12:02:54Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "chkeagle") (id . 14943827) (avatar_url . "https://avatars0.githubusercontent.com/u/14943827?v=4") (gravatar_id . "") (url . "https://api.github.com/users/chkeagle") (html_url . "https://github.com/chkeagle") (followers_url . "https://api.github.com/users/chkeagle/followers") (following_url . "https://api.github.com/users/chkeagle/following{/other_user}") (gists_url . "https://api.github.com/users/chkeagle/gists{/gist_id}") (starred_url . "https://api.github.com/users/chkeagle/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/chkeagle/subscriptions") (organizations_url . "https://api.github.com/users/chkeagle/orgs") (repos_url . "https://api.github.com/users/chkeagle/repos") (events_url . "https://api.github.com/users/chkeagle/events{/privacy}") (received_events_url . "https://api.github.com/users/chkeagle/received_events") (type . "User") (site_admin)))))) ((login . "chkeagle") (id . 14943827) (avatar_url . "https://avatars0.githubusercontent.com/u/14943827?v=4") (gravatar_id . "") (url . "https://api.github.com/users/chkeagle") (html_url . "https://github.com/chkeagle") (followers_url . "https://api.github.com/users/chkeagle/followers") (following_url . "https://api.github.com/users/chkeagle/following{/other_user}") (gists_url . "https://api.github.com/users/chkeagle/gists{/gist_id}") (starred_url . "https://api.github.com/users/chkeagle/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/chkeagle/subscriptions") (organizations_url . "https://api.github.com/users/chkeagle/orgs") (repos_url . "https://api.github.com/users/chkeagle/repos") (events_url . "https://api.github.com/users/chkeagle/events{/privacy}") (received_events_url . "https://api.github.com/users/chkeagle/received_events") (type . "User") (site_admin) (name . "Charles Keagle") (company . "Expedia") (blog . "") (location . "Bellevue, WA") (email . "a-chkeagle@expedia.com") (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-10-02T16:39:19Z") (updated_at . "2016-02-28T12:00:19Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ankilam") (id . 10651103) (avatar_url . "https://avatars1.githubusercontent.com/u/10651103?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankilam") (html_url . "https://github.com/ankilam") (followers_url . "https://api.github.com/users/ankilam/followers") (following_url . "https://api.github.com/users/ankilam/following{/other_user}") (gists_url . "https://api.github.com/users/ankilam/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankilam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankilam/subscriptions") (organizations_url . "https://api.github.com/users/ankilam/orgs") (repos_url . "https://api.github.com/users/ankilam/repos") (events_url . "https://api.github.com/users/ankilam/events{/privacy}") (received_events_url . "https://api.github.com/users/ankilam/received_events") (type . "User") (site_admin)))))) ((login . "ankilam") (id . 10651103) (avatar_url . "https://avatars1.githubusercontent.com/u/10651103?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ankilam") (html_url . "https://github.com/ankilam") (followers_url . "https://api.github.com/users/ankilam/followers") (following_url . "https://api.github.com/users/ankilam/following{/other_user}") (gists_url . "https://api.github.com/users/ankilam/gists{/gist_id}") (starred_url . "https://api.github.com/users/ankilam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ankilam/subscriptions") (organizations_url . "https://api.github.com/users/ankilam/orgs") (repos_url . "https://api.github.com/users/ankilam/repos") (events_url . "https://api.github.com/users/ankilam/events{/privacy}") (received_events_url . "https://api.github.com/users/ankilam/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-01-22T09:11:05Z") (updated_at . "2016-03-21T05:23:01Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "androidfred") (id . 870822) (avatar_url . "https://avatars2.githubusercontent.com/u/870822?v=4") (gravatar_id . "") (url . "https://api.github.com/users/androidfred") (html_url . "https://github.com/androidfred") (followers_url . "https://api.github.com/users/androidfred/followers") (following_url . "https://api.github.com/users/androidfred/following{/other_user}") (gists_url . "https://api.github.com/users/androidfred/gists{/gist_id}") (starred_url . "https://api.github.com/users/androidfred/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/androidfred/subscriptions") (organizations_url . "https://api.github.com/users/androidfred/orgs") (repos_url . "https://api.github.com/users/androidfred/repos") (events_url . "https://api.github.com/users/androidfred/events{/privacy}") (received_events_url . "https://api.github.com/users/androidfred/received_events") (type . "User") (site_admin)))))) ((login . "androidfred") (id . 870822) (avatar_url . "https://avatars2.githubusercontent.com/u/870822?v=4") (gravatar_id . "") (url . "https://api.github.com/users/androidfred") (html_url . "https://github.com/androidfred") (followers_url . "https://api.github.com/users/androidfred/followers") (following_url . "https://api.github.com/users/androidfred/following{/other_user}") (gists_url . "https://api.github.com/users/androidfred/gists{/gist_id}") (starred_url . "https://api.github.com/users/androidfred/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/androidfred/subscriptions") (organizations_url . "https://api.github.com/users/androidfred/orgs") (repos_url . "https://api.github.com/users/androidfred/repos") (events_url . "https://api.github.com/users/androidfred/events{/privacy}") (received_events_url . "https://api.github.com/users/androidfred/received_events") (type . "User") (site_admin) (name . "Fredrik Friis") (company) (blog . "") (location) (email . "a-ffriis@expedia.com") (hireable) (bio) (public_repos . 10) (public_gists . 6) (followers . 4) (following . 11) (created_at . "2011-06-23T14:22:41Z") (updated_at . "2017-12-06T00:46:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tj2013") (id . 4505455) (avatar_url . "https://avatars1.githubusercontent.com/u/4505455?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tj2013") (html_url . "https://github.com/tj2013") (followers_url . "https://api.github.com/users/tj2013/followers") (following_url . "https://api.github.com/users/tj2013/following{/other_user}") (gists_url . "https://api.github.com/users/tj2013/gists{/gist_id}") (starred_url . "https://api.github.com/users/tj2013/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tj2013/subscriptions") (organizations_url . "https://api.github.com/users/tj2013/orgs") (repos_url . "https://api.github.com/users/tj2013/repos") (events_url . "https://api.github.com/users/tj2013/events{/privacy}") (received_events_url . "https://api.github.com/users/tj2013/received_events") (type . "User") (site_admin)))))) ((login . "tj2013") (id . 4505455) (avatar_url . "https://avatars1.githubusercontent.com/u/4505455?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tj2013") (html_url . "https://github.com/tj2013") (followers_url . "https://api.github.com/users/tj2013/followers") (following_url . "https://api.github.com/users/tj2013/following{/other_user}") (gists_url . "https://api.github.com/users/tj2013/gists{/gist_id}") (starred_url . "https://api.github.com/users/tj2013/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tj2013/subscriptions") (organizations_url . "https://api.github.com/users/tj2013/orgs") (repos_url . "https://api.github.com/users/tj2013/repos") (events_url . "https://api.github.com/users/tj2013/events{/privacy}") (received_events_url . "https://api.github.com/users/tj2013/received_events") (type . "User") (site_admin) (name . "Jing Teng") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 44) (public_gists . 3) (followers . 2) (following . 0) (created_at . "2013-05-23T03:13:42Z") (updated_at . "2018-01-02T00:20:53Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "perrydillard") (id . 15878356) (avatar_url . "https://avatars3.githubusercontent.com/u/15878356?v=4") (gravatar_id . "") (url . "https://api.github.com/users/perrydillard") (html_url . "https://github.com/perrydillard") (followers_url . "https://api.github.com/users/perrydillard/followers") (following_url . "https://api.github.com/users/perrydillard/following{/other_user}") (gists_url . "https://api.github.com/users/perrydillard/gists{/gist_id}") (starred_url . "https://api.github.com/users/perrydillard/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/perrydillard/subscriptions") (organizations_url . "https://api.github.com/users/perrydillard/orgs") (repos_url . "https://api.github.com/users/perrydillard/repos") (events_url . "https://api.github.com/users/perrydillard/events{/privacy}") (received_events_url . "https://api.github.com/users/perrydillard/received_events") (type . "User") (site_admin)))))) ((login . "perrydillard") (id . 15878356) (avatar_url . "https://avatars3.githubusercontent.com/u/15878356?v=4") (gravatar_id . "") (url . "https://api.github.com/users/perrydillard") (html_url . "https://github.com/perrydillard") (followers_url . "https://api.github.com/users/perrydillard/followers") (following_url . "https://api.github.com/users/perrydillard/following{/other_user}") (gists_url . "https://api.github.com/users/perrydillard/gists{/gist_id}") (starred_url . "https://api.github.com/users/perrydillard/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/perrydillard/subscriptions") (organizations_url . "https://api.github.com/users/perrydillard/orgs") (repos_url . "https://api.github.com/users/perrydillard/repos") (events_url . "https://api.github.com/users/perrydillard/events{/privacy}") (received_events_url . "https://api.github.com/users/perrydillard/received_events") (type . "User") (site_admin) (name . "Perry") (company) (blog . "http://www.perrydillard.com") (location) (email . "bdillardiv@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-11-16T20:59:21Z") (updated_at . "2018-01-17T00:03:56Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "baylesj") (id . 1357263) (avatar_url . "https://avatars2.githubusercontent.com/u/1357263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/baylesj") (html_url . "https://github.com/baylesj") (followers_url . "https://api.github.com/users/baylesj/followers") (following_url . "https://api.github.com/users/baylesj/following{/other_user}") (gists_url . "https://api.github.com/users/baylesj/gists{/gist_id}") (starred_url . "https://api.github.com/users/baylesj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/baylesj/subscriptions") (organizations_url . "https://api.github.com/users/baylesj/orgs") (repos_url . "https://api.github.com/users/baylesj/repos") (events_url . "https://api.github.com/users/baylesj/events{/privacy}") (received_events_url . "https://api.github.com/users/baylesj/received_events") (type . "User") (site_admin)))))) ((login . "baylesj") (id . 1357263) (avatar_url . "https://avatars2.githubusercontent.com/u/1357263?v=4") (gravatar_id . "") (url . "https://api.github.com/users/baylesj") (html_url . "https://github.com/baylesj") (followers_url . "https://api.github.com/users/baylesj/followers") (following_url . "https://api.github.com/users/baylesj/following{/other_user}") (gists_url . "https://api.github.com/users/baylesj/gists{/gist_id}") (starred_url . "https://api.github.com/users/baylesj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/baylesj/subscriptions") (organizations_url . "https://api.github.com/users/baylesj/orgs") (repos_url . "https://api.github.com/users/baylesj/repos") (events_url . "https://api.github.com/users/baylesj/events{/privacy}") (received_events_url . "https://api.github.com/users/baylesj/received_events") (type . "User") (site_admin) (name . "Jordan Bayles") (company . "@Microsoft ") (blog . "jordanbayl.es") (location . "Seattle, WA") (email . "bayles.jordan@gmail.com") (hireable) (bio) (public_repos . 26) (public_gists . 1) (followers . 14) (following . 12) (created_at . "2012-01-20T08:34:09Z") (updated_at . "2017-12-18T19:56:29Z")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))) :head "personal:haystack-remove-logstash"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 51772852) (name . "exp-devops") (full_name . "shellbj/exp-devops") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private . t) (html_url . "https://github.com/shellbj/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork . t) (url . "https://api.github.com/repos/shellbj/exp-devops") (forks_url . "https://api.github.com/repos/shellbj/exp-devops/forks") (keys_url . "https://api.github.com/repos/shellbj/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/exp-devops/teams") (hooks_url . "https://api.github.com/repos/shellbj/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/exp-devops/events") (assignees_url . "https://api.github.com/repos/shellbj/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/exp-devops/tags") (blobs_url . "https://api.github.com/repos/shellbj/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/shellbj/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/exp-devops/subscription") (commits_url . "https://api.github.com/repos/shellbj/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/exp-devops/merges") (archive_url . "https://api.github.com/repos/shellbj/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/exp-devops/downloads") (issues_url . "https://api.github.com/repos/shellbj/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/exp-devops/deployments") (created_at . "2016-02-15T17:33:18Z") (updated_at . "2016-02-15T17:34:10Z") (pushed_at . "2017-10-29T14:22:51Z") (git_url . "git://github.com/shellbj/exp-devops.git") (ssh_url . "git@github.com:shellbj/exp-devops.git") (clone_url . "https://github.com/shellbj/exp-devops.git") (svn_url . "https://github.com/shellbj/exp-devops") (homepage) (size . 711333) (stargazers_count . 0) (watchers_count . 0) (language . "Ruby") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (parent (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (source (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (network_count . 95) (subscribers_count . 276))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 51772852) (name . "exp-devops") (full_name . "shellbj/exp-devops") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private . t) (html_url . "https://github.com/shellbj/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork . t) (url . "https://api.github.com/repos/shellbj/exp-devops") (forks_url . "https://api.github.com/repos/shellbj/exp-devops/forks") (keys_url . "https://api.github.com/repos/shellbj/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/exp-devops/teams") (hooks_url . "https://api.github.com/repos/shellbj/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/exp-devops/events") (assignees_url . "https://api.github.com/repos/shellbj/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/exp-devops/tags") (blobs_url . "https://api.github.com/repos/shellbj/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/shellbj/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/exp-devops/subscription") (commits_url . "https://api.github.com/repos/shellbj/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/exp-devops/merges") (archive_url . "https://api.github.com/repos/shellbj/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/exp-devops/downloads") (issues_url . "https://api.github.com/repos/shellbj/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/exp-devops/deployments") (created_at . "2016-02-15T17:33:18Z") (updated_at . "2016-02-15T17:34:10Z") (pushed_at . "2018-01-22T20:15:04Z") (git_url . "git://github.com/shellbj/exp-devops.git") (ssh_url . "git@github.com:shellbj/exp-devops.git") (clone_url . "https://github.com/shellbj/exp-devops.git") (svn_url . "https://github.com/shellbj/exp-devops") (homepage) (size . 711333) (stargazers_count . 0) (watchers_count . 0) (language . "Ruby") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (parent (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (source (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master")) (network_count . 95) (subscribers_count . 276)) (((auth . magithub)) :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaInc")) (name . "exp-devops"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542)) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "ExpediaInc")) (name . "exp-devops"))) (quote ((number . 46138)))))) ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138") (repository_url . "https://api.github.com/repos/ExpediaInc/exp-devops") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138/comments") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138/events") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46138") (id . 290600669) (number . 46138) (title . "Remove haystack's logstash configuration from expweb") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-22T20:16:04Z") (updated_at . "2018-01-22T20:16:04Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138") (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46138") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/46138.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/46138.patch")) (body . "") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 316) (license) (forks . 95) (open_issues . 316) (watchers . 31) (default_branch . "master"))) (quote ((url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138") (id . 164405714) (html_url . "https://github.com/ExpediaInc/exp-devops/pull/46138") (diff_url . "https://github.com/ExpediaInc/exp-devops/pull/46138.diff") (patch_url . "https://github.com/ExpediaInc/exp-devops/pull/46138.patch") (issue_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138") (number . 46138) (state . "open") (locked) (title . "Remove haystack's logstash configuration from expweb") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (body . "") (created_at . "2018-01-22T20:16:04Z") (updated_at . "2018-01-22T20:16:04Z") (closed_at) (merged_at) (merge_commit_sha) (assignee) (assignees) (requested_reviewers) (milestone) (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138/commits") (review_comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138/comments") (review_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/comments{/number}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138/comments") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/77def8103bc99ed4cf9e4d9fd7dfa80dd75d0255") (head (label . "shellbj:haystack-remove-logstash") (ref . "haystack-remove-logstash") (sha . "77def8103bc99ed4cf9e4d9fd7dfa80dd75d0255") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (repo (id . 51772852) (name . "exp-devops") (full_name . "shellbj/exp-devops") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private . t) (html_url . "https://github.com/shellbj/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork . t) (url . "https://api.github.com/repos/shellbj/exp-devops") (forks_url . "https://api.github.com/repos/shellbj/exp-devops/forks") (keys_url . "https://api.github.com/repos/shellbj/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/exp-devops/teams") (hooks_url . "https://api.github.com/repos/shellbj/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/exp-devops/events") (assignees_url . "https://api.github.com/repos/shellbj/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/exp-devops/tags") (blobs_url . "https://api.github.com/repos/shellbj/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/shellbj/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/exp-devops/subscription") (commits_url . "https://api.github.com/repos/shellbj/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/exp-devops/merges") (archive_url . "https://api.github.com/repos/shellbj/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/exp-devops/downloads") (issues_url . "https://api.github.com/repos/shellbj/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/exp-devops/deployments") (created_at . "2016-02-15T17:33:18Z") (updated_at . "2016-02-15T17:34:10Z") (pushed_at . "2018-01-22T20:15:04Z") (git_url . "git://github.com/shellbj/exp-devops.git") (ssh_url . "git@github.com:shellbj/exp-devops.git") (clone_url . "https://github.com/shellbj/exp-devops.git") (svn_url . "https://github.com/shellbj/exp-devops") (homepage) (size . 711333) (stargazers_count . 0) (watchers_count . 0) (language . "Ruby") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master"))) (base (label . "ExpediaInc:master") (ref . "master") (sha . "3146244e6f1f5cd873786084f6cef377c87c931c") (user (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (repo (id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 316) (license) (forks . 95) (open_issues . 316) (watchers . 31) (default_branch . "master"))) (_links (self (href . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138")) (html (href . "https://github.com/ExpediaInc/exp-devops/pull/46138")) (issue (href . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138")) (comments (href . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/46138/comments")) (review_comments (href . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138/comments")) (review_comment (href . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/comments{/number}")) (commits (href . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls/46138/commits")) (statuses (href . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/77def8103bc99ed4cf9e4d9fd7dfa80dd75d0255"))) (author_association . "OWNER") (merged) (mergeable) (rebaseable) (mergeable_state . "unknown") (merged_by) (comments . 0) (review_comments . 0) (maintainer_can_modify . t) (commits . 1) (additions . 0) (deletions . 301) (changed_files . 6))))))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "bshell")) (name . "transit"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 15421) (name . "transit") (full_name . "bshell/transit") (owner (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (private) (html_url . "https://ewegithub.sb.karmalab.net/bshell/transit") (description . "Placeholder project for the new connector prototype.") (fork . t) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/transit/deployments") (created_at . "2016-09-29T15:05:11Z") (updated_at . "2017-05-23T20:14:18Z") (pushed_at . "2017-05-23T20:14:14Z") (git_url . "git://ewegithub.sb.karmalab.net/bshell/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:bshell/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/bshell/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/bshell/transit") (homepage) (size . 792) (stargazers_count . 0) (watchers_count . 0) (language . "Scala") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master")) (source (id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master")) (network_count . 4) (subscribers_count . 0)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "transit"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223))) "master"))) ((state . "pending") (statuses) (sha . "1619a438ed7c47c869d483fcf7dc45ecebf47b80") (total_count . 0) (repository (id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits/1619a438ed7c47c869d483fcf7dc45ecebf47b80") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits/1619a438ed7c47c869d483fcf7dc45ecebf47b80/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223))))))) (((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/92") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/92/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/92/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/92/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/92") (id . 414961) (number . 92) (title . "Basic HTTP Endpoint based on Apache HttpClient") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-23T00:18:10Z") (updated_at . "2017-11-23T00:18:10Z") (closed_at) (body . "This would be attempt number 2. The Endpoint needs to be extremely basic with limited configuration and abstraction layers. Timeouts and thread pool size should be configurable. There should be an option to disable SSL cert check. Cookie management should be disabled.

For design, might want to have a class HttpGetEndpoint and HttpPostEndpoint that take different HttpRequest objects. The HttpRequest object should allow a URL, headers, and if possible a builder to construct the URL query with proper URL encoding. The HttpResponse could hold response status, headers, and an OutputStream to the body.

Look through existing HttpEndpoint implementations in github.
- https://ewegithub.sb.karmalab.net/EWE/checkout-common/blob/master/src/main/java/com/expedia/www/checkout/common/http/HttpClientEndpoint.java
")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/91") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/91/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/91/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/91/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/91") (id . 414948) (number . 91) (title . "RxJava integration") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:48:12Z") (updated_at . "2017-11-22T23:48:12Z") (closed_at) (body . "Make it easier for RxJava users to use Transit. Before doing this, find an existing app that uses Transit and RxJava.

One idea to to make an RxTransit class that wraps any Transit instance and exposes a send method that returns an RxJava Observable instead of a Transit promise.")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/90") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/90/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/90/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/90/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/90") (id . 414940) (number . 90) (title . "Add async example to Example application") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:29:17Z") (updated_at . "2017-11-22T23:29:17Z") (closed_at) (body . "There should be an example showcasing how to send multiple transit requests and access the results later. Maybe simulate the Package domain?")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/89") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/89/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/89/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/89/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/89") (id . 414937) (number . 89) (title . "Add resilience examples to the Example application") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:26:35Z") (updated_at . "2017-11-22T23:26:35Z") (closed_at) (body . "It would be great to have failover, retry, timeout and shortcircuit examples in the example application.")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/88") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/88/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/88/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/88/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/88") (id . 414935) (number . 88) (title . "Javadocs for major interfaces and Transit") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:24:34Z") (updated_at . "2017-11-22T23:24:34Z") (closed_at) (body . "Enough people have asked for Javadocs, time to add them. The main Feature interfaces and Transit should have them at a minimum. It would also be good to add to the feature implementations and other user-facing code.")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/87") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/87/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/87/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/87/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/87") (id . 414932) (number . 87) (title . "Easy Transit mocking for tests") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:16:34Z") (updated_at . "2017-11-22T23:16:34Z") (closed_at) (body . "A transit test or mock fixture could greatly reduce the complexity of testing transit consumer code.

The below examples could be implemented via request interceptors similar to stub interceptor.

Basic success or failure:
`val transit = MockTransit.expect(request, endpoint).andSucceed(response)`
Or
`val transit = MockTransit.expect(request, endpoint).andFail(exception)`
Or by type:
`val transit = MockTransit.expectType(MyRequest.class, MyEndpoint.class).andXXX`

Delayed response:
`mockTransit.andFail(exception).afterDelay(100, TimeUnit.Milliseconds)`

To mock multiple requests:
`val transit = MockTransit`
`.expect(request, endpoint).andSucceed(response)`
`.expect(anotherRequest, differentEndpoint).andSuccess(anotherResponse)`

")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/86") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/86/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/86/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/86/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/86") (id . 414926) (number . 86) (title . "Short circuit feature") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:08:38Z") (updated_at . "2017-11-22T23:08:38Z") (closed_at) (body . "It would be nice to have a feature that watches the failures over a period of time, and if more than a configurable number of failures occur, the feature will immediate respond with a failure instead of allowing the request to go to the Endpoint.

Likely this means a feature with a ResponseObserver that counts failures by endpoint, and an Interceptor that will immediately fail for an amount of time if the failure count exceeds a threshold.")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/85") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/85/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/85/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/85/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit/issues/85") (id . 414921) (number . 85) (title . "Support for per-request metadata in Features") (user (login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-22T23:02:26Z") (updated_at . "2017-11-22T23:02:26Z") (closed_at) (body . "Quite a few Feature implementations have had to manage their own synchronized weak hashmap to pass data between onRequest and onResponse, or to track duration handles between start and stop. This has resulted in bugs where the values aren't removed from the maps. Transit should provide a way for features to easily store per-request metadata without needing to manage their own per-request store.

One idea is to extends the Feature interfaces with a method that also provides a RequestMetadata that features can use like a per-feature, per-request map. The new methods on the Feature interfaces could be defaulted to call the old methods, making upgrades easier.

"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2538) (name . "transit") (full_name . "EWE/transit") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (description . "Transit communication library") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/transit/deployments") (created_at . "2015-04-15T18:31:40Z") (updated_at . "2017-09-14T23:11:32Z") (pushed_at . "2017-11-22T22:32:21Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/transit.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/transit.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/transit.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/transit") (homepage . "") (size . 864) (stargazers_count . 10) (watchers_count . 10) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 4) (mirror_url) (open_issues_count . 8) (forks . 4) (open_issues . 8) (watchers . 10) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 4) (subscribers_count . 223)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "asilinskas") (id . 21) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/21?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas") (html_url . "https://ewegithub.sb.karmalab.net/asilinskas") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asilinskas/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Aaron Silinskas (asilinskas),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Aaron Silinskas") (company) (blog . "") (location . "Bellevue") (email . "asilinskas@expedia.com") (hireable) (bio) (public_repos . 3) (public_gists . 8) (followers . 2) (following . 0) (created_at . "2013-01-14T16:38:41Z") (updated_at . "2017-10-31T00:02:00Z") (suspended_at)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "apache")) (name . "httpcomponents-core"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 206398) (name . "httpcomponents-core") (full_name . "apache/httpcomponents-core") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-core") (description . "Mirror of Apache HttpCore") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-core") (forks_url . "https://api.github.com/repos/apache/httpcomponents-core/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-core/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-core/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-core/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-core/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-core/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-core/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-core/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-core/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-core/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-core/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-core/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-core/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-core/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-core/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-core/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-core/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-core/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-core/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-core/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-core/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-core/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-core/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-core/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-core/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-core/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-core/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-core/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-core/deployments") (created_at . "2009-05-21T01:41:50Z") (updated_at . "2018-01-20T06:28:05Z") (pushed_at . "2018-01-20T18:18:57Z") (git_url . "git://github.com/apache/httpcomponents-core.git") (ssh_url . "git@github.com:apache/httpcomponents-core.git") (clone_url . "https://github.com/apache/httpcomponents-core.git") (svn_url . "https://github.com/apache/httpcomponents-core") (homepage) (size . 13718) (stargazers_count . 133) (watchers_count . 133) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 147) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 147) (open_issues . 2) (watchers . 133) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 147) (subscribers_count . 22)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 206398) (name . "httpcomponents-core") (full_name . "apache/httpcomponents-core") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-core") (description . "Mirror of Apache HttpCore") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-core") (forks_url . "https://api.github.com/repos/apache/httpcomponents-core/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-core/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-core/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-core/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-core/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-core/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-core/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-core/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-core/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-core/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-core/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-core/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-core/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-core/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-core/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-core/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-core/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-core/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-core/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-core/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-core/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-core/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-core/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-core/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-core/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-core/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-core/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-core/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-core/deployments") (created_at . "2009-05-21T01:41:50Z") (updated_at . "2018-01-20T06:28:05Z") (pushed_at . "2018-01-20T18:18:57Z") (git_url . "git://github.com/apache/httpcomponents-core.git") (ssh_url . "git@github.com:apache/httpcomponents-core.git") (clone_url . "https://github.com/apache/httpcomponents-core.git") (svn_url . "https://github.com/apache/httpcomponents-core") (homepage) (size . 13718) (stargazers_count . 133) (watchers_count . 133) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 147) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 147) (open_issues . 2) (watchers . 133) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 147) (subscribers_count . 22))))))) (((url . "https://api.github.com/repos/apache/httpcomponents-core/issues/53") (repository_url . "https://api.github.com/repos/apache/httpcomponents-core") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/53/labels{/name}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/53/comments") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/53/events") (html_url . "https://github.com/apache/httpcomponents-core/pull/53") (id . 272798790) (number . 53) (title . "4.4.x") (user (login . "xcn520") (id . 12078099) (avatar_url . "https://avatars3.githubusercontent.com/u/12078099?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xcn520") (html_url . "https://github.com/xcn520") (followers_url . "https://api.github.com/users/xcn520/followers") (following_url . "https://api.github.com/users/xcn520/following{/other_user}") (gists_url . "https://api.github.com/users/xcn520/gists{/gist_id}") (starred_url . "https://api.github.com/users/xcn520/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xcn520/subscriptions") (organizations_url . "https://api.github.com/users/xcn520/orgs") (repos_url . "https://api.github.com/users/xcn520/repos") (events_url . "https://api.github.com/users/xcn520/events{/privacy}") (received_events_url . "https://api.github.com/users/xcn520/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-11-10T02:21:13Z") (updated_at . "2018-01-20T18:17:51Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/apache/httpcomponents-core/pulls/53") (html_url . "https://github.com/apache/httpcomponents-core/pull/53") (diff_url . "https://github.com/apache/httpcomponents-core/pull/53.diff") (patch_url . "https://github.com/apache/httpcomponents-core/pull/53.patch")) (body . "")) ((url . "https://api.github.com/repos/apache/httpcomponents-core/issues/47") (repository_url . "https://api.github.com/repos/apache/httpcomponents-core") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/47/labels{/name}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/47/comments") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/47/events") (html_url . "https://github.com/apache/httpcomponents-core/pull/47") (id . 248424672) (number . 47) (title . "Fix hang when using AbstractClassicEntityProducer") (user (login . "cakofony") (id . 3854321) (avatar_url . "https://avatars1.githubusercontent.com/u/3854321?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cakofony") (html_url . "https://github.com/cakofony") (followers_url . "https://api.github.com/users/cakofony/followers") (following_url . "https://api.github.com/users/cakofony/following{/other_user}") (gists_url . "https://api.github.com/users/cakofony/gists{/gist_id}") (starred_url . "https://api.github.com/users/cakofony/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cakofony/subscriptions") (organizations_url . "https://api.github.com/users/cakofony/orgs") (repos_url . "https://api.github.com/users/cakofony/repos") (events_url . "https://api.github.com/users/cakofony/events{/privacy}") (received_events_url . "https://api.github.com/users/cakofony/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-08-07T14:13:54Z") (updated_at . "2018-01-08T12:53:44Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/apache/httpcomponents-core/pulls/47") (html_url . "https://github.com/apache/httpcomponents-core/pull/47") (diff_url . "https://github.com/apache/httpcomponents-core/pull/47.diff") (patch_url . "https://github.com/apache/httpcomponents-core/pull/47.patch")) (body . "When AsyncDataProducer.available returns zero, the caller may
not execute the produce method again until
DataStreamChannel.requestOutput has been invoked.

This approach sets available to Integer.MAX_VALUE to avoid this
case. It would be more efficient to call requestOutput after
writes, but I'm not certain if invoking the method unnecessarily
would affect performance, and the MAX_VALUE approach is used by
other producers.

I was able to reproduce this issue in a test by sending a dummy 4gb
stream using AbstractClassicEntityProducer. Overriding available with
a non-zero value stopped the hangs.
Again, it may be more efficient to track `available()` invocations and
call `requestOutput()` from a subtype of ContentOutputStream, but I
haven't dug in quite that far yet :-)"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 206398) (name . "httpcomponents-core") (full_name . "apache/httpcomponents-core") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-core") (description . "Mirror of Apache HttpCore") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-core") (forks_url . "https://api.github.com/repos/apache/httpcomponents-core/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-core/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-core/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-core/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-core/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-core/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-core/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-core/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-core/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-core/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-core/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-core/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-core/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-core/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-core/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-core/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-core/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-core/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-core/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-core/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-core/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-core/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-core/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-core/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-core/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-core/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-core/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-core/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-core/deployments") (created_at . "2009-05-21T01:41:50Z") (updated_at . "2018-01-20T06:28:05Z") (pushed_at . "2018-01-20T18:18:57Z") (git_url . "git://github.com/apache/httpcomponents-core.git") (ssh_url . "git@github.com:apache/httpcomponents-core.git") (clone_url . "https://github.com/apache/httpcomponents-core.git") (svn_url . "https://github.com/apache/httpcomponents-core") (homepage) (size . 13718) (stargazers_count . 133) (watchers_count . 133) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 147) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 147) (open_issues . 2) (watchers . 133) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 147) (subscribers_count . 22))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 206398) (name . "httpcomponents-core") (full_name . "apache/httpcomponents-core") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-core") (description . "Mirror of Apache HttpCore") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-core") (forks_url . "https://api.github.com/repos/apache/httpcomponents-core/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-core/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-core/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-core/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-core/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-core/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-core/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-core/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-core/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-core/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-core/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-core/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-core/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-core/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-core/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-core/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-core/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-core/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-core/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-core/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-core/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-core/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-core/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-core/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-core/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-core/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-core/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-core/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-core/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-core/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-core/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-core/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-core/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-core/deployments") (created_at . "2009-05-21T01:41:50Z") (updated_at . "2018-01-20T06:28:05Z") (pushed_at . "2018-01-20T18:18:57Z") (git_url . "git://github.com/apache/httpcomponents-core.git") (ssh_url . "git@github.com:apache/httpcomponents-core.git") (clone_url . "https://github.com/apache/httpcomponents-core.git") (svn_url . "https://github.com/apache/httpcomponents-core") (homepage) (size . 13718) (stargazers_count . 133) (watchers_count . 133) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 147) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 147) (open_issues . 2) (watchers . 133) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 147) (subscribers_count . 22)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "xcn520") (id . 12078099) (avatar_url . "https://avatars3.githubusercontent.com/u/12078099?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xcn520") (html_url . "https://github.com/xcn520") (followers_url . "https://api.github.com/users/xcn520/followers") (following_url . "https://api.github.com/users/xcn520/following{/other_user}") (gists_url . "https://api.github.com/users/xcn520/gists{/gist_id}") (starred_url . "https://api.github.com/users/xcn520/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xcn520/subscriptions") (organizations_url . "https://api.github.com/users/xcn520/orgs") (repos_url . "https://api.github.com/users/xcn520/repos") (events_url . "https://api.github.com/users/xcn520/events{/privacy}") (received_events_url . "https://api.github.com/users/xcn520/received_events") (type . "User") (site_admin)))))) ((login . "xcn520") (id . 12078099) (avatar_url . "https://avatars3.githubusercontent.com/u/12078099?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xcn520") (html_url . "https://github.com/xcn520") (followers_url . "https://api.github.com/users/xcn520/followers") (following_url . "https://api.github.com/users/xcn520/following{/other_user}") (gists_url . "https://api.github.com/users/xcn520/gists{/gist_id}") (starred_url . "https://api.github.com/users/xcn520/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xcn520/subscriptions") (organizations_url . "https://api.github.com/users/xcn520/orgs") (repos_url . "https://api.github.com/users/xcn520/repos") (events_url . "https://api.github.com/users/xcn520/events{/privacy}") (received_events_url . "https://api.github.com/users/xcn520/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-04-23T03:29:43Z") (updated_at . "2017-11-10T02:21:03Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "cakofony") (id . 3854321) (avatar_url . "https://avatars1.githubusercontent.com/u/3854321?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cakofony") (html_url . "https://github.com/cakofony") (followers_url . "https://api.github.com/users/cakofony/followers") (following_url . "https://api.github.com/users/cakofony/following{/other_user}") (gists_url . "https://api.github.com/users/cakofony/gists{/gist_id}") (starred_url . "https://api.github.com/users/cakofony/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cakofony/subscriptions") (organizations_url . "https://api.github.com/users/cakofony/orgs") (repos_url . "https://api.github.com/users/cakofony/repos") (events_url . "https://api.github.com/users/cakofony/events{/privacy}") (received_events_url . "https://api.github.com/users/cakofony/received_events") (type . "User") (site_admin)))))) ((login . "cakofony") (id . 3854321) (avatar_url . "https://avatars1.githubusercontent.com/u/3854321?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cakofony") (html_url . "https://github.com/cakofony") (followers_url . "https://api.github.com/users/cakofony/followers") (following_url . "https://api.github.com/users/cakofony/following{/other_user}") (gists_url . "https://api.github.com/users/cakofony/gists{/gist_id}") (starred_url . "https://api.github.com/users/cakofony/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cakofony/subscriptions") (organizations_url . "https://api.github.com/users/cakofony/orgs") (repos_url . "https://api.github.com/users/cakofony/repos") (events_url . "https://api.github.com/users/cakofony/events{/privacy}") (received_events_url . "https://api.github.com/users/cakofony/received_events") (type . "User") (site_admin) (name . "Carter Kozak") (company . "Palantir") (blog . "") (location . "Washington DC") (email . "c4kofony@gmail.com") (hireable) (bio . "I write code and do other things too!") (public_repos . 27) (public_gists . 1) (followers . 3) (following . 1) (created_at . "2013-03-13T13:58:02Z") (updated_at . "2018-01-23T14:11:30Z")) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "apache")) (name . "httpcomponents-client"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 206402) (name . "httpcomponents-client") (full_name . "apache/httpcomponents-client") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-client") (description . "Mirror of Apache HttpClient") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-client") (forks_url . "https://api.github.com/repos/apache/httpcomponents-client/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-client/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-client/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-client/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-client/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-client/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-client/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-client/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-client/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-client/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-client/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-client/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-client/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-client/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-client/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-client/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-client/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-client/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-client/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-client/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-client/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-client/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-client/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-client/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-client/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-client/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-client/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-client/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-client/deployments") (created_at . "2009-05-21T01:43:06Z") (updated_at . "2018-01-24T05:19:05Z") (pushed_at . "2018-01-24T04:01:22Z") (git_url . "git://github.com/apache/httpcomponents-client.git") (ssh_url . "git@github.com:apache/httpcomponents-client.git") (clone_url . "https://github.com/apache/httpcomponents-client.git") (svn_url . "https://github.com/apache/httpcomponents-client") (homepage) (size . 13846) (stargazers_count . 598) (watchers_count . 598) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 444) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 444) (open_issues . 2) (watchers . 598) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 444) (subscribers_count . 88)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 206402) (name . "httpcomponents-client") (full_name . "apache/httpcomponents-client") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-client") (description . "Mirror of Apache HttpClient") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-client") (forks_url . "https://api.github.com/repos/apache/httpcomponents-client/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-client/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-client/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-client/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-client/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-client/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-client/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-client/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-client/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-client/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-client/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-client/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-client/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-client/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-client/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-client/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-client/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-client/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-client/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-client/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-client/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-client/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-client/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-client/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-client/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-client/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-client/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-client/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-client/deployments") (created_at . "2009-05-21T01:43:06Z") (updated_at . "2018-01-24T05:19:05Z") (pushed_at . "2018-01-24T04:01:22Z") (git_url . "git://github.com/apache/httpcomponents-client.git") (ssh_url . "git@github.com:apache/httpcomponents-client.git") (clone_url . "https://github.com/apache/httpcomponents-client.git") (svn_url . "https://github.com/apache/httpcomponents-client") (homepage) (size . 13846) (stargazers_count . 598) (watchers_count . 598) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 444) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 444) (open_issues . 2) (watchers . 598) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 444) (subscribers_count . 88))))))) (((url . "https://api.github.com/repos/apache/httpcomponents-client/issues/89") (repository_url . "https://api.github.com/repos/apache/httpcomponents-client") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/89/labels{/name}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/89/comments") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/89/events") (html_url . "https://github.com/apache/httpcomponents-client/pull/89") (id . 278441071) (number . 89) (title . "add dropwizard metrics to httpclient") (user (login . "xiaoshuang-lu") (id . 14037325) (avatar_url . "https://avatars3.githubusercontent.com/u/14037325?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xiaoshuang-lu") (html_url . "https://github.com/xiaoshuang-lu") (followers_url . "https://api.github.com/users/xiaoshuang-lu/followers") (following_url . "https://api.github.com/users/xiaoshuang-lu/following{/other_user}") (gists_url . "https://api.github.com/users/xiaoshuang-lu/gists{/gist_id}") (starred_url . "https://api.github.com/users/xiaoshuang-lu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xiaoshuang-lu/subscriptions") (organizations_url . "https://api.github.com/users/xiaoshuang-lu/orgs") (repos_url . "https://api.github.com/users/xiaoshuang-lu/repos") (events_url . "https://api.github.com/users/xiaoshuang-lu/events{/privacy}") (received_events_url . "https://api.github.com/users/xiaoshuang-lu/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 13) (created_at . "2017-12-01T11:43:00Z") (updated_at . "2018-01-18T12:07:15Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/apache/httpcomponents-client/pulls/89") (html_url . "https://github.com/apache/httpcomponents-client/pull/89") (diff_url . "https://github.com/apache/httpcomponents-client/pull/89.diff") (patch_url . "https://github.com/apache/httpcomponents-client/pull/89.patch")) (body . "")) ((url . "https://api.github.com/repos/apache/httpcomponents-client/issues/88") (repository_url . "https://api.github.com/repos/apache/httpcomponents-client") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/88/labels{/name}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/88/comments") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/88/events") (html_url . "https://github.com/apache/httpcomponents-client/pull/88") (id . 268412740) (number . 88) (title . "HTTPCLIENT-1855") (user (login . "agherardi") (id . 2007228) (avatar_url . "https://avatars0.githubusercontent.com/u/2007228?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agherardi") (html_url . "https://github.com/agherardi") (followers_url . "https://api.github.com/users/agherardi/followers") (following_url . "https://api.github.com/users/agherardi/following{/other_user}") (gists_url . "https://api.github.com/users/agherardi/gists{/gist_id}") (starred_url . "https://api.github.com/users/agherardi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agherardi/subscriptions") (organizations_url . "https://api.github.com/users/agherardi/orgs") (repos_url . "https://api.github.com/users/agherardi/repos") (events_url . "https://api.github.com/users/agherardi/events{/privacy}") (received_events_url . "https://api.github.com/users/agherardi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-25T14:09:41Z") (updated_at . "2018-01-15T12:04:42Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/apache/httpcomponents-client/pulls/88") (html_url . "https://github.com/apache/httpcomponents-client/pull/88") (diff_url . "https://github.com/apache/httpcomponents-client/pull/88.diff") (patch_url . "https://github.com/apache/httpcomponents-client/pull/88.patch")) (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 206402) (name . "httpcomponents-client") (full_name . "apache/httpcomponents-client") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-client") (description . "Mirror of Apache HttpClient") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-client") (forks_url . "https://api.github.com/repos/apache/httpcomponents-client/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-client/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-client/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-client/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-client/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-client/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-client/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-client/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-client/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-client/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-client/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-client/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-client/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-client/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-client/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-client/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-client/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-client/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-client/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-client/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-client/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-client/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-client/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-client/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-client/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-client/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-client/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-client/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-client/deployments") (created_at . "2009-05-21T01:43:06Z") (updated_at . "2018-01-24T05:19:05Z") (pushed_at . "2018-01-24T04:01:22Z") (git_url . "git://github.com/apache/httpcomponents-client.git") (ssh_url . "git@github.com:apache/httpcomponents-client.git") (clone_url . "https://github.com/apache/httpcomponents-client.git") (svn_url . "https://github.com/apache/httpcomponents-client") (homepage) (size . 13846) (stargazers_count . 598) (watchers_count . 598) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 444) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 444) (open_issues . 2) (watchers . 598) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 444) (subscribers_count . 88))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 206402) (name . "httpcomponents-client") (full_name . "apache/httpcomponents-client") (owner (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/apache/httpcomponents-client") (description . "Mirror of Apache HttpClient") (fork) (url . "https://api.github.com/repos/apache/httpcomponents-client") (forks_url . "https://api.github.com/repos/apache/httpcomponents-client/forks") (keys_url . "https://api.github.com/repos/apache/httpcomponents-client/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/apache/httpcomponents-client/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/apache/httpcomponents-client/teams") (hooks_url . "https://api.github.com/repos/apache/httpcomponents-client/hooks") (issue_events_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/events{/number}") (events_url . "https://api.github.com/repos/apache/httpcomponents-client/events") (assignees_url . "https://api.github.com/repos/apache/httpcomponents-client/assignees{/user}") (branches_url . "https://api.github.com/repos/apache/httpcomponents-client/branches{/branch}") (tags_url . "https://api.github.com/repos/apache/httpcomponents-client/tags") (blobs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/apache/httpcomponents-client/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/apache/httpcomponents-client/git/refs{/sha}") (trees_url . "https://api.github.com/repos/apache/httpcomponents-client/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/apache/httpcomponents-client/statuses/{sha}") (languages_url . "https://api.github.com/repos/apache/httpcomponents-client/languages") (stargazers_url . "https://api.github.com/repos/apache/httpcomponents-client/stargazers") (contributors_url . "https://api.github.com/repos/apache/httpcomponents-client/contributors") (subscribers_url . "https://api.github.com/repos/apache/httpcomponents-client/subscribers") (subscription_url . "https://api.github.com/repos/apache/httpcomponents-client/subscription") (commits_url . "https://api.github.com/repos/apache/httpcomponents-client/commits{/sha}") (git_commits_url . "https://api.github.com/repos/apache/httpcomponents-client/git/commits{/sha}") (comments_url . "https://api.github.com/repos/apache/httpcomponents-client/comments{/number}") (issue_comment_url . "https://api.github.com/repos/apache/httpcomponents-client/issues/comments{/number}") (contents_url . "https://api.github.com/repos/apache/httpcomponents-client/contents/{+path}") (compare_url . "https://api.github.com/repos/apache/httpcomponents-client/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/apache/httpcomponents-client/merges") (archive_url . "https://api.github.com/repos/apache/httpcomponents-client/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/apache/httpcomponents-client/downloads") (issues_url . "https://api.github.com/repos/apache/httpcomponents-client/issues{/number}") (pulls_url . "https://api.github.com/repos/apache/httpcomponents-client/pulls{/number}") (milestones_url . "https://api.github.com/repos/apache/httpcomponents-client/milestones{/number}") (notifications_url . "https://api.github.com/repos/apache/httpcomponents-client/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/apache/httpcomponents-client/labels{/name}") (releases_url . "https://api.github.com/repos/apache/httpcomponents-client/releases{/id}") (deployments_url . "https://api.github.com/repos/apache/httpcomponents-client/deployments") (created_at . "2009-05-21T01:43:06Z") (updated_at . "2018-01-24T05:19:05Z") (pushed_at . "2018-01-24T04:01:22Z") (git_url . "git://github.com/apache/httpcomponents-client.git") (ssh_url . "git@github.com:apache/httpcomponents-client.git") (clone_url . "https://github.com/apache/httpcomponents-client.git") (svn_url . "https://github.com/apache/httpcomponents-client") (homepage) (size . 13846) (stargazers_count . 598) (watchers_count . 598) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 444) (mirror_url) (archived) (open_issues_count . 2) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 444) (open_issues . 2) (watchers . 598) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "apache") (id . 47359) (avatar_url . "https://avatars0.githubusercontent.com/u/47359?v=4") (gravatar_id . "") (url . "https://api.github.com/users/apache") (html_url . "https://github.com/apache") (followers_url . "https://api.github.com/users/apache/followers") (following_url . "https://api.github.com/users/apache/following{/other_user}") (gists_url . "https://api.github.com/users/apache/gists{/gist_id}") (starred_url . "https://api.github.com/users/apache/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/apache/subscriptions") (organizations_url . "https://api.github.com/users/apache/orgs") (repos_url . "https://api.github.com/users/apache/repos") (events_url . "https://api.github.com/users/apache/events{/privacy}") (received_events_url . "https://api.github.com/users/apache/received_events") (type . "Organization") (site_admin)) (network_count . 444) (subscribers_count . 88)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "xiaoshuang-lu") (id . 14037325) (avatar_url . "https://avatars3.githubusercontent.com/u/14037325?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xiaoshuang-lu") (html_url . "https://github.com/xiaoshuang-lu") (followers_url . "https://api.github.com/users/xiaoshuang-lu/followers") (following_url . "https://api.github.com/users/xiaoshuang-lu/following{/other_user}") (gists_url . "https://api.github.com/users/xiaoshuang-lu/gists{/gist_id}") (starred_url . "https://api.github.com/users/xiaoshuang-lu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xiaoshuang-lu/subscriptions") (organizations_url . "https://api.github.com/users/xiaoshuang-lu/orgs") (repos_url . "https://api.github.com/users/xiaoshuang-lu/repos") (events_url . "https://api.github.com/users/xiaoshuang-lu/events{/privacy}") (received_events_url . "https://api.github.com/users/xiaoshuang-lu/received_events") (type . "User") (site_admin)))))) ((login . "xiaoshuang-lu") (id . 14037325) (avatar_url . "https://avatars3.githubusercontent.com/u/14037325?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xiaoshuang-lu") (html_url . "https://github.com/xiaoshuang-lu") (followers_url . "https://api.github.com/users/xiaoshuang-lu/followers") (following_url . "https://api.github.com/users/xiaoshuang-lu/following{/other_user}") (gists_url . "https://api.github.com/users/xiaoshuang-lu/gists{/gist_id}") (starred_url . "https://api.github.com/users/xiaoshuang-lu/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xiaoshuang-lu/subscriptions") (organizations_url . "https://api.github.com/users/xiaoshuang-lu/orgs") (repos_url . "https://api.github.com/users/xiaoshuang-lu/repos") (events_url . "https://api.github.com/users/xiaoshuang-lu/events{/privacy}") (received_events_url . "https://api.github.com/users/xiaoshuang-lu/received_events") (type . "User") (site_admin) (name . "Xiaoshuang LU") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 11) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-08-30T05:14:42Z") (updated_at . "2018-01-20T12:42:20Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "agherardi") (id . 2007228) (avatar_url . "https://avatars0.githubusercontent.com/u/2007228?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agherardi") (html_url . "https://github.com/agherardi") (followers_url . "https://api.github.com/users/agherardi/followers") (following_url . "https://api.github.com/users/agherardi/following{/other_user}") (gists_url . "https://api.github.com/users/agherardi/gists{/gist_id}") (starred_url . "https://api.github.com/users/agherardi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agherardi/subscriptions") (organizations_url . "https://api.github.com/users/agherardi/orgs") (repos_url . "https://api.github.com/users/agherardi/repos") (events_url . "https://api.github.com/users/agherardi/events{/privacy}") (received_events_url . "https://api.github.com/users/agherardi/received_events") (type . "User") (site_admin)))))) ((login . "agherardi") (id . 2007228) (avatar_url . "https://avatars0.githubusercontent.com/u/2007228?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agherardi") (html_url . "https://github.com/agherardi") (followers_url . "https://api.github.com/users/agherardi/followers") (following_url . "https://api.github.com/users/agherardi/following{/other_user}") (gists_url . "https://api.github.com/users/agherardi/gists{/gist_id}") (starred_url . "https://api.github.com/users/agherardi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agherardi/subscriptions") (organizations_url . "https://api.github.com/users/agherardi/orgs") (repos_url . "https://api.github.com/users/agherardi/repos") (events_url . "https://api.github.com/users/agherardi/events{/privacy}") (received_events_url . "https://api.github.com/users/agherardi/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 10) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2012-07-19T19:34:03Z") (updated_at . "2017-11-21T21:20:55Z")) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "bshell")) (name . "message-transformer-service"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 19449) (name . "message-transformer-service") (full_name . "bshell/message-transformer-service") (owner (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (private) (html_url . "https://ewegithub.sb.karmalab.net/bshell/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork . t) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/message-transformer-service/deployments") (created_at . "2017-01-31T21:14:50Z") (updated_at . "2017-01-31T21:14:57Z") (pushed_at . "2017-01-31T21:38:12Z") (git_url . "git://ewegithub.sb.karmalab.net/bshell/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:bshell/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/bshell/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/bshell/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 903) (stargazers_count . 0) (watchers_count . 0) (language . "Scala") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master")) (source (id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master")) (network_count . 1) (subscribers_count . 0)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "message-transformer-service"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215))) "master"))) ((state . "pending") (statuses) (sha . "4d28d3acbb46d7459964cef489c24fe7864602d8") (total_count . 0) (repository (id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits/4d28d3acbb46d7459964cef489c24fe7864602d8") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits/4d28d3acbb46d7459964cef489c24fe7864602d8/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215))))))) (((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/343") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/343/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/343/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/343/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/343") (id . 276248) (number . 343) (title . "Primer builds Jenkins migration") (user (login . "s-banzai") (id . 3962) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3962?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai") (html_url . "https://ewegithub.sb.karmalab.net/s-banzai") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/received_events") (type . "User") (site_admin) (ldap_dn . "CN=s-banzai,OU=Non Interactive Accounts,OU=Service Accounts,OU=Non-User,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-21T20:42:35Z") (updated_at . "2017-04-21T20:42:35Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls/343") (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/343") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/343.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/343.patch")) (body . "The -master, -all, -fortifyScan Jenkins jobs for this application were moved from https://ewe.builds.sb.karmalab.net to https://primer.builds.tools.expedia.com.
    This Pull Request ensures the next version of your pipeline points to the new Jenkins instance. Please merge it, or integrate the changes to another changeset of your choice.
    For additional details and help please visit [https://confluence/display/POS/Banzai+-+migration+of+primer+created+jobs+to+primer.builds.tools.expedia.com](https://confluence/display/POS/Banzai+-+migration+of+primer+created+jobs+to+primer.builds.tools.expedia.com)
    **NOTE** - The script that created this PR may include minor JSON style changes.
")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/341") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/341/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/341/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/341/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/341") (id . 272681) (number . 341) (title . "removing unnecessary scheduler") (user (login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-18T07:55:39Z") (updated_at . "2017-04-18T07:55:39Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls/341") (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/341") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/341.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service/pull/341.patch")) (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2973) (name . "message-transformer-service") (full_name . "EWE/message-transformer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (description . "This is a repository for E3 prime Application") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/message-transformer-service/deployments") (created_at . "2015-06-08T06:18:59Z") (updated_at . "2017-08-30T05:40:19Z") (pushed_at . "2018-01-24T07:36:54Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/message-transformer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/message-transformer-service") (homepage . "https://ewegithub.sb.karmalab.net") (size . 1062) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (open_issues_count . 2) (forks . 1) (open_issues . 2) (watchers . 1) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 215)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "s-banzai") (id . 3962) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3962?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai") (html_url . "https://ewegithub.sb.karmalab.net/s-banzai") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/received_events") (type . "User") (site_admin) (ldap_dn . "CN=s-banzai,OU=Non Interactive Accounts,OU=Service Accounts,OU=Non-User,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "s-banzai") (id . 3962) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3962?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai") (html_url . "https://ewegithub.sb.karmalab.net/s-banzai") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/received_events") (type . "User") (site_admin) (ldap_dn . "CN=s-banzai,OU=Non Interactive Accounts,OU=Service Accounts,OU=Non-User,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "s-banzai") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2017-01-12T18:13:05Z") (updated_at . "2017-09-07T09:21:06Z") (suspended_at)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Tejal Singla (tsingla)") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2015-07-13T06:28:17Z") (updated_at . "2017-12-13T07:09:06Z") (suspended_at)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "bshell")) (name . "trend-computer-service"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 19452) (name . "trend-computer-service") (full_name . "bshell/trend-computer-service") (owner (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (private) (html_url . "https://ewegithub.sb.karmalab.net/bshell/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork . t) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/bshell/trend-computer-service/deployments") (created_at . "2017-01-31T21:40:04Z") (updated_at . "2017-01-31T21:40:06Z") (pushed_at . "2017-01-31T21:59:56Z") (git_url . "git://ewegithub.sb.karmalab.net/bshell/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:bshell/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/bshell/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/bshell/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 689) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master")) (source (id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master")) (network_count . 2) (subscribers_count . 0)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "trend-computer-service"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218))) "master"))) ((state . "pending") (statuses) (sha . "c4b97c77e22590fdbfe3659fa07bd3289a7ec19a") (total_count . 0) (repository (id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits/c4b97c77e22590fdbfe3659fa07bd3289a7ec19a") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits/c4b97c77e22590fdbfe3659fa07bd3289a7ec19a/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218))))))) (((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/318") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/318/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/318/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/318/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/318") (id . 277534) (number . 318) (title . "Primer builds Jenkins migration") (user (login . "s-banzai") (id . 3962) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/3962?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai") (html_url . "https://ewegithub.sb.karmalab.net/s-banzai") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/s-banzai/received_events") (type . "User") (site_admin) (ldap_dn . "CN=s-banzai,OU=Non Interactive Accounts,OU=Service Accounts,OU=Non-User,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-25T09:17:07Z") (updated_at . "2017-04-25T09:17:07Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/318") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/318") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/318.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/318.patch")) (body . "The -master, -all, -fortifyScan Jenkins jobs for this application were moved from https://ewe.builds.sb.karmalab.net to https://primer.builds.tools.expedia.com.
    This Pull Request ensures the next version of your pipeline points to the new Jenkins instance. Please merge it, or integrate the changes to another changeset of your choice.
    For additional details and help please visit [https://confluence/display/POS/Banzai+-+migration+of+primer+created+jobs+to+primer.builds.tools.expedia.com](https://confluence/display/POS/Banzai+-+migration+of+primer+created+jobs+to+primer.builds.tools.expedia.com)
    **NOTE** - The script that created this PR may include minor JSON style changes.
")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/316") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/316/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/316/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/316/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/316") (id . 277460) (number . 316) (title . "git rebase") (user (login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-25T07:37:48Z") (updated_at . "2017-04-25T07:37:48Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/316") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/316") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/316.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/316.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/309") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/309/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/309/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/309/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/309") (id . 274740) (number . 309) (title . "Ftn") (user (login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-20T09:15:30Z") (updated_at . "2017-04-21T05:41:19Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/309") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/309") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/309.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/309.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/306") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/306/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/306/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/306/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/306") (id . 271263) (number . 306) (title . "fixing tmpThresholds") (user (login . "vnamuduri") (id . 302) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/302?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri") (html_url . "https://ewegithub.sb.karmalab.net/vnamuduri") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Veeru Namuduri (vnamuduri),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-04-13T23:15:06Z") (updated_at . "2017-04-13T23:15:06Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/306") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/306") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/306.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/306.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/283") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/283/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/283/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/283/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/283") (id . 249214) (number . 283) (title . "changed kafka producer config") (user (login . "tsingla") (id . 1528) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/1528?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla") (html_url . "https://ewegithub.sb.karmalab.net/tsingla") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/tsingla/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Tejal Singla (tsingla),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-03-09T09:51:05Z") (updated_at . "2017-03-21T09:10:04Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/283") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/283") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/283.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/283.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/274") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/274/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/274/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/274/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/274") (id . 228365) (number . 274) (title . "Added haystack configuration") (user (login . "bshell") (id . 2076) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/2076?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell") (html_url . "https://ewegithub.sb.karmalab.net/bshell") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/bshell/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Bryan Shell (bshell),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-01-31T22:00:10Z") (updated_at . "2017-01-31T22:00:10Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/274") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/274") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/274.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/274.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/263") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/263/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/263/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/263/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/263") (id . 185784) (number . 263) (title . "tag change to Doppler-Shared") (user (login . "mmalani") (id . 291) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/291?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani") (html_url . "https://ewegithub.sb.karmalab.net/mmalani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Mahesh Malani (mmalani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-10-29T11:08:37Z") (updated_at . "2016-10-29T11:08:37Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/263") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/263") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/263.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/263.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/262") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/262/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/262/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/262/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/262") (id . 183146) (number . 262) (title . "fixing Hist Trend Metric calculation thats affecting 1 hr metric, als…") (user (login . "vnamuduri") (id . 302) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/302?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri") (html_url . "https://ewegithub.sb.karmalab.net/vnamuduri") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Veeru Namuduri (vnamuduri),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-10-24T22:38:28Z") (updated_at . "2016-10-24T22:38:28Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/262") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/262") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/262.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/262.patch")) (body . "…o retiring 1 day and 1 week from TCS
")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/229") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/229/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/229/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/229/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/229") (id . 141542) (number . 229) (title . "add a check to see if metrics are there prior to overriding ttlsecs") (user (login . "mmalani") (id . 291) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/291?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani") (html_url . "https://ewegithub.sb.karmalab.net/mmalani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Mahesh Malani (mmalani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-08-02T09:05:46Z") (updated_at . "2016-08-02T09:05:46Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls/229") (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/229") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/229.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service/pull/229.patch")) (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 2989) (name . "trend-computer-service") (full_name . "EWE/trend-computer-service") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (description . "This is a dropwizard trend-computer service part of the trend cluster") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/trend-computer-service/deployments") (created_at . "2015-06-09T10:57:23Z") (updated_at . "2017-08-30T05:42:14Z") (pushed_at . "2017-12-18T04:53:15Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/trend-computer-service.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/trend-computer-service") (homepage . "http://ticker.prod.expedia.com/") (size . 993) (stargazers_count . 2) (watchers_count . 2) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (open_issues_count . 9) (forks . 2) (open_issues . 9) (watchers . 2) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 218)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vnamuduri") (id . 302) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/302?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri") (html_url . "https://ewegithub.sb.karmalab.net/vnamuduri") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Veeru Namuduri (vnamuduri),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "vnamuduri") (id . 302) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/302?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri") (html_url . "https://ewegithub.sb.karmalab.net/vnamuduri") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/vnamuduri/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Veeru Namuduri (vnamuduri),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Veeru Namuduri (vnamuduri)") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2014-01-06T23:16:57Z") (updated_at . "2017-09-23T07:21:25Z") (suspended_at . "2017-09-23T02:21:25-05:00")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mmalani") (id . 291) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/291?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani") (html_url . "https://ewegithub.sb.karmalab.net/mmalani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Mahesh Malani (mmalani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "mmalani") (id . 291) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/291?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani") (html_url . "https://ewegithub.sb.karmalab.net/mmalani") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/mmalani/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Mahesh Malani (mmalani),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Mahesh Malani (mmalani)") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-12-12T12:48:23Z") (updated_at . "2018-01-08T16:56:22Z") (suspended_at)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-idl"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 98961015) (name . "haystack-idl") (full_name . "ExpediaDotCom/haystack-idl") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-idl") (description . "Span and other data model definitions used by Haystack") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/deployments") (created_at . "2017-08-01T04:59:26Z") (updated_at . "2017-10-30T09:32:23Z") (pushed_at . "2018-01-12T08:28:25Z") (git_url . "git://github.com/ExpediaDotCom/haystack-idl.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-idl.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-idl.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-idl") (homepage) (size . 60) (stargazers_count . 0) (watchers_count . 0) (language . "Go") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 7)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 98961015) (name . "haystack-idl") (full_name . "ExpediaDotCom/haystack-idl") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-idl") (description . "Span and other data model definitions used by Haystack") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/deployments") (created_at . "2017-08-01T04:59:26Z") (updated_at . "2017-10-30T09:32:23Z") (pushed_at . "2018-01-12T08:28:25Z") (git_url . "git://github.com/ExpediaDotCom/haystack-idl.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-idl.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-idl.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-idl") (homepage) (size . 60) (stargazers_count . 0) (watchers_count . 0) (language . "Go") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 7))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 98961015) (name . "haystack-idl") (full_name . "ExpediaDotCom/haystack-idl") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-idl") (description . "Span and other data model definitions used by Haystack") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/deployments") (created_at . "2017-08-01T04:59:26Z") (updated_at . "2017-10-30T09:32:23Z") (pushed_at . "2018-01-12T08:28:25Z") (git_url . "git://github.com/ExpediaDotCom/haystack-idl.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-idl.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-idl.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-idl") (homepage) (size . 60) (stargazers_count . 0) (watchers_count . 0) (language . "Go") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 7))) "master"))) ((state . "pending") (statuses) (sha . "d47e152010d28d7a50ec65b34084cbf16b90bfa1") (total_count . 0) (repository (id . 98961015) (name . "haystack-idl") (full_name . "ExpediaDotCom/haystack-idl") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-idl") (description . "Span and other data model definitions used by Haystack") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/deployments")) (commit_url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits/d47e152010d28d7a50ec65b34084cbf16b90bfa1") (url . "https://api.github.com/repos/ExpediaDotCom/haystack-idl/commits/d47e152010d28d7a50ec65b34084cbf16b90bfa1/status")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:jaxrs2-npe-missing-resource"))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-client-java"))) (quote ((number . 27)))))) ((url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27") (repository_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27/comments") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27/events") (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27") (id . 293224674) (number . 27) (title . "Only apply the jaxrs2 filter when we are supplied a Resource") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-31T16:30:23Z") (updated_at . "2018-01-31T16:30:23Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27") (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27") (diff_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27.diff") (patch_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27.patch")) (body . "Only apply the jaxrs2 filter when we are supplied a Resource
- prevent NPE for paths that don't supply either a resource class or method") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-17T21:38:48Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 155) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 1) (default_branch . "master"))) (quote ((url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27") (id . 166310182) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27") (diff_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27.diff") (patch_url . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27.patch") (issue_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27") (number . 27) (state . "open") (locked) (title . "Only apply the jaxrs2 filter when we are supplied a Resource") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (body . "Only apply the jaxrs2 filter when we are supplied a Resource
- prevent NPE for paths that don't supply either a resource class or method") (created_at . "2018-01-31T16:30:23Z") (updated_at . "2018-01-31T16:30:23Z") (closed_at) (merged_at) (merge_commit_sha) (assignee) (assignees) (requested_reviewers) (requested_teams) (milestone) (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27/commits") (review_comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27/comments") (review_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/comments{/number}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27/comments") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/74ffc04ed5ae57589052cfed2c0b12ae51f41c10") (head (label . "shellbj:jaxrs2-npe-missing-resource") (ref . "jaxrs2-npe-missing-resource") (sha . "74ffc04ed5ae57589052cfed2c0b12ae51f41c10") (user (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (repo (id . 103978941) (name . "haystack-client-java") (full_name . "shellbj/haystack-client-java") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork . t) (url . "https://api.github.com/repos/shellbj/haystack-client-java") (forks_url . "https://api.github.com/repos/shellbj/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack-client-java/deployments") (created_at . "2017-09-18T18:54:33Z") (updated_at . "2017-10-13T19:57:21Z") (pushed_at . "2018-01-31T16:29:17Z") (git_url . "git://github.com/shellbj/haystack-client-java.git") (ssh_url . "git@github.com:shellbj/haystack-client-java.git") (clone_url . "https://github.com/shellbj/haystack-client-java.git") (svn_url . "https://github.com/shellbj/haystack-client-java") (homepage) (size . 159) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master"))) (base (label . "ExpediaDotCom:master") (ref . "master") (sha . "9658be31b2802da54a6daf7dafe765f2b03d57f9") (user (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (repo (id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-17T21:38:48Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 155) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 1) (default_branch . "master"))) (_links (self (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27")) (html (href . "https://github.com/ExpediaDotCom/haystack-client-java/pull/27")) (issue (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27")) (comments (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/27/comments")) (review_comments (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27/comments")) (review_comment (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/comments{/number}")) (commits (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls/27/commits")) (statuses (href . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/74ffc04ed5ae57589052cfed2c0b12ae51f41c10"))) (author_association . "OWNER") (merged) (mergeable) (rebaseable) (mergeable_state . "unknown") (merged_by) (comments . 0) (review_comments . 0) (maintainer_can_modify . t) (commits . 1) (additions . 33) (deletions . 9) (changed_files . 2))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))) :head "personal:platform-diagnostics-blobs-splunk-restart"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "opentracing")) (name . "opentracing-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/253") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/253/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/253/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/253/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/253") (id . 289899480) (number . 253) (title . "Binary support design") (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-19T08:39:11Z") (updated_at . "2018-01-19T08:39:11Z") (closed_at) (author_association . "COLLABORATOR") (body . "A pair of previous PR have shown both the need to have a better Binary support than the one we have now, as well as the need to have a proper design process to achieve it (which should include proof of concept and actual sample implementations in some Tracers).

The requirements have been so far:

-  A size-variable output for `Tracer.inject()`.
- A simple and clear implementation.

Over a PR that happened prior to the 0.31 release, we came upon a specific design that is simple, but may still be incomplete - see #252 . This design so far can be summarized in the PR itself, but there are a few issues in the air.

### Issues/questions

* The current approach for `inject`/`extract` takes for granted that all data will be stored in memory first (in a buffer, that is), and only then passed to the transfer protocol. This is how currently `TEXT_MAP` and `HTTP_HEADERS` work. Is this something enough for `BINARY`? Or do we need to support a \"streaming\" version of this API?

* The need for calculating the size of the output (for `inject`) was also requested (mostly related to the 'streaming' request in the previous point).

* Another request was to expose, for the new `Binary` format, the actual `InputStream` and `OutputStream` (instead of `write` and `read`). The overall idea so far for this is that this would be an overkill, design wise, as it would expose operations that are not required at all for this case.

Please feel free to join an provide feedback (specially if you can manage to provide specific examples or a proof of concept). Hopefully we can roll this change as part of `0.32` ;)
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (id . 289890642) (number . 252) (title . "Binary format proposal.") (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-01-19T07:56:18Z") (updated_at . "2018-01-29T19:46:57Z") (closed_at) (author_association . "COLLABORATOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/252") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (diff_url . "https://github.com/opentracing/opentracing-java/pull/252.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/252.patch")) (body . "* Uses ByteBuffer to read/write data *synchronously*.
* write() is expected to read all passed data.
* read() may need many calls in case the buffer is not big enough.
* Adapter for InputStream/OutputStream.
* MockTracer BINARY propagator.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/251") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/251/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/251/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/251/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/251") (id . 289079044) (number . 251) (title . "Add a CHANGELOG file") (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 5) (created_at . "2018-01-16T22:32:31Z") (updated_at . "2018-01-31T14:24:07Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/251") (html_url . "https://github.com/opentracing/opentracing-java/pull/251") (diff_url . "https://github.com/opentracing/opentracing-java/pull/251.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/251.patch")) (body . "In the same manner as the golang changelog: https://github.com/opentracing/opentracing-go/blob/master/CHANGELOG.md")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/250") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/250/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/250/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/250/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/250") (id . 288262517) (number . 250) (title . "Tracer should be Closeable") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-12T22:19:00Z") (updated_at . "2018-01-12T22:19:00Z") (closed_at) (author_association . "NONE") (body . "I would like to guarantee that any Reporter's close at the end of my program
(in the case they are batching).
Tracer should implement Closeable similar to Jaeger's implementation.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/229") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/229/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/229/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/229/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/229") (id . 278728091) (number . 229) (title . "StringTag.Set(Span, StringTag) bug") (user (login . "ndrwrbgs") (id . 10776890) (avatar_url . "https://avatars3.githubusercontent.com/u/10776890?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ndrwrbgs") (html_url . "https://github.com/ndrwrbgs") (followers_url . "https://api.github.com/users/ndrwrbgs/followers") (following_url . "https://api.github.com/users/ndrwrbgs/following{/other_user}") (gists_url . "https://api.github.com/users/ndrwrbgs/gists{/gist_id}") (starred_url . "https://api.github.com/users/ndrwrbgs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ndrwrbgs/subscriptions") (organizations_url . "https://api.github.com/users/ndrwrbgs/orgs") (repos_url . "https://api.github.com/users/ndrwrbgs/repos") (events_url . "https://api.github.com/users/ndrwrbgs/events{/privacy}") (received_events_url . "https://api.github.com/users/ndrwrbgs/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-12-02T23:39:10Z") (updated_at . "2017-12-02T23:39:16Z") (closed_at) (author_association . "NONE") (body . "Was this supposed to set the key to the key?
```
    public void set(Span span, StringTag tag) {
        span.setTag(super.key, tag.key);
    }
```")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/224") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/224/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/224/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/224/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/224") (id . 278040008) (number . 224) (title . "please update maven central repository") (user (login . "dk900912") (id . 12511399) (avatar_url . "https://avatars3.githubusercontent.com/u/12511399?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dk900912") (html_url . "https://github.com/dk900912") (followers_url . "https://api.github.com/users/dk900912/followers") (following_url . "https://api.github.com/users/dk900912/following{/other_user}") (gists_url . "https://api.github.com/users/dk900912/gists{/gist_id}") (starred_url . "https://api.github.com/users/dk900912/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dk900912/subscriptions") (organizations_url . "https://api.github.com/users/dk900912/orgs") (repos_url . "https://api.github.com/users/dk900912/repos") (events_url . "https://api.github.com/users/dk900912/events{/privacy}") (received_events_url . "https://api.github.com/users/dk900912/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 5) (created_at . "2017-11-30T08:47:31Z") (updated_at . "2017-11-30T10:41:14Z") (closed_at) (author_association . "NONE") (body . "it does not contain ActiveSpan，git clone and mvn install to my local maven repository, then it works")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/222") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/222/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/222/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/222/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/222") (id . 277774758) (number . 222) (title . "Should 'ignoreActiveSpan' be changed to 'ignoreScope'") (user (login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-11-29T14:29:52Z") (updated_at . "2017-11-30T20:59:47Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "As mentioned here https://github.com/opentracing/opentracing-java/pull/219#discussion_r153752802 ?

Related to changes in 0.31.0 API discussed in #189 ")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/220") (id . 275438839) (number . 220) (title . "Allow Tracer access from Span") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-20T17:35:12Z") (updated_at . "2017-11-21T03:06:46Z") (closed_at) (author_association . "NONE") (body . "The `Tracer` object should be accessible via the Span.
This will be inline with Jaeger's [implementation](https://github.com/jaegertracing/jaeger-client-java/blob/master/jaeger-core/src/main/java/com/uber/jaeger/Tracer.java)  & with the OpenTracing [Golang](https://github.com/opentracing/opentracing-go/blob/master/span.go#L111) client.

In code that I am integrating Jaeger, it performs a lot of local tracing (inner spans) -- so I've found I've had to pass both the Tracer & the parent Span down every method (it is event loop code not threaded so ScopeManager stuff isn't helpful).

Seems like exposing Tracer would just help this --")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/218") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/218/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/218/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/218/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/218") (id . 273633496) (number . 218) (title . "How long will we maintain JDK 1.6 compatibility?") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-11-14T01:08:48Z") (updated_at . "2017-11-15T00:23:18Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (id . 271809027) (number . 214) (title . "Cover span handof scenarios in a bit more detail") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-07T12:09:04Z") (updated_at . "2017-11-14T00:21:43Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/214") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (diff_url . "https://github.com/opentracing/opentracing-java/pull/214.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/214.patch")) (body . "This came up because I had to ask in gitter.im about the details here, so I thought I'd capture it for everyone.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/212") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/212/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/212/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/212/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/212") (id . 270969994) (number . 212) (title . "Add SELF reference") (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 5) (created_at . "2017-11-03T13:00:05Z") (updated_at . "2017-11-06T08:47:22Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/212") (html_url . "https://github.com/opentracing/opentracing-java/pull/212") (diff_url . "https://github.com/opentracing/opentracing-java/pull/212.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/212.patch")) (body . "As discussed in https://github.com/opentracing/specification/issues/81")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (id . 270955287) (number . 211) (title . "Add Span#unwrap") (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 8) (created_at . "2017-11-03T11:59:24Z") (updated_at . "2017-11-11T04:15:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/211") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (diff_url . "https://github.com/opentracing/opentracing-java/pull/211.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/211.patch")) (body . "With `Span` wrappers becoming more and more popular (for example https://github.com/opentracing-contrib/java-api-extensions). There is a [growing need](https://github.com/openzipkin-contrib/brave-opentracing/blob/0869a9245aa78d5c9aafb71e16e7a130faf3547f/src/main/java/brave/opentracing/BraveActiveSpanSource.java#L52) to be able to get access to the underlying `Span` implementation without type casts which fail if there is a hierarchy of span wrappers.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/208") (id . 268583504) (number . 208) (title . "ActiveSpan is too Opaque") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-25T23:32:45Z") (updated_at . "2017-10-31T22:47:47Z") (closed_at) (author_association . "NONE") (body . "We'd like to be able to use the TraceId from the  ActiveSpan in three additional contexts

- [ ] In external logs, so we can silo sensitive data from the widely-accessed tracing console but still correlate
- [ ] In response headers, so that we can do browser integration and directly link to the resulting trace from our UI for developers
- [ ] In request headers when using external APIs that support correlation e.g with x-request-id, so that we can ask their support to examine a particular request.

Right now we cannot because traceId is considered an implementation detail, not part of the contract.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (id . 266756715) (number . 207) (title . "Debug ID in MDC") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2017-10-19T08:15:41Z") (updated_at . "2017-10-23T00:01:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/207") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (diff_url . "https://github.com/opentracing/opentracing-java/pull/207.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/207.patch")) (body . "An example of keeping Span's debug_id inside MDC - for version 0.31.0+

Puts active Spans's debug_id when scope is activated and cleans it
afterwards.

see also: https://github.com/opentracing/opentracing-java/issues/206")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/206") (id . 266747833) (number . 206) (title . "Slf4j MDC vs Scopes") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-10-19T07:40:48Z") (updated_at . "2018-01-04T01:01:14Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Disclaimer: I don't have a working implementation yet

TL;DR - It seems that a reasonable implementation is possible with Scopes if we wrap `Span` whenever we start a new `Scope` - which seems similar to the \"ActiveSpan\" concept from the previous version.

### Goals:
- I want debug_id (span-id + trace-id) of the active span to be available inside MDC
  - put debug_id inside MDC when scope is activated
  - when the active scope closes remove any MDC changes since the scope was activated

- When I define key-value attributes of the current (computation) context and put them into MDC then I want them to automatically propagate to other threads using OT in-process propagation. I want this because I don't want to write additional in-process propagation for MDC.
  - propagate custom MDC entries to child scopes (e.g. user_id)
  - add MDC entries as span tags

- When I define key-value attributes of the current (computation) context I want to set them both on MDC and active Span
  - when they are changed they should change both in MDC and the Span
  - if the value changes multiple times on a single Span it's ok if only the last tag value is reported when Span finishes

The first point (setting debug_id) is trivial - see PR https://github.com/opentracing/opentracing-java/pull/207. The only requirement is not to share scopes across threads which I assume would be invalid anyway.

When it comes to propagating MDC to other scopes and other threads things get complicated:

### Problem A:
In order to add MDC entries as tags in a child scope/thread we somehow need to pass MDC entries to that scope/thread. Right now the only entity that's passed is the Span:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\");

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\"
    }
});
```

That means that
1. we have to glue our data to the span instance
2. or pass something else - instead of Span or in addition to

##### Ad 1. Add data to Span instance
This seems doable. Whenever `startActive` is called and Scope is created we can wrap the Span with our SpanWithContext. Then we can store any extra information we need inside it.

When `scopeManager.activate(spanwithcontext)` is called we have all the information.

##### Ad 2. Pass something other than Span
This is solution similar to the one described in the java-examples - the Continuation/AutoFinishScope. Copying MDC manually also belong to this category.
Because of the fact that this approach does not use the official API it's a non-starter - it would require to instrument all concurrency libraries (rxjava, akka, hystrix, ...) with extra capabilities for propagating MDC, but we want to use existing OT-contrib libs which already do the propagation.

With Continuations in the official API this would be the ideal solution - we'd just pass the data inside the Continuation.

### Problem B:
How to put MDC data into the active Span?

The thing is that after setting MDC there won't be any additional OT calls so there is no obvious place where to put the code which would copy the value into the active Span.
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\"); // after scope created, no OT calls afterwards

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\")
    }
});
```

I see following options here:
- change MDC implementation to actually both set the value inside MDC and additionally in the active Span. This is what we did at my company. We replace the `MDCAdapter` using reflection to our own implementation which is opentracing-aware. It's a bit hacky but it works. I'd go for this approach but the upcoming [Slf4j 1.8 is modularized (because Java 9)](https://www.slf4j.org/faq.html#changesInVersion18) and we won't be able to reach into its internals anymore. Slf4j 1.8 uses `ServiceLoader` to load the implementation and I'm not sure if we'd be able to hijack this mechanism. All in all approaching it form this side does not look good.

- Another option is to stop using MDC class directly. Instead of
  ```java
  MDC.put(key, value)
  ```
  Use
  ```java
  Context.put(key, value)
  ```
  This allows us to put our logic inside the `Context`. Actually we already have such context - it's the Span. So the idea is to use:
  ```java
  Span.put(key, value)
  ```
  A real implementation could allow to configure which tags are also set in the MDC to avoid putting there everything.

### Problem C:
There is a single parent MDC \"state\" but multiple \"child\" ones starting at different times. What I mean is a situation like this:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

runInThread(() -> {
    Thread.sleep(1000)
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\" or \"y\" ?
    }
});
scope.span().setTag(\"key\", \"y\")
```

With Continuations it would be easy because of the `capture()` call which would be able to record the \"parent\" state.
I don't see a good solution for this right now and my approach would be to just ignore this. It only happens if someone changes the tag values and then passes the span to another thread. One workaround is to create a child span and then pass it:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

try(Scope outerChild = scopeManager.activate(scope.span())) {
    runInThread(() -> {
        Thread.sleep(1000)
        try(Scope child = scopeManager.activate(outerChild.span())) {
            MDC.get(\"key\") // guaranteed to be \"x\"
        }
    });
}

scope.span().setTag(\"key\", \"y\")
```

This is possible because despite scope.span() returning the same span from OT perspective, in reality it returns a different instance of `SpanWithContext` for different active scopes.

### Problem D:
- Need to react to Span start to be able to capture debug ids (or we could do that when scope activates)
- Need to react to Scope activation to mark the point to which revert MDC changes when Scope closes
- Need to react to Scope closing to revert MDC changes

Right now the only way is to wrap `SpanBuilder`. It would be great if the OT API allowed to do that without custom wrappers.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/204") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/204/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/204/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/204/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/204") (id . 264568157) (number . 204) (title . "Add tracing level") (user (login . "hloos") (id . 5079768) (avatar_url . "https://avatars1.githubusercontent.com/u/5079768?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hloos") (html_url . "https://github.com/hloos") (followers_url . "https://api.github.com/users/hloos/followers") (following_url . "https://api.github.com/users/hloos/following{/other_user}") (gists_url . "https://api.github.com/users/hloos/gists{/gist_id}") (starred_url . "https://api.github.com/users/hloos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hloos/subscriptions") (organizations_url . "https://api.github.com/users/hloos/orgs") (repos_url . "https://api.github.com/users/hloos/repos") (events_url . "https://api.github.com/users/hloos/events{/privacy}") (received_events_url . "https://api.github.com/users/hloos/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-11T12:32:48Z") (updated_at . "2017-11-01T21:10:37Z") (closed_at) (author_association . "NONE") (body . "Hi guys,

Unless I am mistaken, there is no tracing level in the current implementation.

However, as a user, it could be interesting to have different level for tracing. Example: BASIC / FINE / FINER / FINEST or something similar... which would come from user configuration.

Moreover, we should have a way to check the current supported level before triggering distributed tracing (span preparation, ...) - for performance purpose. I meanly think in async environments where ActiveSpan is hardly usable and where we need to build spans, start and stop them manually.

Also, sampling could be done differently according to the level (specified by user configuration as well) and could be done the earliest, when the user would check for tracing availability ->something like isTracingAvailable(Level level) - for perfomance purpose as well.

Let me know what are your thoughts about that, I can contribute if necessary.

Cheers !")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (id . 263302081) (number . 203) (title . "Clarify that Tracer.extract can return null") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-10-06T00:02:34Z") (updated_at . "2017-10-07T01:22:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/203") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (diff_url . "https://github.com/opentracing/opentracing-java/pull/203.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/203.patch")) (body . "According to https://github.com/opentracing/opentracing-java/issues/168 in practice the tracer implementations return null when `SpanContext` is not found in the carrier. This change documents this behaviour.

It also adds a dependency on `com.google.code.findbugs:jsr305` but it's optional, it is not listed in the pom and client applications do not need to depend on jsr305.

![Alt text](https://monosnap.com/file/T4szLzLxQA2T47KsbjNyt7Fk0YzSeH.png)

Compiling the code above with:
```
javac -Werror -Xlint:all -cp \\
/Users/mabn/.m2/repository/io/opentracing/opentracing-api/0.30.1-SNAPSHOT/opentracing-api-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-noop/0.30.1-SNAPSHOT/opentracing-noop-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-util/0.30.1-SNAPSHOT/opentracing-util-0.30.1-SNAPSHOT.jar \\
Main.java
```
procudes no warnings.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (id . 262969061) (number . 202) (title . "Add MDC support for basic ThreadLocalActiveSpan") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-05T00:13:19Z") (updated_at . "2017-10-09T23:52:38Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/202") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (diff_url . "https://github.com/opentracing/opentracing-java/pull/202.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/202.patch")) (body . "The documentation heavily mentions MDC in the interfaces but fails to
provide an example in the basic implementations of
ThreadLocalActiveSpan.

This commit adds this functionality via SLF4J which is a very popular
facade to many common logging libraries. As a result, a new dependency
is introduced on slf4j-api however I believe this to be a useful
dependency so that logging can be applied in a runtime agnostic fashion
if additional example implementations would like to be provided.

Fixes #201")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/201") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/201/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/201/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/201/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/201") (id . 262963540) (number . 201) (title . "Include MDC in default ActiveSpanSource") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-10-04T23:38:06Z") (updated_at . "2017-10-05T02:16:44Z") (closed_at) (author_association . "NONE") (body . "Why not include SLF4J concept of MDC in the default implementation of ActiveSpanSource?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/186") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/186/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/186/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/186/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/186") (id . 259866637) (number . 186) (title . "Make GlobalTracer uses more threadsafe") (user (login . "redijedi") (id . 83999) (avatar_url . "https://avatars3.githubusercontent.com/u/83999?v=4") (gravatar_id . "") (url . "https://api.github.com/users/redijedi") (html_url . "https://github.com/redijedi") (followers_url . "https://api.github.com/users/redijedi/followers") (following_url . "https://api.github.com/users/redijedi/following{/other_user}") (gists_url . "https://api.github.com/users/redijedi/gists{/gist_id}") (starred_url . "https://api.github.com/users/redijedi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/redijedi/subscriptions") (organizations_url . "https://api.github.com/users/redijedi/orgs") (repos_url . "https://api.github.com/users/redijedi/repos") (events_url . "https://api.github.com/users/redijedi/events{/privacy}") (received_events_url . "https://api.github.com/users/redijedi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 14) (created_at . "2017-09-22T16:17:31Z") (updated_at . "2017-09-25T18:08:14Z") (closed_at) (author_association . "NONE") (body . "I have a multithreaded app which causes some unpredictable behaviors when trying to get a globally registered tracer. A specific complication appears to have some relationship to byteman when using byteman rules. I have found that sometimes I call `GlobalTracer.get()` and receive a noop, while other times I get a tracer initialized from some byteman execution. I attempted to resolve this by conditionally registering the tracer myself:
```
        Tracer tracer;
        if (GlobalTracer.isRegistered()) {
            tracer = GlobalTracer.get();
        } else {
            tracer = TracerResolver.resolveTracer();
            GlobalTracer.register(tracer);
        }
```
However, this was affected by a race condition somewhere. I was able to resolve it by synchronizing on the `GlobalTracer.class`:
```
        Tracer tracer;
        synchronized (GlobalTracer.class) {
            if (GlobalTracer.isRegistered()) {
                tracer = GlobalTracer.get();
            } else {
                tracer = TracerResolver.resolveTracer();
                GlobalTracer.register(tracer);
            }
        }
```

but this seems like something that would be nice to incorporate into the API itself. Note that this still causes the agent to log an exception:
```
! java.lang.IllegalStateException: There is already a current global Tracer registered.
! at io.opentracing.util.GlobalTracer.register(GlobalTracer.java:92)
! at io.opentracing.contrib.agent.OpenTracingHelper.initTracer(OpenTracingHelper.java:80)
````
but it appears to work anyway.

I'll submit a method proposal for streamlining this shortly.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/185") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/185/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/185/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/185/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/185") (id . 259697343) (number . 185) (title . "Rename opentracing-examples") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-09-22T04:05:47Z") (updated_at . "2017-09-22T13:23:35Z") (closed_at) (author_association . "OWNER") (body . "The `opentracing-examples` is confusing for end users who come to this repository for OpenTracing API, because they are not actually \"examples\" of how it's used in the real apps, rather they are a testbed for various exoteric scenarios useful when changing the API itself.

Can we move it to something like opentracing-testbed?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/170") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/170/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/170/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/170/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/170") (id . 253192902) (number . 170) (title . "GlobalTracer breaks tests because it can be initialized only once") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 11) (created_at . "2017-08-27T22:00:56Z") (updated_at . "2017-11-30T15:41:30Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "`GlobalTracer.register` throws an exception when called again with another tracer instance. It makes unit tests fail if they happen to initialize GlobalTracer.

Has anyone run into this problem? I could run tests in separate JVM instances, but I'd rather not. Maybe adding a \"reset\" method would make it easier to use for testing purposes?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/169") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/169/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/169/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/169/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/169") (id . 252462019) (number . 169) (title . "TextMap and get(String key)") (user (login . "Scottmitch") (id . 7562868) (avatar_url . "https://avatars0.githubusercontent.com/u/7562868?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Scottmitch") (html_url . "https://github.com/Scottmitch") (followers_url . "https://api.github.com/users/Scottmitch/followers") (following_url . "https://api.github.com/users/Scottmitch/following{/other_user}") (gists_url . "https://api.github.com/users/Scottmitch/gists{/gist_id}") (starred_url . "https://api.github.com/users/Scottmitch/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Scottmitch/subscriptions") (organizations_url . "https://api.github.com/users/Scottmitch/orgs") (repos_url . "https://api.github.com/users/Scottmitch/repos") (events_url . "https://api.github.com/users/Scottmitch/events{/privacy}") (received_events_url . "https://api.github.com/users/Scottmitch/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 10) (created_at . "2017-08-24T01:34:59Z") (updated_at . "2017-11-12T20:32:10Z") (closed_at) (author_association . "NONE") (body . "The Tracer APIs demonstrate using TextMap as the carrier when extracting tracing information from HTTP headers [1]. However the TextMap API lacks a `get(String)` type API, and instead provides an iterator. This makes the cost of extracting values from a TextMap proportional to the number of headers and requires iterator creation for each extraction. Can someone explain the rational for the lack of a `get(..)` API on TextMap, and is there an alternative approach/carrier to use which does provide this type of API?

[1] https://github.com/opentracing/opentracing-java/blob/master/opentracing-api/src/main/java/io/opentracing/Tracer.java#L78")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/168") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/168/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/168/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/168/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/168") (id . 249270782) (number . 168) (title . "Shall we allow nullable return value when no SpanContext extracted?") (user (login . "tutufool") (id . 1931469) (avatar_url . "https://avatars1.githubusercontent.com/u/1931469?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tutufool") (html_url . "https://github.com/tutufool") (followers_url . "https://api.github.com/users/tutufool/followers") (following_url . "https://api.github.com/users/tutufool/following{/other_user}") (gists_url . "https://api.github.com/users/tutufool/gists{/gist_id}") (starred_url . "https://api.github.com/users/tutufool/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tutufool/subscriptions") (organizations_url . "https://api.github.com/users/tutufool/orgs") (repos_url . "https://api.github.com/users/tutufool/repos") (events_url . "https://api.github.com/users/tutufool/events{/privacy}") (received_events_url . "https://api.github.com/users/tutufool/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 8) (created_at . "2017-08-10T08:30:22Z") (updated_at . "2017-08-18T20:13:51Z") (closed_at) (author_association . "NONE") (body . "https://github.com/opentracing/opentracing-java/blob/578d4e74d9b16c18268717e537000a88d7e6779c/opentracing-api/src/main/java/io/opentracing/Tracer.java#L95

You may check this issue for details:

https://github.com/openzipkin/brave-opentracing/issues/49

Thanks
Leon
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/165") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/165/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/165/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/165/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/165") (id . 242841836) (number . 165) (title . "ThreadLocalActiveSpan.Continuation.activate() overuse should error") (user (login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-07-13T21:55:04Z") (updated_at . "2017-11-30T21:07:56Z") (closed_at) (author_association . "NONE") (body . "The [ActiveSpan javadoc](https://github.com/opentracing/opentracing-java/blob/master/opentracing-api/src/main/java/io/opentracing/ActiveSpan.java#L101) states that:
`It is an error to call activate() more than once on a single Continuation instance`

I propose that this should be asserted by `ThreadLocalActiveSpan` by returning a runtime exception if used more than once.  [Currently](https://github.com/opentracing/opentracing-java/blob/master/opentracing-util/src/main/java/io/opentracing/util/ThreadLocalActiveSpan.java#L145) it only returns a new `ThreadLocalActiveSpan`.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/159") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/159/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/159/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/159/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/159") (id . 237248002) (number . 159) (title . "ThreadLocalActiveSpan.deactivate()") (user (login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-06-20T15:16:42Z") (updated_at . "2017-10-08T18:51:48Z") (closed_at) (author_association . "OWNER") (body . "`ThreadLocalActiveSpan.deactivate()` does not deactivate/finish span when it is not currently active span:
https://github.com/opentracing/opentracing-java/blob/master/opentracing-util/src/main/java/io/opentracing/util/ThreadLocalActiveSpan.java#L50

Problems:
* response interceptors sometimes run in a different thread, therefore it makes it impossible to deactivate the span (e.g. async jax-rs)
* if a user accidentally does not deactivate local span, span created by instrumentation is not finished

I would like to see what others think and what issues they faced. ")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/155") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/155/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/155/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/155/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/155") (id . 234442022) (number . 155) (title . "Mechanism to understand when ActiveSpan has been finished") (user (login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 13) (created_at . "2017-06-08T07:58:45Z") (updated_at . "2017-06-21T10:33:34Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Currently, if writing a wrapper tracer, there is no way to know when the ActiveSpan has actually been finished, as the application (or framework integrations) simply call `deactivate`, but as this is ref counted, any call to this method could potentially finish the span.

Options are:
a) The wrapper tracer would also need to reference count
b) The `deactivate` method could return a boolean indicating whether the associated `ActiveSpan` has been finished
c) The BaseSpan could support an `isFinished` method which could be checked after `deactivate`
d) Implement some active span lifecycle support
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/154") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/154/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/154/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/154/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/154") (id . 234328364) (number . 154) (title . "Confirm successful \"prod\" usage of the new active span API") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1") (html_url . "https://github.com/opentracing/opentracing-java/milestone/1") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1/labels") (id . 2427599) (number . 1) (title . "1.0.0 release") (description . "") (creator (login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin)) (open_issues . 3) (closed_issues . 9) (state . "open") (created_at . "2017-04-01T21:44:04Z") (updated_at . "2017-12-06T19:04:10Z") (due_on) (closed_at)) (comments . 9) (created_at . "2017-06-07T20:13:20Z") (updated_at . "2017-11-03T06:46:25Z") (closed_at) (author_association . "OWNER") (body . "This is a cover issue to keep track of various efforts to incorporate the new ActiveSpan API into existing instrumentations.

  * [x] Jaeger client [upgrade to 0.30](https://github.com/uber/jaeger-client-java/issues/179) and Jaeger instrumentation upgrade [to use active span](https://github.com/uber/jaeger-client-java/issues/182)
  * [x] [Brave upgrade to 0.30](https://github.com/openzipkin/brave-opentracing/pull/43)")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/134") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/134/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/134/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/134/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/134") (id . 228004738) (number . 134) (title . "Should there be such a thing as a `null` activeSpan()? Or SpanContext?") (user (login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1") (html_url . "https://github.com/opentracing/opentracing-java/milestone/1") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1/labels") (id . 2427599) (number . 1) (title . "1.0.0 release") (description . "") (creator (login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin)) (open_issues . 3) (closed_issues . 9) (state . "open") (created_at . "2017-04-01T21:44:04Z") (updated_at . "2017-12-06T19:04:10Z") (due_on) (closed_at)) (comments . 35) (created_at . "2017-05-11T14:09:46Z") (updated_at . "2017-06-22T16:48:15Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Now that #115 is in, we need to contend with the scenario where `ActiveSpanSource.activeSpan()` / `Tracer.activeSpan()` returns `null`.

As I see it, there are three options.

1. Do nothing. Callers check for `null` and get on with their lives.
1. Specify that implementations use some sort of `NoopSpan`, but do *not* specify which
1. Specify that implementations use a particular *instance* of a particular object... maybe `NoSpan.INSTANCE` instead of `NoopSpan.INSTANCE`. I.e., the caller could do equality testing and be guaranteed to check for the \"no-span Span\" without adding a new `isReal()` sort of method to the `Span` interface. Of course the various tagging methods would do nothing here.

There is the related case of `Tracer.extract()` when there's, well, nothing to extract. Should it return null, an unspecified non-null `SpanContext`, or a particular SpanContext instance to represent the case of being absent?

See also https://github.com/opentracing/opentracing-java/pull/115/files/bf4606c596955c7e353cfa92bba372d5ecd2e206#r114108185 and https://github.com/opentracing/opentracing-java/pull/115/files/bf4606c596955c7e353cfa92bba372d5ecd2e206#r109821172 where this came up. And also https://github.com/opentracing/opentracing-java/pull/111#discussion_r111682133 .")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/133") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/133/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/133/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/133/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/133") (id . 227937687) (number . 133) (title . "Make GlobalTracer easier to use with java 8 (depends on #115)") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-05-11T09:53:39Z") (updated_at . "2017-05-28T23:03:48Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "In #115 `GlobalTracer` gets a new method:
```java
* @return the {@link ActiveSpan active span}, or null if none could be found.
*/
ActiveSpan activeSpan();
```

One of the common uses of this method will be adding tags/logs to the active span **if present**, like this:
```java
if(GlobalTracer.activeSpan() != null) {
   GlobalTracer.activeSpan().setTag(\"tagged\", true);
}
```

It's tempting to declare the return type as `Optional` and instead be able to do this:
```java
GlobalTracer.activeSpan().ifPresent(span -> {
    span.setTag(\"tagged\", true)
});
```

But I guess we can't use java 8 in this project. So instead I propose one of two options:
1. Add a method taking a `Runnable`-like interface (something which allows throwing exceptions maybe?) and make this possible:
    ```
    GlobalTracer.withActiveSpan(span -> span.setTag(\"tagged\", true))
    ```
    I'm not sure about the naming
2. Implement simplified `Optional<ActiveSpan>` and return that. `activeSpan()` comes from `ActiveSpanSource` and I'm not sure if it should be touched, so it would need to be returned from a new method.

I'd go with option 1.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/54") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/54/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/54/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/54/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/54") (id . 176425568) (number . 54) (title . "Start maintaining CHANGELOG.md") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1") (html_url . "https://github.com/opentracing/opentracing-java/milestone/1") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones/1/labels") (id . 2427599) (number . 1) (title . "1.0.0 release") (description . "") (creator (login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin)) (open_issues . 3) (closed_issues . 9) (state . "open") (created_at . "2017-04-01T21:44:04Z") (updated_at . "2017-12-06T19:04:10Z") (due_on) (closed_at)) (comments . 1) (created_at . "2016-09-12T16:47:25Z") (updated_at . "2017-06-05T04:28:03Z") (closed_at) (author_association . "OWNER") (body . "https://github.com/opentracing/opentracing-java/pull/51#issuecomment-246407394
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/14") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/14/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/14/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/14/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/14") (id . 137980318) (number . 14) (title . "Apply the builder pattern to the Span.log(..) methods.") (user (login . "michaelsembwever") (id . 559444) (avatar_url . "https://avatars2.githubusercontent.com/u/559444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelsembwever") (html_url . "https://github.com/michaelsembwever") (followers_url . "https://api.github.com/users/michaelsembwever/followers") (following_url . "https://api.github.com/users/michaelsembwever/following{/other_user}") (gists_url . "https://api.github.com/users/michaelsembwever/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelsembwever/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelsembwever/subscriptions") (organizations_url . "https://api.github.com/users/michaelsembwever/orgs") (repos_url . "https://api.github.com/users/michaelsembwever/repos") (events_url . "https://api.github.com/users/michaelsembwever/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelsembwever/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-03-02T20:16:45Z") (updated_at . "2016-03-07T22:32:42Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/14") (html_url . "https://github.com/opentracing/opentracing-java/pull/14") (diff_url . "https://github.com/opentracing/opentracing-java/pull/14.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/14.patch")) (body . "Similar to what was done to Tracer.createSpan(..) --> Tracer.buildSpan(..)

Again I don't know how far we can interpret the Specification.

But taking this approach does make it cleaner to add logging capabilities afterwards, imo.
"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)))))) ((login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin) (name . "Carlos Alberto Cortez") (company) (blog . "") (location . "Europe") (email . "calberto.cortez@gmail.com") (hireable) (bio) (public_repos . 34) (public_gists . 63) (followers . 17) (following . 0) (created_at . "2010-04-29T23:16:35Z") (updated_at . "2018-01-23T16:49:17Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)))))) ((login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin) (name . "Ted Young") (company . "@lightstep, @opentracing") (blog . "https://twitter.com/tedsuo") (location . "San Francisco") (email . "ted@lightstep.com") (hireable) (bio . "Tracing and Distributed Systems Specialist at LightStep.") (public_repos . 43) (public_gists . 19) (followers . 88) (following . 10) (created_at . "2008-09-11T00:24:58Z") (updated_at . "2018-01-26T19:43:31Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)))))) ((login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin) (name . "Robert Collins") (company . "@vmware") (blog . "") (location) (email) (hireable) (bio) (public_repos . 84) (public_gists . 11) (followers . 38) (following . 8) (created_at . "2010-11-28T05:00:52Z") (updated_at . "2018-01-21T07:28:23Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)))))) ((login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin) (name . "Felix ") (company . "@elastic") (blog . "") (location . "Munich, Germany") (email) (hireable) (bio) (public_repos . 36) (public_gists . 3) (followers . 47) (following . 11) (created_at . "2012-08-16T14:09:16Z") (updated_at . "2018-01-30T14:37:27Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)))))) ((login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin) (name . "Marcin Biegan") (company . "@basecrm @futuresimple ") (blog . "") (location) (email . "marcin.biegan@getbase.com") (hireable) (bio) (public_repos . 18) (public_gists . 12) (followers . 8) (following . 2) (created_at . "2012-11-09T07:49:06Z") (updated_at . "2017-12-06T23:36:07Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)))))) ((login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin) (name . "Farid Zakaria") (company) (blog . "www.fzakaria.com") (location . "San Jose, CA") (email . "farid.m.zakaria@gmail.com") (hireable . t) (bio . "Engineering. Where the noble semiskilled laborers execute the vision of those who think and dream. Hello, Oompa-Loompas of science.") (public_repos . 73) (public_gists . 15) (followers . 50) (following . 8) (created_at . "2011-02-07T17:01:07Z") (updated_at . "2017-11-25T17:36:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "michaelsembwever") (id . 559444) (avatar_url . "https://avatars2.githubusercontent.com/u/559444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelsembwever") (html_url . "https://github.com/michaelsembwever") (followers_url . "https://api.github.com/users/michaelsembwever/followers") (following_url . "https://api.github.com/users/michaelsembwever/following{/other_user}") (gists_url . "https://api.github.com/users/michaelsembwever/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelsembwever/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelsembwever/subscriptions") (organizations_url . "https://api.github.com/users/michaelsembwever/orgs") (repos_url . "https://api.github.com/users/michaelsembwever/repos") (events_url . "https://api.github.com/users/michaelsembwever/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelsembwever/received_events") (type . "User") (site_admin)))))) ((login . "michaelsembwever") (id . 559444) (avatar_url . "https://avatars2.githubusercontent.com/u/559444?v=4") (gravatar_id . "") (url . "https://api.github.com/users/michaelsembwever") (html_url . "https://github.com/michaelsembwever") (followers_url . "https://api.github.com/users/michaelsembwever/followers") (following_url . "https://api.github.com/users/michaelsembwever/following{/other_user}") (gists_url . "https://api.github.com/users/michaelsembwever/gists{/gist_id}") (starred_url . "https://api.github.com/users/michaelsembwever/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/michaelsembwever/subscriptions") (organizations_url . "https://api.github.com/users/michaelsembwever/orgs") (repos_url . "https://api.github.com/users/michaelsembwever/repos") (events_url . "https://api.github.com/users/michaelsembwever/events{/privacy}") (received_events_url . "https://api.github.com/users/michaelsembwever/received_events") (type . "User") (site_admin) (name . "mck") (company . "http://thelastpickle.com") (blog . "http://about.me/wever") (location . "Sydney, Australia") (email . "mick@thelastpickle.com") (hireable) (bio . "lucky and eternally grateful for it.") (public_repos . 20) (public_gists . 2) (followers . 47) (following . 27) (created_at . "2011-01-12T12:50:07Z") (updated_at . "2018-01-10T23:28:59Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ndrwrbgs") (id . 10776890) (avatar_url . "https://avatars3.githubusercontent.com/u/10776890?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ndrwrbgs") (html_url . "https://github.com/ndrwrbgs") (followers_url . "https://api.github.com/users/ndrwrbgs/followers") (following_url . "https://api.github.com/users/ndrwrbgs/following{/other_user}") (gists_url . "https://api.github.com/users/ndrwrbgs/gists{/gist_id}") (starred_url . "https://api.github.com/users/ndrwrbgs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ndrwrbgs/subscriptions") (organizations_url . "https://api.github.com/users/ndrwrbgs/orgs") (repos_url . "https://api.github.com/users/ndrwrbgs/repos") (events_url . "https://api.github.com/users/ndrwrbgs/events{/privacy}") (received_events_url . "https://api.github.com/users/ndrwrbgs/received_events") (type . "User") (site_admin)))))) ((login . "ndrwrbgs") (id . 10776890) (avatar_url . "https://avatars3.githubusercontent.com/u/10776890?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ndrwrbgs") (html_url . "https://github.com/ndrwrbgs") (followers_url . "https://api.github.com/users/ndrwrbgs/followers") (following_url . "https://api.github.com/users/ndrwrbgs/following{/other_user}") (gists_url . "https://api.github.com/users/ndrwrbgs/gists{/gist_id}") (starred_url . "https://api.github.com/users/ndrwrbgs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ndrwrbgs/subscriptions") (organizations_url . "https://api.github.com/users/ndrwrbgs/orgs") (repos_url . "https://api.github.com/users/ndrwrbgs/repos") (events_url . "https://api.github.com/users/ndrwrbgs/events{/privacy}") (received_events_url . "https://api.github.com/users/ndrwrbgs/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location . "Seattle, WA") (email) (hireable) (bio) (public_repos . 5) (public_gists . 0) (followers . 0) (following . 5) (created_at . "2015-01-30T18:05:09Z") (updated_at . "2018-01-12T23:28:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dk900912") (id . 12511399) (avatar_url . "https://avatars3.githubusercontent.com/u/12511399?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dk900912") (html_url . "https://github.com/dk900912") (followers_url . "https://api.github.com/users/dk900912/followers") (following_url . "https://api.github.com/users/dk900912/following{/other_user}") (gists_url . "https://api.github.com/users/dk900912/gists{/gist_id}") (starred_url . "https://api.github.com/users/dk900912/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dk900912/subscriptions") (organizations_url . "https://api.github.com/users/dk900912/orgs") (repos_url . "https://api.github.com/users/dk900912/repos") (events_url . "https://api.github.com/users/dk900912/events{/privacy}") (received_events_url . "https://api.github.com/users/dk900912/received_events") (type . "User") (site_admin)))))) ((login . "dk900912") (id . 12511399) (avatar_url . "https://avatars3.githubusercontent.com/u/12511399?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dk900912") (html_url . "https://github.com/dk900912") (followers_url . "https://api.github.com/users/dk900912/followers") (following_url . "https://api.github.com/users/dk900912/following{/other_user}") (gists_url . "https://api.github.com/users/dk900912/gists{/gist_id}") (starred_url . "https://api.github.com/users/dk900912/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dk900912/subscriptions") (organizations_url . "https://api.github.com/users/dk900912/orgs") (repos_url . "https://api.github.com/users/dk900912/repos") (events_url . "https://api.github.com/users/dk900912/events{/privacy}") (received_events_url . "https://api.github.com/users/dk900912/received_events") (type . "User") (site_admin) (name) (company . "CMSS") (blog . "") (location . "Suzhou China") (email . "dukui@cmss.chinamobile.com") (hireable) (bio . "Coder") (public_repos . 4) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2015-05-19T10:44:37Z") (updated_at . "2017-12-26T20:47:41Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)))))) ((login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin) (name . "Gary Brown") (company . "Red Hat") (blog . "") (location . "UK") (email . "github@brownuk.com") (hireable) (bio) (public_repos . 123) (public_gists . 1) (followers . 21) (following . 3) (created_at . "2009-12-08T18:24:17Z") (updated_at . "2018-01-18T18:16:33Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)))))) ((login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin) (name . "Yuri Shkuro") (company . "Uber Techonlogies (@uber)") (blog . "") (location . "New York") (email) (hireable) (bio . "Tech lead for Jaeger, Uber's distributed tracing system.") (public_repos . 13) (public_gists . 3) (followers . 118) (following . 2) (created_at . "2013-02-10T04:27:05Z") (updated_at . "2017-12-19T16:59:37Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "hloos") (id . 5079768) (avatar_url . "https://avatars1.githubusercontent.com/u/5079768?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hloos") (html_url . "https://github.com/hloos") (followers_url . "https://api.github.com/users/hloos/followers") (following_url . "https://api.github.com/users/hloos/following{/other_user}") (gists_url . "https://api.github.com/users/hloos/gists{/gist_id}") (starred_url . "https://api.github.com/users/hloos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hloos/subscriptions") (organizations_url . "https://api.github.com/users/hloos/orgs") (repos_url . "https://api.github.com/users/hloos/repos") (events_url . "https://api.github.com/users/hloos/events{/privacy}") (received_events_url . "https://api.github.com/users/hloos/received_events") (type . "User") (site_admin)))))) ((login . "hloos") (id . 5079768) (avatar_url . "https://avatars1.githubusercontent.com/u/5079768?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hloos") (html_url . "https://github.com/hloos") (followers_url . "https://api.github.com/users/hloos/followers") (following_url . "https://api.github.com/users/hloos/following{/other_user}") (gists_url . "https://api.github.com/users/hloos/gists{/gist_id}") (starred_url . "https://api.github.com/users/hloos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hloos/subscriptions") (organizations_url . "https://api.github.com/users/hloos/orgs") (repos_url . "https://api.github.com/users/hloos/repos") (events_url . "https://api.github.com/users/hloos/events{/privacy}") (received_events_url . "https://api.github.com/users/hloos/received_events") (type . "User") (site_admin) (name . "Hugo Loos") (company) (blog . "") (location . "Paris") (email . "hloos@outlook.com") (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 0) (following . 5) (created_at . "2013-07-24T08:46:28Z") (updated_at . "2017-10-13T13:55:55Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "redijedi") (id . 83999) (avatar_url . "https://avatars3.githubusercontent.com/u/83999?v=4") (gravatar_id . "") (url . "https://api.github.com/users/redijedi") (html_url . "https://github.com/redijedi") (followers_url . "https://api.github.com/users/redijedi/followers") (following_url . "https://api.github.com/users/redijedi/following{/other_user}") (gists_url . "https://api.github.com/users/redijedi/gists{/gist_id}") (starred_url . "https://api.github.com/users/redijedi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/redijedi/subscriptions") (organizations_url . "https://api.github.com/users/redijedi/orgs") (repos_url . "https://api.github.com/users/redijedi/repos") (events_url . "https://api.github.com/users/redijedi/events{/privacy}") (received_events_url . "https://api.github.com/users/redijedi/received_events") (type . "User") (site_admin)))))) ((login . "redijedi") (id . 83999) (avatar_url . "https://avatars3.githubusercontent.com/u/83999?v=4") (gravatar_id . "") (url . "https://api.github.com/users/redijedi") (html_url . "https://github.com/redijedi") (followers_url . "https://api.github.com/users/redijedi/followers") (following_url . "https://api.github.com/users/redijedi/following{/other_user}") (gists_url . "https://api.github.com/users/redijedi/gists{/gist_id}") (starred_url . "https://api.github.com/users/redijedi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/redijedi/subscriptions") (organizations_url . "https://api.github.com/users/redijedi/orgs") (repos_url . "https://api.github.com/users/redijedi/repos") (events_url . "https://api.github.com/users/redijedi/events{/privacy}") (received_events_url . "https://api.github.com/users/redijedi/received_events") (type . "User") (site_admin) (name . "Todd") (company . "Development Sprint") (blog . "") (location) (email) (hireable) (bio) (public_repos . 22) (public_gists . 1) (followers . 5) (following . 0) (created_at . "2009-05-13T07:37:26Z") (updated_at . "2018-01-24T20:56:01Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "Scottmitch") (id . 7562868) (avatar_url . "https://avatars0.githubusercontent.com/u/7562868?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Scottmitch") (html_url . "https://github.com/Scottmitch") (followers_url . "https://api.github.com/users/Scottmitch/followers") (following_url . "https://api.github.com/users/Scottmitch/following{/other_user}") (gists_url . "https://api.github.com/users/Scottmitch/gists{/gist_id}") (starred_url . "https://api.github.com/users/Scottmitch/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Scottmitch/subscriptions") (organizations_url . "https://api.github.com/users/Scottmitch/orgs") (repos_url . "https://api.github.com/users/Scottmitch/repos") (events_url . "https://api.github.com/users/Scottmitch/events{/privacy}") (received_events_url . "https://api.github.com/users/Scottmitch/received_events") (type . "User") (site_admin)))))) ((login . "Scottmitch") (id . 7562868) (avatar_url . "https://avatars0.githubusercontent.com/u/7562868?v=4") (gravatar_id . "") (url . "https://api.github.com/users/Scottmitch") (html_url . "https://github.com/Scottmitch") (followers_url . "https://api.github.com/users/Scottmitch/followers") (following_url . "https://api.github.com/users/Scottmitch/following{/other_user}") (gists_url . "https://api.github.com/users/Scottmitch/gists{/gist_id}") (starred_url . "https://api.github.com/users/Scottmitch/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/Scottmitch/subscriptions") (organizations_url . "https://api.github.com/users/Scottmitch/orgs") (repos_url . "https://api.github.com/users/Scottmitch/repos") (events_url . "https://api.github.com/users/Scottmitch/events{/privacy}") (received_events_url . "https://api.github.com/users/Scottmitch/received_events") (type . "User") (site_admin) (name . "Scott Mitchell") (company . "Apple, Inc.") (blog . "") (location . "Cupertino, CA") (email) (hireable) (bio) (public_repos . 13) (public_gists . 2) (followers . 168) (following . 10) (created_at . "2014-05-12T21:45:16Z") (updated_at . "2018-02-01T19:34:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tutufool") (id . 1931469) (avatar_url . "https://avatars1.githubusercontent.com/u/1931469?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tutufool") (html_url . "https://github.com/tutufool") (followers_url . "https://api.github.com/users/tutufool/followers") (following_url . "https://api.github.com/users/tutufool/following{/other_user}") (gists_url . "https://api.github.com/users/tutufool/gists{/gist_id}") (starred_url . "https://api.github.com/users/tutufool/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tutufool/subscriptions") (organizations_url . "https://api.github.com/users/tutufool/orgs") (repos_url . "https://api.github.com/users/tutufool/repos") (events_url . "https://api.github.com/users/tutufool/events{/privacy}") (received_events_url . "https://api.github.com/users/tutufool/received_events") (type . "User") (site_admin)))))) ((login . "tutufool") (id . 1931469) (avatar_url . "https://avatars1.githubusercontent.com/u/1931469?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tutufool") (html_url . "https://github.com/tutufool") (followers_url . "https://api.github.com/users/tutufool/followers") (following_url . "https://api.github.com/users/tutufool/following{/other_user}") (gists_url . "https://api.github.com/users/tutufool/gists{/gist_id}") (starred_url . "https://api.github.com/users/tutufool/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tutufool/subscriptions") (organizations_url . "https://api.github.com/users/tutufool/orgs") (repos_url . "https://api.github.com/users/tutufool/repos") (events_url . "https://api.github.com/users/tutufool/events{/privacy}") (received_events_url . "https://api.github.com/users/tutufool/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location . "Shanghai") (email) (hireable) (bio) (public_repos . 17) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2012-07-06T08:38:28Z") (updated_at . "2017-11-27T10:33:45Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)))))) ((login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin) (name . "Tyler Benson") (company . "@datadog") (blog . "") (location . "Portland, OR (PDX)") (email . "tylerbenson@gmail.com") (hireable) (bio) (public_repos . 18) (public_gists . 1) (followers . 7) (following . 2) (created_at . "2011-04-17T06:20:03Z") (updated_at . "2018-01-29T02:49:12Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin)))))) ((login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin) (name . "Pavol Loffay") (company . "Red Hat") (blog . "https://pavolloffay.github.io/website/") (location) (email . "p.loffay@gmail.com") (hireable . t) (bio . "I'm working on @hawkular and @opentracing") (public_repos . 100) (public_gists . 30) (followers . 33) (following . 28) (created_at . "2013-10-05T16:09:05Z") (updated_at . "2018-01-23T13:50:56Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin)))))) ((login . "bhs") (id . 2251553) (avatar_url . "https://avatars2.githubusercontent.com/u/2251553?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bhs") (html_url . "https://github.com/bhs") (followers_url . "https://api.github.com/users/bhs/followers") (following_url . "https://api.github.com/users/bhs/following{/other_user}") (gists_url . "https://api.github.com/users/bhs/gists{/gist_id}") (starred_url . "https://api.github.com/users/bhs/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bhs/subscriptions") (organizations_url . "https://api.github.com/users/bhs/orgs") (repos_url . "https://api.github.com/users/bhs/repos") (events_url . "https://api.github.com/users/bhs/events{/privacy}") (received_events_url . "https://api.github.com/users/bhs/received_events") (type . "User") (site_admin) (name . "Ben Sigelman") (company . "OpenTracing, LightStep") (blog . "http://opentracing.io") (location . "San Francisco") (email) (hireable) (bio . "I like self-describing software systems, semantic depth, approachable APIs, and long walks on the beach. I mostly work on @opentracing.") (public_repos . 15) (public_gists . 2) (followers . 56) (following . 0) (created_at . "2012-08-30T22:47:09Z") (updated_at . "2017-12-10T01:00:27Z")) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 220)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/220") (id . 275438839) (number . 220) (title . "Allow Tracer access from Span") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-20T17:35:12Z") (updated_at . "2017-11-21T03:06:46Z") (closed_at) (author_association . "NONE") (body . "The `Tracer` object should be accessible via the Span.
This will be inline with Jaeger's [implementation](https://github.com/jaegertracing/jaeger-client-java/blob/master/jaeger-core/src/main/java/com/uber/jaeger/Tracer.java)  & with the OpenTracing [Golang](https://github.com/opentracing/opentracing-go/blob/master/span.go#L111) client.

In code that I am integrating Jaeger, it performs a lot of local tracing (inner spans) -- so I've found I've had to pass both the Tracer & the parent Span down every method (it is event loop code not threaded so ScopeManager stuff isn't helpful).

Seems like exposing Tracer would just help this --") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/220") (id . 275438839) (number . 220) (title . "Allow Tracer access from Span") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-20T17:35:12Z") (updated_at . "2017-11-21T03:06:46Z") (closed_at) (author_association . "NONE") (body . "The `Tracer` object should be accessible via the Span.
This will be inline with Jaeger's [implementation](https://github.com/jaegertracing/jaeger-client-java/blob/master/jaeger-core/src/main/java/com/uber/jaeger/Tracer.java)  & with the OpenTracing [Golang](https://github.com/opentracing/opentracing-go/blob/master/span.go#L111) client.

In code that I am integrating Jaeger, it performs a lot of local tracing (inner spans) -- so I've found I've had to pass both the Tracer & the parent Span down every method (it is event loop code not threaded so ScopeManager stuff isn't helpful).

Seems like exposing Tracer would just help this --"))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345830333") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345830333") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345830333) (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (created_at . "2017-11-20T21:00:39Z") (updated_at . "2017-11-20T21:00:39Z") (author_association . "COLLABORATOR") (body . "I agree on this - and as a matter of fact, the Python API has this (a Span has a reference to its Tracer). I'm wondering if there's some kind of restriction/limitation on why it hasn't been done here?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345834662") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345834662") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345834662) (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (created_at . "2017-11-20T21:17:07Z") (updated_at . "2017-11-20T21:17:07Z") (author_association . "NONE") (body . "@carlosalberto its pretty easy -- i'm happy to submit PR although its a line change I think its easy.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345839162") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345839162") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345839162) (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (created_at . "2017-11-20T21:34:21Z") (updated_at . "2017-11-20T21:34:21Z") (author_association . "COLLABORATOR") (body . "The code change is trivial, but Tracer writers must agree on this first (in case there's a reason or situation where they can't add this). @yurishkuro maybe can bring some feedback? ;)")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345868417") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345868417") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345868417) (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (created_at . "2017-11-20T23:42:46Z") (updated_at . "2017-11-20T23:42:46Z") (author_association . "OWNER") (body . "speaking for Jaeger I don't have a problem with it, but it is a breaking change of sorts (breaks existing interface implementations), so we should get more eyes/votes on it.

cc @tedsuo @wu-sheng @felixbarny ")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345876232") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345876232") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345876232) (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (created_at . "2017-11-21T00:27:02Z") (updated_at . "2017-11-21T00:27:02Z") (author_association . "NONE") (body . "Should be an easy upgrade for customers though since it doesn't change/remove any existing API signatures (simply adds to the interface).

The benefit that Jaeger already has an accessor means that its likely even more compliant mixed versions (if a client is running with incorrect dependency versions).

A nit would be to make sure `@Override` is added to the Jaeger Tracer ")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/345902807") (html_url . "https://github.com/opentracing/opentracing-java/issues/220#issuecomment-345902807") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/220") (id . 345902807) (user (login . "wu-sheng") (id . 5441976) (avatar_url . "https://avatars2.githubusercontent.com/u/5441976?v=4") (gravatar_id . "") (url . "https://api.github.com/users/wu-sheng") (html_url . "https://github.com/wu-sheng") (followers_url . "https://api.github.com/users/wu-sheng/followers") (following_url . "https://api.github.com/users/wu-sheng/following{/other_user}") (gists_url . "https://api.github.com/users/wu-sheng/gists{/gist_id}") (starred_url . "https://api.github.com/users/wu-sheng/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/wu-sheng/subscriptions") (organizations_url . "https://api.github.com/users/wu-sheng/orgs") (repos_url . "https://api.github.com/users/wu-sheng/repos") (events_url . "https://api.github.com/users/wu-sheng/events{/privacy}") (received_events_url . "https://api.github.com/users/wu-sheng/received_events") (type . "User") (site_admin)) (created_at . "2017-11-21T03:06:46Z") (updated_at . "2017-11-21T03:06:46Z") (author_association . "MEMBER") (body . "For skywalking, this API has no good or bad influence. As an auto instrument agent, we keep the context in the shadow. All instances of skywalking tracer are the same. But  accessing tracer from span, means you have multi tracer instances. Is this common? or why need different tracer instances? For different strategy or ?"))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 208)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/208") (id . 268583504) (number . 208) (title . "ActiveSpan is too Opaque") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-25T23:32:45Z") (updated_at . "2017-10-31T22:47:47Z") (closed_at) (author_association . "NONE") (body . "We'd like to be able to use the TraceId from the  ActiveSpan in three additional contexts

- [ ] In external logs, so we can silo sensitive data from the widely-accessed tracing console but still correlate
- [ ] In response headers, so that we can do browser integration and directly link to the resulting trace from our UI for developers
- [ ] In request headers when using external APIs that support correlation e.g with x-request-id, so that we can ask their support to examine a particular request.

Right now we cannot because traceId is considered an implementation detail, not part of the contract.
") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/208") (id . 268583504) (number . 208) (title . "ActiveSpan is too Opaque") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-25T23:32:45Z") (updated_at . "2017-10-31T22:47:47Z") (closed_at) (author_association . "NONE") (body . "We'd like to be able to use the TraceId from the  ActiveSpan in three additional contexts

- [ ] In external logs, so we can silo sensitive data from the widely-accessed tracing console but still correlate
- [ ] In response headers, so that we can do browser integration and directly link to the resulting trace from our UI for developers
- [ ] In request headers when using external APIs that support correlation e.g with x-request-id, so that we can ask their support to examine a particular request.

Right now we cannot because traceId is considered an implementation detail, not part of the contract.
"))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/339671079") (html_url . "https://github.com/opentracing/opentracing-java/issues/208#issuecomment-339671079") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208") (id . 339671079) (user (login . "devinsba") (id . 139938) (avatar_url . "https://avatars3.githubusercontent.com/u/139938?v=4") (gravatar_id . "") (url . "https://api.github.com/users/devinsba") (html_url . "https://github.com/devinsba") (followers_url . "https://api.github.com/users/devinsba/followers") (following_url . "https://api.github.com/users/devinsba/following{/other_user}") (gists_url . "https://api.github.com/users/devinsba/gists{/gist_id}") (starred_url . "https://api.github.com/users/devinsba/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/devinsba/subscriptions") (organizations_url . "https://api.github.com/users/devinsba/orgs") (repos_url . "https://api.github.com/users/devinsba/repos") (events_url . "https://api.github.com/users/devinsba/events{/privacy}") (received_events_url . "https://api.github.com/users/devinsba/received_events") (type . "User") (site_admin)) (created_at . "2017-10-26T13:46:34Z") (updated_at . "2017-10-26T13:46:34Z") (author_association . "CONTRIBUTOR") (body . "There is an ongoing discussion of this: https://github.com/opentracing/specification/issues/24")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/340929945") (html_url . "https://github.com/opentracing/opentracing-java/issues/208#issuecomment-340929945") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/208") (id . 340929945) (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (created_at . "2017-10-31T22:47:47Z") (updated_at . "2017-10-31T22:47:47Z") (author_association . "OWNER") (body . "I agree @rbtcollins, I want to push on this once https://github.com/opentracing/opentracing-java/issues/189 is over."))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 206)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/206") (id . 266747833) (number . 206) (title . "Slf4j MDC vs Scopes") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-10-19T07:40:48Z") (updated_at . "2018-01-04T01:01:14Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Disclaimer: I don't have a working implementation yet

TL;DR - It seems that a reasonable implementation is possible with Scopes if we wrap `Span` whenever we start a new `Scope` - which seems similar to the \"ActiveSpan\" concept from the previous version.

### Goals:
- I want debug_id (span-id + trace-id) of the active span to be available inside MDC
  - put debug_id inside MDC when scope is activated
  - when the active scope closes remove any MDC changes since the scope was activated

- When I define key-value attributes of the current (computation) context and put them into MDC then I want them to automatically propagate to other threads using OT in-process propagation. I want this because I don't want to write additional in-process propagation for MDC.
  - propagate custom MDC entries to child scopes (e.g. user_id)
  - add MDC entries as span tags

- When I define key-value attributes of the current (computation) context I want to set them both on MDC and active Span
  - when they are changed they should change both in MDC and the Span
  - if the value changes multiple times on a single Span it's ok if only the last tag value is reported when Span finishes

The first point (setting debug_id) is trivial - see PR https://github.com/opentracing/opentracing-java/pull/207. The only requirement is not to share scopes across threads which I assume would be invalid anyway.

When it comes to propagating MDC to other scopes and other threads things get complicated:

### Problem A:
In order to add MDC entries as tags in a child scope/thread we somehow need to pass MDC entries to that scope/thread. Right now the only entity that's passed is the Span:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\");

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\"
    }
});
```

That means that
1. we have to glue our data to the span instance
2. or pass something else - instead of Span or in addition to

##### Ad 1. Add data to Span instance
This seems doable. Whenever `startActive` is called and Scope is created we can wrap the Span with our SpanWithContext. Then we can store any extra information we need inside it.

When `scopeManager.activate(spanwithcontext)` is called we have all the information.

##### Ad 2. Pass something other than Span
This is solution similar to the one described in the java-examples - the Continuation/AutoFinishScope. Copying MDC manually also belong to this category.
Because of the fact that this approach does not use the official API it's a non-starter - it would require to instrument all concurrency libraries (rxjava, akka, hystrix, ...) with extra capabilities for propagating MDC, but we want to use existing OT-contrib libs which already do the propagation.

With Continuations in the official API this would be the ideal solution - we'd just pass the data inside the Continuation.

### Problem B:
How to put MDC data into the active Span?

The thing is that after setting MDC there won't be any additional OT calls so there is no obvious place where to put the code which would copy the value into the active Span.
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\"); // after scope created, no OT calls afterwards

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\")
    }
});
```

I see following options here:
- change MDC implementation to actually both set the value inside MDC and additionally in the active Span. This is what we did at my company. We replace the `MDCAdapter` using reflection to our own implementation which is opentracing-aware. It's a bit hacky but it works. I'd go for this approach but the upcoming [Slf4j 1.8 is modularized (because Java 9)](https://www.slf4j.org/faq.html#changesInVersion18) and we won't be able to reach into its internals anymore. Slf4j 1.8 uses `ServiceLoader` to load the implementation and I'm not sure if we'd be able to hijack this mechanism. All in all approaching it form this side does not look good.

- Another option is to stop using MDC class directly. Instead of
  ```java
  MDC.put(key, value)
  ```
  Use
  ```java
  Context.put(key, value)
  ```
  This allows us to put our logic inside the `Context`. Actually we already have such context - it's the Span. So the idea is to use:
  ```java
  Span.put(key, value)
  ```
  A real implementation could allow to configure which tags are also set in the MDC to avoid putting there everything.

### Problem C:
There is a single parent MDC \"state\" but multiple \"child\" ones starting at different times. What I mean is a situation like this:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

runInThread(() -> {
    Thread.sleep(1000)
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\" or \"y\" ?
    }
});
scope.span().setTag(\"key\", \"y\")
```

With Continuations it would be easy because of the `capture()` call which would be able to record the \"parent\" state.
I don't see a good solution for this right now and my approach would be to just ignore this. It only happens if someone changes the tag values and then passes the span to another thread. One workaround is to create a child span and then pass it:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

try(Scope outerChild = scopeManager.activate(scope.span())) {
    runInThread(() -> {
        Thread.sleep(1000)
        try(Scope child = scopeManager.activate(outerChild.span())) {
            MDC.get(\"key\") // guaranteed to be \"x\"
        }
    });
}

scope.span().setTag(\"key\", \"y\")
```

This is possible because despite scope.span() returning the same span from OT perspective, in reality it returns a different instance of `SpanWithContext` for different active scopes.

### Problem D:
- Need to react to Span start to be able to capture debug ids (or we could do that when scope activates)
- Need to react to Scope activation to mark the point to which revert MDC changes when Scope closes
- Need to react to Scope closing to revert MDC changes

Right now the only way is to wrap `SpanBuilder`. It would be great if the OT API allowed to do that without custom wrappers.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206/events") (html_url . "https://github.com/opentracing/opentracing-java/issues/206") (id . 266747833) (number . 206) (title . "Slf4j MDC vs Scopes") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-10-19T07:40:48Z") (updated_at . "2018-01-04T01:01:14Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Disclaimer: I don't have a working implementation yet

TL;DR - It seems that a reasonable implementation is possible with Scopes if we wrap `Span` whenever we start a new `Scope` - which seems similar to the \"ActiveSpan\" concept from the previous version.

### Goals:
- I want debug_id (span-id + trace-id) of the active span to be available inside MDC
  - put debug_id inside MDC when scope is activated
  - when the active scope closes remove any MDC changes since the scope was activated

- When I define key-value attributes of the current (computation) context and put them into MDC then I want them to automatically propagate to other threads using OT in-process propagation. I want this because I don't want to write additional in-process propagation for MDC.
  - propagate custom MDC entries to child scopes (e.g. user_id)
  - add MDC entries as span tags

- When I define key-value attributes of the current (computation) context I want to set them both on MDC and active Span
  - when they are changed they should change both in MDC and the Span
  - if the value changes multiple times on a single Span it's ok if only the last tag value is reported when Span finishes

The first point (setting debug_id) is trivial - see PR https://github.com/opentracing/opentracing-java/pull/207. The only requirement is not to share scopes across threads which I assume would be invalid anyway.

When it comes to propagating MDC to other scopes and other threads things get complicated:

### Problem A:
In order to add MDC entries as tags in a child scope/thread we somehow need to pass MDC entries to that scope/thread. Right now the only entity that's passed is the Span:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\");

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\"
    }
});
```

That means that
1. we have to glue our data to the span instance
2. or pass something else - instead of Span or in addition to

##### Ad 1. Add data to Span instance
This seems doable. Whenever `startActive` is called and Scope is created we can wrap the Span with our SpanWithContext. Then we can store any extra information we need inside it.

When `scopeManager.activate(spanwithcontext)` is called we have all the information.

##### Ad 2. Pass something other than Span
This is solution similar to the one described in the java-examples - the Continuation/AutoFinishScope. Copying MDC manually also belong to this category.
Because of the fact that this approach does not use the official API it's a non-starter - it would require to instrument all concurrency libraries (rxjava, akka, hystrix, ...) with extra capabilities for propagating MDC, but we want to use existing OT-contrib libs which already do the propagation.

With Continuations in the official API this would be the ideal solution - we'd just pass the data inside the Continuation.

### Problem B:
How to put MDC data into the active Span?

The thing is that after setting MDC there won't be any additional OT calls so there is no obvious place where to put the code which would copy the value into the active Span.
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
MDC.put(\"key\", \"x\"); // after scope created, no OT calls afterwards

runInThread(() -> {
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\")
    }
});
```

I see following options here:
- change MDC implementation to actually both set the value inside MDC and additionally in the active Span. This is what we did at my company. We replace the `MDCAdapter` using reflection to our own implementation which is opentracing-aware. It's a bit hacky but it works. I'd go for this approach but the upcoming [Slf4j 1.8 is modularized (because Java 9)](https://www.slf4j.org/faq.html#changesInVersion18) and we won't be able to reach into its internals anymore. Slf4j 1.8 uses `ServiceLoader` to load the implementation and I'm not sure if we'd be able to hijack this mechanism. All in all approaching it form this side does not look good.

- Another option is to stop using MDC class directly. Instead of
  ```java
  MDC.put(key, value)
  ```
  Use
  ```java
  Context.put(key, value)
  ```
  This allows us to put our logic inside the `Context`. Actually we already have such context - it's the Span. So the idea is to use:
  ```java
  Span.put(key, value)
  ```
  A real implementation could allow to configure which tags are also set in the MDC to avoid putting there everything.

### Problem C:
There is a single parent MDC \"state\" but multiple \"child\" ones starting at different times. What I mean is a situation like this:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

runInThread(() -> {
    Thread.sleep(1000)
    try(Scope child = scopeManager.activate(scope.span())) {
        MDC.get(\"key\") // == \"x\" or \"y\" ?
    }
});
scope.span().setTag(\"key\", \"y\")
```

With Continuations it would be easy because of the `capture()` call which would be able to record the \"parent\" state.
I don't see a good solution for this right now and my approach would be to just ignore this. It only happens if someone changes the tag values and then passes the span to another thread. One workaround is to create a child span and then pass it:
```java
Scope scope = tracer.buildSpan(\"parent\").startActive();
scope.span().setTag(\"key\", \"x\")
// no capture() here

try(Scope outerChild = scopeManager.activate(scope.span())) {
    runInThread(() -> {
        Thread.sleep(1000)
        try(Scope child = scopeManager.activate(outerChild.span())) {
            MDC.get(\"key\") // guaranteed to be \"x\"
        }
    });
}

scope.span().setTag(\"key\", \"y\")
```

This is possible because despite scope.span() returning the same span from OT perspective, in reality it returns a different instance of `SpanWithContext` for different active scopes.

### Problem D:
- Need to react to Span start to be able to capture debug ids (or we could do that when scope activates)
- Need to react to Scope activation to mark the point to which revert MDC changes when Scope closes
- Need to react to Scope closing to revert MDC changes

Right now the only way is to wrap `SpanBuilder`. It would be great if the OT API allowed to do that without custom wrappers."))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/340930701") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-340930701") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 340930701) (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (created_at . "2017-10-31T22:51:53Z") (updated_at . "2017-10-31T22:51:53Z") (author_association . "OWNER") (body . "@mabn, I wonder: if we can get SpanID and TraceID added to SpanContext, does that make Observers work well enough to accomplish MDC integration without a span wrapper?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/340934009") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-340934009") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 340934009) (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (created_at . "2017-10-31T23:11:15Z") (updated_at . "2017-10-31T23:11:15Z") (author_association . "CONTRIBUTOR") (body . "@tedsuo what do you mean by Observers?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/340936352") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-340936352") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 340936352) (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (created_at . "2017-10-31T23:25:24Z") (updated_at . "2017-10-31T23:25:53Z") (author_association . "OWNER") (body . "I mean an OT SpanObserver API that tracers can adopt, as opposed to wrapping the SpanBuilder. This idea here: https://github.com/opentracing/opentracing-go/issues/136

Basically, if we can add SpanID+TraceID, Observers become useful for many things. Potentially MDC integration as well?

")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/344666342") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-344666342") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 344666342) (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (created_at . "2017-11-15T17:26:51Z") (updated_at . "2017-11-15T17:26:51Z") (author_association . "CONTRIBUTOR") (body . "@tedsuo I didn't have time to dig deeper but I'm pretty sure that Observers would be sufficient - although they would need a few more integration points - i.e. methods related to Scopes (created, closed, activated).")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/346091618") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-346091618") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 346091618) (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (created_at . "2017-11-21T16:58:26Z") (updated_at . "2017-11-21T16:58:26Z") (author_association . "NONE") (body . "I would find `TraceId` and `SpanId` to the context useful.
Right now I'm casting to my implementation (Jaeger) which exposes both.

Also it might be useful to make the mechanism in which request id generation created a `Provider`  -- consumers may want fixed / less random / more random solutions.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/355171418") (html_url . "https://github.com/opentracing/opentracing-java/issues/206#issuecomment-355171418") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/206") (id . 355171418) (user (login . "wsargent") (id . 71236) (avatar_url . "https://avatars2.githubusercontent.com/u/71236?v=4") (gravatar_id . "") (url . "https://api.github.com/users/wsargent") (html_url . "https://github.com/wsargent") (followers_url . "https://api.github.com/users/wsargent/followers") (following_url . "https://api.github.com/users/wsargent/following{/other_user}") (gists_url . "https://api.github.com/users/wsargent/gists{/gist_id}") (starred_url . "https://api.github.com/users/wsargent/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/wsargent/subscriptions") (organizations_url . "https://api.github.com/users/wsargent/orgs") (repos_url . "https://api.github.com/users/wsargent/repos") (events_url . "https://api.github.com/users/wsargent/events{/privacy}") (received_events_url . "https://api.github.com/users/wsargent/received_events") (type . "User") (site_admin)) (created_at . "2018-01-04T01:01:14Z") (updated_at . "2018-01-04T01:01:14Z") (author_association . "CONTRIBUTOR") (body . "Possibly off topic, but it is possible to use markers rather than MDC to pass contextual information around, i.e. https://www.playframework.com/documentation/2.6.x/Highlights26#Logging-Marker-API"))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 202)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (id . 262969061) (number . 202) (title . "Add MDC support for basic ThreadLocalActiveSpan") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-05T00:13:19Z") (updated_at . "2017-10-09T23:52:38Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/202") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (diff_url . "https://github.com/opentracing/opentracing-java/pull/202.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/202.patch")) (body . "The documentation heavily mentions MDC in the interfaces but fails to
provide an example in the basic implementations of
ThreadLocalActiveSpan.

This commit adds this functionality via SLF4J which is a very popular
facade to many common logging libraries. As a result, a new dependency
is introduced on slf4j-api however I believe this to be a useful
dependency so that logging can be applied in a runtime agnostic fashion
if additional example implementations would like to be provided.

Fixes #201") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (id . 262969061) (number . 202) (title . "Add MDC support for basic ThreadLocalActiveSpan") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-10-05T00:13:19Z") (updated_at . "2017-10-09T23:52:38Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/202") (html_url . "https://github.com/opentracing/opentracing-java/pull/202") (diff_url . "https://github.com/opentracing/opentracing-java/pull/202.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/202.patch")) (body . "The documentation heavily mentions MDC in the interfaces but fails to
provide an example in the basic implementations of
ThreadLocalActiveSpan.

This commit adds this functionality via SLF4J which is a very popular
facade to many common logging libraries. As a result, a new dependency
is introduced on slf4j-api however I believe this to be a useful
dependency so that logging can be applied in a runtime agnostic fashion
if additional example implementations would like to be provided.

Fixes #201"))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/334335602") (html_url . "https://github.com/opentracing/opentracing-java/pull/202#issuecomment-334335602") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202") (id . 334335602) (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (created_at . "2017-10-05T01:37:35Z") (updated_at . "2017-10-05T01:37:35Z") (author_association . "OWNER") (body . "The idea was that if someone wanted MDC propagation they would extend/reimplement the active span source and provide it to the tracer. I don't think building this functionality directly into the main API is the right approach.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/335320089") (html_url . "https://github.com/opentracing/opentracing-java/pull/202#issuecomment-335320089") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/202") (id . 335320089) (user (login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)) (created_at . "2017-10-09T23:52:38Z") (updated_at . "2017-10-09T23:52:38Z") (author_association . "NONE") (body . "I agree with @yurishkuro that this doesn't belong here.  That being said, it might be useful to transfer this idea/concept/work over to a new project that focuses on a simple tracer implementation that only maintains the MDC state."))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 203)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (id . 263302081) (number . 203) (title . "Clarify that Tracer.extract can return null") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-10-06T00:02:34Z") (updated_at . "2017-10-07T01:22:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/203") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (diff_url . "https://github.com/opentracing/opentracing-java/pull/203.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/203.patch")) (body . "According to https://github.com/opentracing/opentracing-java/issues/168 in practice the tracer implementations return null when `SpanContext` is not found in the carrier. This change documents this behaviour.

It also adds a dependency on `com.google.code.findbugs:jsr305` but it's optional, it is not listed in the pom and client applications do not need to depend on jsr305.

![Alt text](https://monosnap.com/file/T4szLzLxQA2T47KsbjNyt7Fk0YzSeH.png)

Compiling the code above with:
```
javac -Werror -Xlint:all -cp \\
/Users/mabn/.m2/repository/io/opentracing/opentracing-api/0.30.1-SNAPSHOT/opentracing-api-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-noop/0.30.1-SNAPSHOT/opentracing-noop-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-util/0.30.1-SNAPSHOT/opentracing-util-0.30.1-SNAPSHOT.jar \\
Main.java
```
procudes no warnings.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (id . 263302081) (number . 203) (title . "Clarify that Tracer.extract can return null") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-10-06T00:02:34Z") (updated_at . "2017-10-07T01:22:13Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/203") (html_url . "https://github.com/opentracing/opentracing-java/pull/203") (diff_url . "https://github.com/opentracing/opentracing-java/pull/203.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/203.patch")) (body . "According to https://github.com/opentracing/opentracing-java/issues/168 in practice the tracer implementations return null when `SpanContext` is not found in the carrier. This change documents this behaviour.

It also adds a dependency on `com.google.code.findbugs:jsr305` but it's optional, it is not listed in the pom and client applications do not need to depend on jsr305.

![Alt text](https://monosnap.com/file/T4szLzLxQA2T47KsbjNyt7Fk0YzSeH.png)

Compiling the code above with:
```
javac -Werror -Xlint:all -cp \\
/Users/mabn/.m2/repository/io/opentracing/opentracing-api/0.30.1-SNAPSHOT/opentracing-api-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-noop/0.30.1-SNAPSHOT/opentracing-noop-0.30.1-SNAPSHOT.jar:\\
/Users/mabn/.m2/repository/io/opentracing/opentracing-util/0.30.1-SNAPSHOT/opentracing-util-0.30.1-SNAPSHOT.jar \\
Main.java
```
procudes no warnings."))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/334624554") (html_url . "https://github.com/opentracing/opentracing-java/pull/203#issuecomment-334624554") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/203") (id . 334624554) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-10-06T00:04:22Z") (updated_at . "2017-10-06T00:04:22Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/13594520/badge)](https://coveralls.io/builds/13594520)

Coverage remained the same at 73.09% when pulling **0ff87b8a374e2cafd0019205d5fd1c2aa8ab9d4a on futuresimple:nullable_extract** into **e000eb0c62ee3149ae272c6c197bfc039d2c2749 on opentracing:master**.
"))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 207)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (id . 266756715) (number . 207) (title . "Debug ID in MDC") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2017-10-19T08:15:41Z") (updated_at . "2017-10-23T00:01:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/207") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (diff_url . "https://github.com/opentracing/opentracing-java/pull/207.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/207.patch")) (body . "An example of keeping Span's debug_id inside MDC - for version 0.31.0+

Puts active Spans's debug_id when scope is activated and cleans it
afterwards.

see also: https://github.com/opentracing/opentracing-java/issues/206") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (id . 266756715) (number . 207) (title . "Debug ID in MDC") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2017-10-19T08:15:41Z") (updated_at . "2017-10-23T00:01:18Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/207") (html_url . "https://github.com/opentracing/opentracing-java/pull/207") (diff_url . "https://github.com/opentracing/opentracing-java/pull/207.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/207.patch")) (body . "An example of keeping Span's debug_id inside MDC - for version 0.31.0+

Puts active Spans's debug_id when scope is activated and cleans it
afterwards.

see also: https://github.com/opentracing/opentracing-java/issues/206"))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/337835040") (html_url . "https://github.com/opentracing/opentracing-java/pull/207#issuecomment-337835040") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (id . 337835040) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-10-19T08:21:15Z") (updated_at . "2017-10-19T08:21:15Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/13787880/badge)](https://coveralls.io/builds/13787880)

Coverage remained the same at 78.598% when pulling **8230a9049e042be74711a0aa64db482918f576a3 on futuresimple:debug_id_in_mdc** into **cdc9601709dee7332d5615369901f253645e4ee1 on opentracing:v0.31.0**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/337835448") (html_url . "https://github.com/opentracing/opentracing-java/pull/207#issuecomment-337835448") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (id . 337835448) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-10-19T08:22:59Z") (updated_at . "2017-10-19T08:22:59Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/13787913/badge)](https://coveralls.io/builds/13787913)

Coverage remained the same at 78.598% when pulling **8230a9049e042be74711a0aa64db482918f576a3 on futuresimple:debug_id_in_mdc** into **cdc9601709dee7332d5615369901f253645e4ee1 on opentracing:v0.31.0**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/338198108") (html_url . "https://github.com/opentracing/opentracing-java/pull/207#issuecomment-338198108") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (id . 338198108) (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (created_at . "2017-10-20T12:53:52Z") (updated_at . "2017-10-20T12:53:52Z") (author_association . "COLLABORATOR") (body . "Out of curiosity: is this something you would foresee being implemented as a wrapper class? I ask because if the user does `scopeManager.active().close()`, the logic you used for `MDC` will not be called, i.e.

```
            } finally {
                 MDC.put(mdcKey, previousDebugId);
            }
```")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/338519614") (html_url . "https://github.com/opentracing/opentracing-java/pull/207#issuecomment-338519614") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/207") (id . 338519614) (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (created_at . "2017-10-23T00:01:18Z") (updated_at . "2017-10-23T00:01:18Z") (author_association . "CONTRIBUTOR") (body . "Oh, you're right. I should pass my `MdcScope` when calling `wrapped.activate(..)`

If this wouldn't be a wrapper then it wouldn't be possible to use it with another scope manager (e.g. `AutoFinishScopeManager`). Until there is an API to register observers/listeners/extensions then wrapping is the only way :|
"))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 211)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (id . 270955287) (number . 211) (title . "Add Span#unwrap") (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 8) (created_at . "2017-11-03T11:59:24Z") (updated_at . "2017-11-11T04:15:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/211") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (diff_url . "https://github.com/opentracing/opentracing-java/pull/211.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/211.patch")) (body . "With `Span` wrappers becoming more and more popular (for example https://github.com/opentracing-contrib/java-api-extensions). There is a [growing need](https://github.com/openzipkin-contrib/brave-opentracing/blob/0869a9245aa78d5c9aafb71e16e7a130faf3547f/src/main/java/brave/opentracing/BraveActiveSpanSource.java#L52) to be able to get access to the underlying `Span` implementation without type casts which fail if there is a hierarchy of span wrappers.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (id . 270955287) (number . 211) (title . "Add Span#unwrap") (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 8) (created_at . "2017-11-03T11:59:24Z") (updated_at . "2017-11-11T04:15:14Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/211") (html_url . "https://github.com/opentracing/opentracing-java/pull/211") (diff_url . "https://github.com/opentracing/opentracing-java/pull/211.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/211.patch")) (body . "With `Span` wrappers becoming more and more popular (for example https://github.com/opentracing-contrib/java-api-extensions). There is a [growing need](https://github.com/openzipkin-contrib/brave-opentracing/blob/0869a9245aa78d5c9aafb71e16e7a130faf3547f/src/main/java/brave/opentracing/BraveActiveSpanSource.java#L52) to be able to get access to the underlying `Span` implementation without type casts which fail if there is a hierarchy of span wrappers."))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/341688314") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-341688314") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 341688314) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-11-03T12:19:22Z") (updated_at . "2017-11-03T12:19:22Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/14024155/badge)](https://coveralls.io/builds/14024155)

Coverage decreased (-0.1%) to 78.467% when pulling **87a120ebde9a18b34629aeeeee48eeb909a9c320 on felixbarny:unwrap** into **cdc9601709dee7332d5615369901f253645e4ee1 on opentracing:v0.31.0**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/341689330") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-341689330") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 341689330) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-11-03T12:24:35Z") (updated_at . "2017-11-03T12:24:35Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/14024212/badge)](https://coveralls.io/builds/14024212)

Coverage increased (+0.2%) to 78.832% when pulling **f259b891ca753c0a6689573860c5db89b872747c on felixbarny:unwrap** into **cdc9601709dee7332d5615369901f253645e4ee1 on opentracing:v0.31.0**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342789265") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-342789265") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 342789265) (user (login . "sjoerdtalsma") (id . 2930348) (avatar_url . "https://avatars3.githubusercontent.com/u/2930348?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sjoerdtalsma") (html_url . "https://github.com/sjoerdtalsma") (followers_url . "https://api.github.com/users/sjoerdtalsma/followers") (following_url . "https://api.github.com/users/sjoerdtalsma/following{/other_user}") (gists_url . "https://api.github.com/users/sjoerdtalsma/gists{/gist_id}") (starred_url . "https://api.github.com/users/sjoerdtalsma/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sjoerdtalsma/subscriptions") (organizations_url . "https://api.github.com/users/sjoerdtalsma/orgs") (repos_url . "https://api.github.com/users/sjoerdtalsma/repos") (events_url . "https://api.github.com/users/sjoerdtalsma/events{/privacy}") (received_events_url . "https://api.github.com/users/sjoerdtalsma/received_events") (type . "User") (site_admin)) (created_at . "2017-11-08T11:24:23Z") (updated_at . "2017-11-08T11:24:23Z") (author_association . "CONTRIBUTOR") (body . "SpanWrapper could be part of `util`")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342805845") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-342805845") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 342805845) (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (created_at . "2017-11-08T12:40:07Z") (updated_at . "2017-11-08T12:40:07Z") (author_association . "CONTRIBUTOR") (body . "That kind of defeats the whole purpose of the PR. Because then it is still not possible to unwrap a plain Span to a specific one without type casts.

By the way, this is heavily inspired by JDBC wrappers: https://docs.oracle.com/javase/7/docs/api/java/sql/Wrapper.html")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342826121") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-342826121") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 342826121) (user (login . "sjoerdtalsma") (id . 2930348) (avatar_url . "https://avatars3.githubusercontent.com/u/2930348?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sjoerdtalsma") (html_url . "https://github.com/sjoerdtalsma") (followers_url . "https://api.github.com/users/sjoerdtalsma/followers") (following_url . "https://api.github.com/users/sjoerdtalsma/following{/other_user}") (gists_url . "https://api.github.com/users/sjoerdtalsma/gists{/gist_id}") (starred_url . "https://api.github.com/users/sjoerdtalsma/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sjoerdtalsma/subscriptions") (organizations_url . "https://api.github.com/users/sjoerdtalsma/orgs") (repos_url . "https://api.github.com/users/sjoerdtalsma/repos") (events_url . "https://api.github.com/users/sjoerdtalsma/events{/privacy}") (received_events_url . "https://api.github.com/users/sjoerdtalsma/received_events") (type . "User") (site_admin)) (created_at . "2017-11-08T14:02:21Z") (updated_at . "2017-11-08T14:57:30Z") (author_association . "CONTRIBUTOR") (body . "I know. :wink:
I'm also not a fan of the unwrapping of DataSources this way.

In my opinion unwrapping is not something that is of use for the general API; people have a `Tracer` and 'just use it'. For tracer implementors things are different and it would be very easy for them to create  an (internal) static utility method such as
```java
static <T extends Span> T unwrap(Span span, Class<T> spanType) {
    return span instanceof SpanWrapper ? ((SpanWrapper) span).unwrap(spanType) : null;
}
```

The point of this PR should be (in my opinion) a standardized way to indicate that you can unwrap. For this the interface serves the purpose.

For me not mixing concerns and having a clean api outweighs typechecks any day.

Just my opinion of course. Curious what others think.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342831312") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-342831312") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 342831312) (user (login . "felixbarny") (id . 2163464) (avatar_url . "https://avatars3.githubusercontent.com/u/2163464?v=4") (gravatar_id . "") (url . "https://api.github.com/users/felixbarny") (html_url . "https://github.com/felixbarny") (followers_url . "https://api.github.com/users/felixbarny/followers") (following_url . "https://api.github.com/users/felixbarny/following{/other_user}") (gists_url . "https://api.github.com/users/felixbarny/gists{/gist_id}") (starred_url . "https://api.github.com/users/felixbarny/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/felixbarny/subscriptions") (organizations_url . "https://api.github.com/users/felixbarny/orgs") (repos_url . "https://api.github.com/users/felixbarny/repos") (events_url . "https://api.github.com/users/felixbarny/events{/privacy}") (received_events_url . "https://api.github.com/users/felixbarny/received_events") (type . "User") (site_admin)) (created_at . "2017-11-08T14:20:53Z") (updated_at . "2017-11-08T14:20:53Z") (author_association . "CONTRIBUTOR") (body . "But how can we enforce then that each tracer's `Span` implements the `SpanWrapper` interface?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342840045") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-342840045") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 342840045) (user (login . "sjoerdtalsma") (id . 2930348) (avatar_url . "https://avatars3.githubusercontent.com/u/2930348?v=4") (gravatar_id . "") (url . "https://api.github.com/users/sjoerdtalsma") (html_url . "https://github.com/sjoerdtalsma") (followers_url . "https://api.github.com/users/sjoerdtalsma/followers") (following_url . "https://api.github.com/users/sjoerdtalsma/following{/other_user}") (gists_url . "https://api.github.com/users/sjoerdtalsma/gists{/gist_id}") (starred_url . "https://api.github.com/users/sjoerdtalsma/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/sjoerdtalsma/subscriptions") (organizations_url . "https://api.github.com/users/sjoerdtalsma/orgs") (repos_url . "https://api.github.com/users/sjoerdtalsma/repos") (events_url . "https://api.github.com/users/sjoerdtalsma/events{/privacy}") (received_events_url . "https://api.github.com/users/sjoerdtalsma/received_events") (type . "User") (site_admin)) (created_at . "2017-11-08T14:49:47Z") (updated_at . "2017-11-08T14:50:28Z") (author_association . "CONTRIBUTOR") (body . "> But how can we enforce then that each tracer's Span implements the SpanWrapper interface?

You can't unfortunately.
But we can add documentation to the `util` module with explanation why it's sensible to implement SpanWrapper when wrapping. Add PR's to 'visible examples' such as `java-api-extensions`")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/343639288") (html_url . "https://github.com/opentracing/opentracing-java/pull/211#issuecomment-343639288") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/211") (id . 343639288) (user (login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)) (created_at . "2017-11-11T04:15:14Z") (updated_at . "2017-11-11T04:15:14Z") (author_association . "NONE") (body . "I don't think this adds significant value to the general API.  If the wrap fails, then it just returns null.  That seems like a worse place to be.  Not to mention, this will just encourage people to write code that is specific to a tracer implementation, rather than the OT api.  At that point, why pretend to use the OT api at all?  Just work directly with the tracer's concrete types all the way through."))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 214)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (id . 271809027) (number . 214) (title . "Cover span handof scenarios in a bit more detail") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-07T12:09:04Z") (updated_at . "2017-11-14T00:21:43Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/214") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (diff_url . "https://github.com/opentracing/opentracing-java/pull/214.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/214.patch")) (body . "This came up because I had to ask in gitter.im about the details here, so I thought I'd capture it for everyone.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (id . 271809027) (number . 214) (title . "Cover span handof scenarios in a bit more detail") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-11-07T12:09:04Z") (updated_at . "2017-11-14T00:21:43Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/214") (html_url . "https://github.com/opentracing/opentracing-java/pull/214") (diff_url . "https://github.com/opentracing/opentracing-java/pull/214.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/214.patch")) (body . "This came up because I had to ask in gitter.im about the details here, so I thought I'd capture it for everyone."))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342464111") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-342464111") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 342464111) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2017-11-07T12:11:30Z") (updated_at . "2017-11-07T12:11:30Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/14074986/badge)](https://coveralls.io/builds/14074986)

Coverage remained the same at 73.09% when pulling **9c94df0aa5dc89903a0ecb50c78b0bf85ab2672a on rbtcollins:patch-1** into **e000eb0c62ee3149ae272c6c197bfc039d2c2749 on opentracing:master**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342509673") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-342509673") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 342509673) (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (created_at . "2017-11-07T15:02:44Z") (updated_at . "2017-11-07T15:02:44Z") (author_association . "OWNER") (body . "@rbtcollins note that continuations are most likely going away in 0.31")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342601947") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-342601947") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 342601947) (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (created_at . "2017-11-07T19:53:30Z") (updated_at . "2017-11-07T19:53:30Z") (author_association . "NONE") (body . "@yurishkuro sure, but doing both of these things has to remain possible right? So the merge of the Scopes or whatever should have the same, but updated docs in it. What do you think of the docs? Are they accurate? Can has merge? :)
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342609651") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-342609651") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 342609651) (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (created_at . "2017-11-07T20:20:23Z") (updated_at . "2017-11-07T20:20:23Z") (author_association . "OWNER") (body . "I think my point is that in 0.31 the Continuation is going away because it was demonstrated that most async scenarios can be handled without continuations and ref counting. The Scope in 0.31 is functionally equivalent to ActiveSpan in 0.30. That's why I questioned the value of writing examples that still utilize continuations rather than writing them using ActiveSpan only.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/342621054") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-342621054") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 342621054) (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (created_at . "2017-11-07T21:02:32Z") (updated_at . "2017-11-07T21:02:32Z") (author_association . "NONE") (body . "Well, its not clear to me yet how we'll integrate that in in Xenon. We just merged 0.30.0 instrumentation, and when I went looking at the 0.31 branch there was no updated user docs; so I figured updating the current docs was reasonable to cover this use case, and then when the 0.31 docs *are* updated, whoever is doing that can update this as well.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/344103936") (html_url . "https://github.com/opentracing/opentracing-java/pull/214#issuecomment-344103936") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/214") (id . 344103936) (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (created_at . "2017-11-14T00:21:43Z") (updated_at . "2017-11-14T00:21:43Z") (author_association . "OWNER") (body . "@rbtcollins I'm sure we'll do more copy editing, but the  docs are updated: https://github.com/opentracing/opentracing-java/tree/v0.31.0"))) (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "opentracing")) (name . "opentracing-java"))) (quote ((number . 252)))))) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (id . 289890642) (number . 252) (title . "Binary format proposal.") (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-01-19T07:56:18Z") (updated_at . "2018-01-29T19:46:57Z") (closed_at) (author_association . "COLLABORATOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/252") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (diff_url . "https://github.com/opentracing/opentracing-java/pull/252.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/252.patch")) (body . "* Uses ByteBuffer to read/write data *synchronously*.
* write() is expected to read all passed data.
* read() may need many calls in case the buffer is not big enough.
* Adapter for InputStream/OutputStream.
* MockTracer BINARY propagator.") (closed_by)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 48295629) (name . "opentracing-java") (full_name . "opentracing/opentracing-java") (owner (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/opentracing/opentracing-java") (description . "OpenTracing API for Java") (fork) (url . "https://api.github.com/repos/opentracing/opentracing-java") (forks_url . "https://api.github.com/repos/opentracing/opentracing-java/forks") (keys_url . "https://api.github.com/repos/opentracing/opentracing-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/opentracing/opentracing-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/opentracing/opentracing-java/teams") (hooks_url . "https://api.github.com/repos/opentracing/opentracing-java/hooks") (issue_events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/events{/number}") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/events") (assignees_url . "https://api.github.com/repos/opentracing/opentracing-java/assignees{/user}") (branches_url . "https://api.github.com/repos/opentracing/opentracing-java/branches{/branch}") (tags_url . "https://api.github.com/repos/opentracing/opentracing-java/tags") (blobs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/opentracing/opentracing-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/opentracing/opentracing-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/opentracing/opentracing-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/opentracing/opentracing-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/opentracing/opentracing-java/languages") (stargazers_url . "https://api.github.com/repos/opentracing/opentracing-java/stargazers") (contributors_url . "https://api.github.com/repos/opentracing/opentracing-java/contributors") (subscribers_url . "https://api.github.com/repos/opentracing/opentracing-java/subscribers") (subscription_url . "https://api.github.com/repos/opentracing/opentracing-java/subscription") (commits_url . "https://api.github.com/repos/opentracing/opentracing-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/opentracing/opentracing-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/opentracing/opentracing-java/contents/{+path}") (compare_url . "https://api.github.com/repos/opentracing/opentracing-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/opentracing/opentracing-java/merges") (archive_url . "https://api.github.com/repos/opentracing/opentracing-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/opentracing/opentracing-java/downloads") (issues_url . "https://api.github.com/repos/opentracing/opentracing-java/issues{/number}") (pulls_url . "https://api.github.com/repos/opentracing/opentracing-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/opentracing/opentracing-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/opentracing/opentracing-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/labels{/name}") (releases_url . "https://api.github.com/repos/opentracing/opentracing-java/releases{/id}") (deployments_url . "https://api.github.com/repos/opentracing/opentracing-java/deployments") (created_at . "2015-12-19T20:07:30Z") (updated_at . "2018-02-01T07:21:47Z") (pushed_at . "2018-01-30T18:50:13Z") (git_url . "git://github.com/opentracing/opentracing-java.git") (ssh_url . "git@github.com:opentracing/opentracing-java.git") (clone_url . "https://github.com/opentracing/opentracing-java.git") (svn_url . "https://github.com/opentracing/opentracing-java") (homepage . "http://opentracing.io") (size . 648) (stargazers_count . 597) (watchers_count . 597) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki) (has_pages) (forks_count . 132) (mirror_url) (archived) (open_issues_count . 32) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 132) (open_issues . 32) (watchers . 597) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "opentracing") (id . 15482765) (avatar_url . "https://avatars1.githubusercontent.com/u/15482765?v=4") (gravatar_id . "") (url . "https://api.github.com/users/opentracing") (html_url . "https://github.com/opentracing") (followers_url . "https://api.github.com/users/opentracing/followers") (following_url . "https://api.github.com/users/opentracing/following{/other_user}") (gists_url . "https://api.github.com/users/opentracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/opentracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/opentracing/subscriptions") (organizations_url . "https://api.github.com/users/opentracing/orgs") (repos_url . "https://api.github.com/users/opentracing/repos") (events_url . "https://api.github.com/users/opentracing/events{/privacy}") (received_events_url . "https://api.github.com/users/opentracing/received_events") (type . "Organization") (site_admin)) (network_count . 132) (subscribers_count . 79))) (quote ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (repository_url . "https://api.github.com/repos/opentracing/opentracing-java") (labels_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/labels{/name}") (comments_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/comments") (events_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252/events") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (id . 289890642) (number . 252) (title . "Binary format proposal.") (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-01-19T07:56:18Z") (updated_at . "2018-01-29T19:46:57Z") (closed_at) (author_association . "COLLABORATOR") (pull_request (url . "https://api.github.com/repos/opentracing/opentracing-java/pulls/252") (html_url . "https://github.com/opentracing/opentracing-java/pull/252") (diff_url . "https://github.com/opentracing/opentracing-java/pull/252.diff") (patch_url . "https://github.com/opentracing/opentracing-java/pull/252.patch")) (body . "* Uses ByteBuffer to read/write data *synchronously*.
* write() is expected to read all passed data.
* read() may need many calls in case the buffer is not big enough.
* Adapter for InputStream/OutputStream.
* MockTracer BINARY propagator."))))))) (((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/358892822") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-358892822") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 358892822) (user (login . "coveralls") (id . 2354108) (avatar_url . "https://avatars1.githubusercontent.com/u/2354108?v=4") (gravatar_id . "") (url . "https://api.github.com/users/coveralls") (html_url . "https://github.com/coveralls") (followers_url . "https://api.github.com/users/coveralls/followers") (following_url . "https://api.github.com/users/coveralls/following{/other_user}") (gists_url . "https://api.github.com/users/coveralls/gists{/gist_id}") (starred_url . "https://api.github.com/users/coveralls/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/coveralls/subscriptions") (organizations_url . "https://api.github.com/users/coveralls/orgs") (repos_url . "https://api.github.com/users/coveralls/repos") (events_url . "https://api.github.com/users/coveralls/events{/privacy}") (received_events_url . "https://api.github.com/users/coveralls/received_events") (type . "User") (site_admin)) (created_at . "2018-01-19T07:58:39Z") (updated_at . "2018-01-19T07:58:39Z") (author_association . "NONE") (body . "
[![Coverage Status](https://coveralls.io/builds/15122860/badge)](https://coveralls.io/builds/15122860)

Coverage increased (+0.7%) to 82.238% when pulling **8a4372cc644d7b2080b42be47f82866f73f15960 on carlosalberto:binary_format_proposal** into **242ba956368c48b804ae4120053955a49f7f9c63 on opentracing:v0.32.0**.
")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/358901029") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-358901029") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 358901029) (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (created_at . "2018-01-19T08:39:32Z") (updated_at . "2018-01-19T08:39:32Z") (author_association . "COLLABORATOR") (body . "See #253 ")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/359850489") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-359850489") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 359850489) (user (login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)) (created_at . "2018-01-23T16:37:33Z") (updated_at . "2018-01-23T16:37:33Z") (author_association . "NONE") (body . "@carlosalberto I haven't had time to review the whole discussion yet, but does this fully incorporate @raphw's feedback from before?")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/359855972") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-359855972") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 359855972) (user (login . "carlosalberto") (id . 260065) (avatar_url . "https://avatars1.githubusercontent.com/u/260065?v=4") (gravatar_id . "") (url . "https://api.github.com/users/carlosalberto") (html_url . "https://github.com/carlosalberto") (followers_url . "https://api.github.com/users/carlosalberto/followers") (following_url . "https://api.github.com/users/carlosalberto/following{/other_user}") (gists_url . "https://api.github.com/users/carlosalberto/gists{/gist_id}") (starred_url . "https://api.github.com/users/carlosalberto/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/carlosalberto/subscriptions") (organizations_url . "https://api.github.com/users/carlosalberto/orgs") (repos_url . "https://api.github.com/users/carlosalberto/repos") (events_url . "https://api.github.com/users/carlosalberto/events{/privacy}") (received_events_url . "https://api.github.com/users/carlosalberto/received_events") (type . "User") (site_admin)) (created_at . "2018-01-23T16:53:50Z") (updated_at . "2018-01-23T16:53:50Z") (author_association . "COLLABORATOR") (body . "@tylerbenson Some of it, but we are still not taking into account two things that were requested:

1) Not telling in advance the output size (`Tracer.inject()`)
2) Not over-the-wire support, but instead, in-memory buffering is expected (just like `HttpHeaders` and `TextMap`, where you write everything to some in-memory buffer and *after* that you pass it to the transmission and let the protocol handle it).

I'd expect, in turn:

1) Some (or a few) proof of concept implementations.
2) Early/experimental `Tracer`s support and their feedback on this.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/360060057") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-360060057") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 360060057) (user (login . "raphw") (id . 4489328) (avatar_url . "https://avatars3.githubusercontent.com/u/4489328?v=4") (gravatar_id . "") (url . "https://api.github.com/users/raphw") (html_url . "https://github.com/raphw") (followers_url . "https://api.github.com/users/raphw/followers") (following_url . "https://api.github.com/users/raphw/following{/other_user}") (gists_url . "https://api.github.com/users/raphw/gists{/gist_id}") (starred_url . "https://api.github.com/users/raphw/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/raphw/subscriptions") (organizations_url . "https://api.github.com/users/raphw/orgs") (repos_url . "https://api.github.com/users/raphw/repos") (events_url . "https://api.github.com/users/raphw/events{/privacy}") (received_events_url . "https://api.github.com/users/raphw/received_events") (type . "User") (site_admin)) (created_at . "2018-01-24T08:43:48Z") (updated_at . "2018-01-24T08:52:12Z") (author_association . "NONE") (body . "I can only repeate my critique of this API:

1. **Byte buffers are meant to interact with data either on or off heap.** This makes byte buffers useful if a server can allow the Tracer to directly serialize or deserialize data from for example a TCP buffer without the JVM needing to also allocate these byte on the Java heap what is expensive in terms of GC. This idea is not reflected by this API proposal and only puts additional weight onto the tracer as most implementations [will look like in this example](https://github.com/opentracing/opentracing-java/pull/252/files#diff-f1dfccca05f6e717c95eca15a8c6622eR142) where buffers are controlled by the tracer. A NIO-friendly API must allow for providing `ByteBuffer`s from outside of the tracer.

2. **Byte buffers are typically used in the context of asynchrous I/O**. An important factor with NIO is that an external buffer such a native TCP storage might not be able to hold all the bytes that belong to the baggage information at once. If a server, from the outside, provides a buffer to the tracer, it cannot normally guarantee that all data is already available. It would rather ask the tracer to do a partial deserialization/serialization to clear the buffer and then suspend the current channel to allow the buffer to fill. In the meantime, it would move on to the next channel from the very same thread to avoid blocking the thread. This is the core idea of NIO and selectors. With OpenTracing being a synchronous API that does not allow for such partial deserialization, the server would need to copy the data into a continous heap array and provide this array once it completed and wrapped as a byte buffer. The current API is therefore equivalent to one that is operating on byte arrays.

3. **There is no binary contract implied**. Binary protocols that allow embedding random bytes typically add a marker byte to indicate the start and end of a custom segment. This way, a server can accept baggage data from a client without even having a tracer installed by just cropping the segment. By allowing to write to byte buffers explicitly, the user of a tracer has no chance to escape any payload bytes that equal the marker byte, thus breaking the protocol. The only way to work around this would be to ask the tracer to write to an intermediate buffer and escape the data from there. This is breaking the core assumption of NIO.

None of these problems occurs by offering a stream-based approach:

1. Streams can read and write one byte at a time what avoids additional allocation of byte arrays. (Streams can be directed to write or read to or from a direct byte buffer without the mentioned need for intermediaries.)
2. Streams can easily be decorated, allowing for escaping of mentioned marker bytes.
3. **But** streams are synchronous. But since this is also true for the baggage injection and extraction APIs, this is not a problem here.

But even with streams: if the server uses a different tracer implementation than the client, none of this will work to begin with. There is no serialization format defined and if I write the data as BSON but the server expects protobuf, this would result in garbage data being reported. Even worse, this could maybe turned into an attack vector if I find a way to exploit the servers deserialization approach, maybe by forcing it to overconsume data from the buffer what corrupts the remainder of the stream what can have unwanted effects.")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/361119519") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-361119519") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 361119519) (user (login . "tylerbenson") (id . 734411) (avatar_url . "https://avatars3.githubusercontent.com/u/734411?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tylerbenson") (html_url . "https://github.com/tylerbenson") (followers_url . "https://api.github.com/users/tylerbenson/followers") (following_url . "https://api.github.com/users/tylerbenson/following{/other_user}") (gists_url . "https://api.github.com/users/tylerbenson/gists{/gist_id}") (starred_url . "https://api.github.com/users/tylerbenson/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tylerbenson/subscriptions") (organizations_url . "https://api.github.com/users/tylerbenson/orgs") (repos_url . "https://api.github.com/users/tylerbenson/repos") (events_url . "https://api.github.com/users/tylerbenson/events{/privacy}") (received_events_url . "https://api.github.com/users/tylerbenson/received_events") (type . "User") (site_admin)) (created_at . "2018-01-29T01:55:39Z") (updated_at . "2018-01-29T04:17:32Z") (author_association . "NONE") (body . "@raphw What would you then suggest?  Maybe I'm missing something, but writing instrumentation to support propagation over a generic binary interface without breaking the protocol when only one side is instrumented seems to be a significant challenge.  Perhaps it would help if we had some specific use cases.  What protocols/frameworks are expected to use this binary format? (perhaps protobuf, thrift, grpc?)  Maybe it would be better to define those propagation interfaces specifically like we do for http, instead of lumping everything into a binary format?  Which formats/protocols are more common when working with NIO?  What frameworks should be explored that would highlight these problems?

(Forgive me for my ignorance.  I've written a fair bit of instrumentation, but relatively little for systems without generic headers/metadata/parameters that can be used for propagation details.)")) ((url . "https://api.github.com/repos/opentracing/opentracing-java/issues/comments/361363905") (html_url . "https://github.com/opentracing/opentracing-java/pull/252#issuecomment-361363905") (issue_url . "https://api.github.com/repos/opentracing/opentracing-java/issues/252") (id . 361363905) (user (login . "tedsuo") (id . 24074) (avatar_url . "https://avatars2.githubusercontent.com/u/24074?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tedsuo") (html_url . "https://github.com/tedsuo") (followers_url . "https://api.github.com/users/tedsuo/followers") (following_url . "https://api.github.com/users/tedsuo/following{/other_user}") (gists_url . "https://api.github.com/users/tedsuo/gists{/gist_id}") (starred_url . "https://api.github.com/users/tedsuo/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tedsuo/subscriptions") (organizations_url . "https://api.github.com/users/tedsuo/orgs") (repos_url . "https://api.github.com/users/tedsuo/repos") (events_url . "https://api.github.com/users/tedsuo/events{/privacy}") (received_events_url . "https://api.github.com/users/tedsuo/received_events") (type . "User") (site_admin)) (created_at . "2018-01-29T19:46:57Z") (updated_at . "2018-01-29T19:46:57Z") (author_association . "OWNER") (body . "@raphw @tylerbenson I'd love to see the requirements for binary format expressed as a set of tests/examples. This worked very well for designing context propagation, where the requirements were similarly nuanced. If we keep discussing in english, we'll probably never resolve this. :)"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-traces"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 100570994) (name . "haystack-traces") (full_name . "ExpediaDotCom/haystack-traces") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-traces") (description . "Components that handle spans, buffers them, writes to ElasticSearch/Cassandra, and provides API to access them .  ") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/deployments") (created_at . "2017-08-17T06:46:50Z") (updated_at . "2017-09-01T14:50:07Z") (pushed_at . "2018-02-05T14:16:28Z") (git_url . "git://github.com/ExpediaDotCom/haystack-traces.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-traces.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-traces.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-traces") (homepage . "") (size . 729) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 8)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 100570994) (name . "haystack-traces") (full_name . "ExpediaDotCom/haystack-traces") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-traces") (description . "Components that handle spans, buffers them, writes to ElasticSearch/Cassandra, and provides API to access them .  ") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-traces/deployments") (created_at . "2017-08-17T06:46:50Z") (updated_at . "2017-09-01T14:50:07Z") (pushed_at . "2018-02-05T14:16:28Z") (git_url . "git://github.com/ExpediaDotCom/haystack-traces.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-traces.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-traces.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-traces") (homepage . "") (size . 729) (stargazers_count . 1) (watchers_count . 1) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 8))))))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "uber")) (name . "jaeger-client-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510))))))) (((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/334") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/334/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/334/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/334/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/334") (id . 293990086) (number . 334) (title . "Can the span be made unmodifiable once finished?") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-02-02T19:01:34Z") (updated_at . "2018-02-02T19:01:34Z") (closed_at) (author_association . "OWNER") (body . "One user reported the exception below, which can only happen if span.log() is called concurrently with the span being processed by the reporter (i.e. after it was finished).

```
Exception in thread \"jaeger.RemoteReporter-QueueProcessor\" java.util.ConcurrentModificationException
        at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:901)
        at java.util.ArrayList$Itr.next(ArrayList.java:851)
        at java.util.Collections$UnmodifiableCollection$1.next(Collections.java:1042)
        at com.uber.jaeger.reporters.protocols.JaegerThriftSpanConverter.buildLogs(JaegerThriftSpanConverter.java:71)
        at com.uber.jaeger.reporters.protocols.JaegerThriftSpanConverter.convertSpan(JaegerThriftSpanConverter.java:53)
        at com.uber.jaeger.senders.ThriftSender.append(ThriftSender.java:66)
        at com.uber.jaeger.reporters.RemoteReporter$AppendCommand.execute(RemoteReporter.java:142)
        at com.uber.jaeger.reporters.RemoteReporter$QueueProcessor.run(RemoteReporter.java:175)
        at java.lang.Thread.run(Thread.java:748)
```

cc @dray92")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (id . 293895896) (number . 333) (title . "Add micrometer StatsReporter implementation") (user (login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin)) (labels ((id . 712439419) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/in%20progress") (name . "in progress") (color . "ededed") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-02-02T13:55:24Z") (updated_at . "2018-02-03T08:13:53Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/333") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.patch")) (body . "implementation `StatsReporter` interface with [Micrometer](https://micrometer.io/), as mentioned in
https://github.com/jaegertracing/jaeger/issues/572")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/332") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/332/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/332/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/332/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/332") (id . 293417737) (number . 332) (title . "Tracerresolver fat jar request ") (user (login . "malafeev") (id . 1412925) (avatar_url . "https://avatars3.githubusercontent.com/u/1412925?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malafeev") (html_url . "https://github.com/malafeev") (followers_url . "https://api.github.com/users/malafeev/followers") (following_url . "https://api.github.com/users/malafeev/following{/other_user}") (gists_url . "https://api.github.com/users/malafeev/gists{/gist_id}") (starred_url . "https://api.github.com/users/malafeev/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malafeev/subscriptions") (organizations_url . "https://api.github.com/users/malafeev/orgs") (repos_url . "https://api.github.com/users/malafeev/repos") (events_url . "https://api.github.com/users/malafeev/events{/privacy}") (received_events_url . "https://api.github.com/users/malafeev/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2018-02-01T06:28:03Z") (updated_at . "2018-02-02T13:18:12Z") (closed_at) (author_association . "NONE") (body . "To use tracerresolver with Linkerd instrumentation it is required to put tracerresolver jar with  all transitive dependencies in a `plugins` folder.
But finding all transitive dependencies is a pain.
Having fat jar would help a lot.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/328") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/328/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/328/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/328/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/328") (id . 293115800) (number . 328) (title . "UdpSender broken") (user (login . "milenkovicm") (id . 956287) (avatar_url . "https://avatars1.githubusercontent.com/u/956287?v=4") (gravatar_id . "") (url . "https://api.github.com/users/milenkovicm") (html_url . "https://github.com/milenkovicm") (followers_url . "https://api.github.com/users/milenkovicm/followers") (following_url . "https://api.github.com/users/milenkovicm/following{/other_user}") (gists_url . "https://api.github.com/users/milenkovicm/gists{/gist_id}") (starred_url . "https://api.github.com/users/milenkovicm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/milenkovicm/subscriptions") (organizations_url . "https://api.github.com/users/milenkovicm/orgs") (repos_url . "https://api.github.com/users/milenkovicm/repos") (events_url . "https://api.github.com/users/milenkovicm/events{/privacy}") (received_events_url . "https://api.github.com/users/milenkovicm/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-31T11:01:01Z") (updated_at . "2018-01-31T11:01:01Z") (closed_at) (author_association . "NONE") (body . "Hi all,
`com.uber.jaeger.senders.UdpSender` I believe is broken cause of two major problems
 - it does not respect `maxPacketSize` constructor parameter. `UdpSender` extends `ThriftSender` but apparently not much of the parent class is used
- if there is exception`at com.uber.jaeger.senders.UdpSender.send(UdpSender.java:60)` it will fail to flush the buffer.  As seen in

```
org.apache.thrift.transport.TTransportException: Message size too large: 1 > 65000
	at com.uber.jaeger.reporters.protocols.ThriftUdpTransport.write(ThriftUdpTransport.java:139)
	at org.apache.thrift.transport.TTransport.write(TTransport.java:107)
	at org.apache.thrift.protocol.TCompactProtocol.writeByteDirect(TCompactProtocol.java:482)
	at org.apache.thrift.protocol.TCompactProtocol.writeMessageBegin(TCompactProtocol.java:198)
	at org.apache.thrift.TServiceClient.sendBase(TServiceClient.java:62)
	at com.uber.jaeger.agent.thrift.Agent$Client.send_emitBatch(Agent.java:97)
	at com.uber.jaeger.agent.thrift.Agent$Client.emitBatch(Agent.java:90)
	at com.uber.jaeger.senders.UdpSender.send(UdpSender.java:60)
	at kamon.jaeger.JaegerClient.sendSpans(JaegerReporter.scala:77)
	at kamon.jaeger.JaegerReporter.reportSpans(JaegerReporter.scala:66)
	at kamon.ReporterRegistry$Default$SpanReporterTicker.$anonfun$run$9(ReporterRegistry.scala:384)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.Try$.apply(Try.scala:209)
	at kamon.ReporterRegistry$Default$SpanReporterTicker.$anonfun$run$8(ReporterRegistry.scala:384)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:655)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:289)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run_aroundBody0(Promise.scala:60)
	at scala.concurrent.impl.CallbackRunnable$AjcClosure1.run(Promise.scala:1)
	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149)
	at kamon.scala.instrumentation.FutureInstrumentation.$anonfun$aroundExecution$1(FutureInstrumentation.scala:46)
	at kamon.Kamon$.withContext(Kamon.scala:120)
	at kamon.scala.instrumentation.FutureInstrumentation.aroundExecution(FutureInstrumentation.scala:46)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:59)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
```
in case on exception `org.apache.thrift.TServiceClient.sendBase()` will never execute `this.oprot_.getTransport().flush();`

the easy hack would be to flush after each `emitBatch`

```
  @Override
  public void send(Process process, List<com.uber.jaeger.thriftjava.Span> spans) throws TException {
  try {
    agentClient.emitBatch(new Batch(process, spans));
  } finally {
   udpTransport.flush()
  }
  }
```
this approach may create invalid messages, as partial messages could end up in the sending buffer.

looks like that previous implementation using `ThriftSender` had all corner cases covered.

")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/326") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/326/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/326/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/326/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/326") (id . 292863040) (number . 326) (title . "Fixes #272 - Updated thrift to 0.11.0/0.10.0") (user (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (labels ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (assignees ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) ((login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin))) (milestone) (comments . 5) (created_at . "2018-01-30T17:08:20Z") (updated_at . "2018-02-02T15:21:45Z") (closed_at) (author_association . "MEMBER") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/326") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/326") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/326.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/326.patch")) (body . "Signed-off-by: Juraci Paixão Kröhling <juraci@kroehling.de>")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/325") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/325/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/325/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/325/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/325") (id . 292825990) (number . 325) (title . "`testSenderWithAgentDataFromEnv` fails locally") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-01-30T15:31:27Z") (updated_at . "2018-01-30T16:37:06Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "This [test](https://github.com/jaegertracing/jaeger-client-java/blob/master/jaeger-core/src/test/java/com/uber/jaeger/ConfigurationTest.java#L173) fails locally on:
```
OS X 10.12.6
java version \"1.8.0_102\"
Java(TM) SE Runtime Environment (build 1.8.0_102-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)
```

It seems that the behavior of `InetSocketAddress` relied on by test differs on my machine. The following test also fails consistently (even with other arbitrary host/ports) for me:

```java
  @Test
  public void testInetSocket() throws Exception {
    InetSocketAddress inetSocketAddress = new InetSocketAddress(\"jaeger-agent\", 6832);
    assertTrue(inetSocketAddress.isUnresolved());
  }
```")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/321") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/321/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/321/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/321/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/321") (id . 290980445) (number . 321) (title . "Unit tests often stall in Travis") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2018-01-23T20:23:29Z") (updated_at . "2018-01-25T20:18:12Z") (closed_at) (author_association . "OWNER") (body . "like this
```
:jaeger-core:license UP-TO-DATE
:jaeger-core:test
No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.
Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received
The build has been terminated
```
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/318") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/318/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/318/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/318/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/318") (id . 290141812) (number . 318) (title . "Support 128bit IDs") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-01-19T23:55:39Z") (updated_at . "2018-01-19T23:55:39Z") (closed_at) (author_association . "OWNER") (body . "Meta-issue to track everything that needs to happen")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/315") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/315/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/315/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/315/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/315") (id . 286542569) (number . 315) (title . "Allow passing debug span baggage from non-jaegerized clients") (user (login . "dray92") (id . 6182447) (avatar_url . "https://avatars2.githubusercontent.com/u/6182447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dray92") (html_url . "https://github.com/dray92") (followers_url . "https://api.github.com/users/dray92/followers") (following_url . "https://api.github.com/users/dray92/following{/other_user}") (gists_url . "https://api.github.com/users/dray92/gists{/gist_id}") (starred_url . "https://api.github.com/users/dray92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dray92/subscriptions") (organizations_url . "https://api.github.com/users/dray92/orgs") (repos_url . "https://api.github.com/users/dray92/repos") (events_url . "https://api.github.com/users/dray92/events{/privacy}") (received_events_url . "https://api.github.com/users/dray92/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2018-01-07T04:55:56Z") (updated_at . "2018-01-16T04:59:02Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/315") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/315") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/315.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/315.patch")) (body . "Previously, presence of debug ID would not even consider baggage items populated. After I changed that behavior, I realized that the bare presence of the debug ID would cause child span to not get the baggage from list of references. Fixing both of these allowed `uberctx-*` to get populated as span baggage **iff** either ``uber-trace-id`` or ``jaeger-debug-id`` is present.
_**Awesome!**_ 🍺

Now, to maintain parity with the Go client, a new header called ``jaeger-baggage`` is being introduced. Communication to people can be that when using curl, etc to test, include both ``jaeger-debug-id`` and ``jaeger-baggage``. From my reading of the Go code, this seems to be the case (but I don't understand Go much, so I might be wrong).

Signed-off-by: Debosmit Ray <debo@uber.com>")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/298") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/298/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/298/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/298/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/298") (id . 278158183) (number . 298) (title . "Make tracer metrics consistent with Go client") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels ((id . 360321471) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/help%20wanted") (name . "help wanted") (color . "128A0C") (default . t))) (state . "open") (locked) (assignee (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (assignees ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 0) (created_at . "2017-11-30T15:19:47Z") (updated_at . "2018-01-31T11:28:39Z") (closed_at) (author_association . "OWNER") (body . "https://github.com/jaegertracing/jaeger/issues/572")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/293") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/293/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/293/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/293/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/293") (id . 275097803) (number . 293) (title . "Add new module for JSON representation of Spans") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (assignees ((login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-11-18T18:05:08Z") (updated_at . "2018-02-01T04:56:39Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/293") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/293") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/293.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/293.patch")) (body . "I am incorporating Jaeger and there is already a component which
given a file will upload it to an ElasticSearch index.

I am now working on making available through the java-client the same
JSON respresentation that the collector serializes before sending
upstream to the datastore.

You could imagine also other very simple use cases where an AsyncReporter
could also send directly to the datastore.

I'm still thinking about how to make tests since the spanId is randomized.
Please feel free to close this PR if there is the belief there is no use for it -- I just thought I would propose it to see if anyone else finds it valuable.

Here is a sample of the JSON representation:

```json
{
  \"duration\" : 5,
  \"tags\" : [ {
    \"key\" : \"peer.service\",
    \"value\" : \"service-y\",
    \"type\" : \"string\"
  }, {
    \"key\" : \"temperature\",
    \"value\" : 72.5,
    \"type\" : \"float64\"
  }, {
    \"key\" : \"error\",
    \"value\" : true,
    \"type\" : \"bool\"
  }, {
    \"key\" : \"peer.ipv4\",
    \"value\" : 23456,
    \"type\" : \"int64\"
  } ],
  \"traceID\" : \"1\",
  \"spanID\" : \"-1805624008102187457\",
  \"parentSpanID\" : \"2\",
  \"process\" : {
    \"serviceName\" : \"service-x\",
    \"tags\" : [ {
      \"key\" : \"hostname\",
      \"value\" : \"fmzakari-mac\",
      \"type\" : \"string\"
    }, {
      \"key\" : \"jaeger.version\",
      \"value\" : \"Java-0.22.0-RC1\",
      \"type\" : \"string\"
    }, {
      \"key\" : \"ip\",
      \"value\" : \"127.0.0.1\",
      \"type\" : \"string\"
    } ]
  },
  \"logs\" : [ ],
  \"references\" : [ {
    \"traceID\" : \"1\",
    \"spanID\" : \"2\",
    \"refType\" : \"follows_from\"
  }, {
    \"traceID\" : \"1\",
    \"spanID\" : \"2\",
    \"refType\" : \"child_of\"
  } ],
  \"operationName\" : \"test-general-conversion\",
  \"flags\" : 1,
  \"startTime\" : 1485467191639875
}
```

Signed-off-by: Farid Zakaria <farid.m.zakaria@gmail.com>")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/289") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/289/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/289/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/289/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/289") (id . 273960875) (number . 289) (title . "ClientFilter has no way to skip/ignore tracing certain client calls") (user (login . "justfill22") (id . 3868168) (avatar_url . "https://avatars1.githubusercontent.com/u/3868168?v=4") (gravatar_id . "") (url . "https://api.github.com/users/justfill22") (html_url . "https://github.com/justfill22") (followers_url . "https://api.github.com/users/justfill22/followers") (following_url . "https://api.github.com/users/justfill22/following{/other_user}") (gists_url . "https://api.github.com/users/justfill22/gists{/gist_id}") (starred_url . "https://api.github.com/users/justfill22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/justfill22/subscriptions") (organizations_url . "https://api.github.com/users/justfill22/orgs") (repos_url . "https://api.github.com/users/justfill22/repos") (events_url . "https://api.github.com/users/justfill22/events{/privacy}") (received_events_url . "https://api.github.com/users/justfill22/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-11-14T22:08:06Z") (updated_at . "2017-12-11T22:14:18Z") (closed_at) (author_association . "NONE") (body . "The ClientFilter traces every client call made.  It would be very beneficial if certain client calls were ignored / skipped.

This could be done in a manner similar to how io.opentracing.contrib.web.servlet.filter.TracingFilter (io.opentracing.contrib : opentracing-web-servlet-filter) can be constructed with a skip pattern to allow certain incoming requests to not be traced.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/287") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/287/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/287/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/287/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/287") (id . 273405870) (number . 287) (title . "Change maven group to io.jaegertracing") (user (login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 3) (created_at . "2017-11-13T12:02:35Z") (updated_at . "2018-02-02T15:16:41Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "As discussed on friday's call, the maven group should be changed from `com.uber.jaeger` to `io.jaegertracing`. The proposal was to make this change in the `v0.22.0` branch so that it gets merged to master as part of the OT Java 0.31.0 change.

However the implication is that the Java package would also change (as it usually follows the maven group), and this would be a breaking change - so wanted to make sure this is clear (as wasn't explicitly discussed)?

Other option would be to make this change when moving to version 1,0.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/272") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/272/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/272/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/272/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/272") (id . 266254551) (number . 272) (title . "old httpcore dependency") (user (login . "rbtcollins") (id . 499678) (avatar_url . "https://avatars2.githubusercontent.com/u/499678?v=4") (gravatar_id . "") (url . "https://api.github.com/users/rbtcollins") (html_url . "https://github.com/rbtcollins") (followers_url . "https://api.github.com/users/rbtcollins/followers") (following_url . "https://api.github.com/users/rbtcollins/following{/other_user}") (gists_url . "https://api.github.com/users/rbtcollins/gists{/gist_id}") (starred_url . "https://api.github.com/users/rbtcollins/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/rbtcollins/subscriptions") (organizations_url . "https://api.github.com/users/rbtcollins/orgs") (repos_url . "https://api.github.com/users/rbtcollins/repos") (events_url . "https://api.github.com/users/rbtcollins/events{/privacy}") (received_events_url . "https://api.github.com/users/rbtcollins/received_events") (type . "User") (site_admin)) (labels ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (assignees ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 2) (created_at . "2017-10-17T19:46:21Z") (updated_at . "2018-02-02T15:08:04Z") (closed_at) (author_association . "NONE") (body . "The transitive dependencies through libthrift are getting to be quite old and conflicting with other common APIs - e.g. S3's client lib needs a newer httpcore.

I'm not sure whats involved with upgrading thrift for Jaeger, but perhaps the shaded thrift could be built with newer httpcore or something?

For now we're working around it with

```
<!-- Jaeger - OpenTracing -->
<dependency>
  <groupId>com.uber.jaeger</groupId>
  <artifactId>jaeger-core</artifactId>
  <version>${jaeger.version}</version>
  <exclusions>
  <!-- Current Jaeger transitively depends on httpcore 4.2.4, we want 4.4.4 -->
    <exclusion>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </exclusion>
  </exclusions>
</dependency>
 ```

Note that Java is a second language for me and its possible this is self-inflicted, in which case please close :)")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/271") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/271/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/271/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/271/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/271") (id . 265844121) (number . 271) (title . "Add ability to supply custom span id") (user (login . "fzakaria") (id . 605070) (avatar_url . "https://avatars0.githubusercontent.com/u/605070?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fzakaria") (html_url . "https://github.com/fzakaria") (followers_url . "https://api.github.com/users/fzakaria/followers") (following_url . "https://api.github.com/users/fzakaria/following{/other_user}") (gists_url . "https://api.github.com/users/fzakaria/gists{/gist_id}") (starred_url . "https://api.github.com/users/fzakaria/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fzakaria/subscriptions") (organizations_url . "https://api.github.com/users/fzakaria/orgs") (repos_url . "https://api.github.com/users/fzakaria/repos") (events_url . "https://api.github.com/users/fzakaria/events{/privacy}") (received_events_url . "https://api.github.com/users/fzakaria/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-10-16T17:05:52Z") (updated_at . "2017-10-17T22:03:02Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/271") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/271") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/271.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/271.patch")) (body . "This PR allows users of Jaeger to supply a custom span id.
In order to ease adoption for Jaeger it is beneficial to allow users to potentially supply their own id.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/269") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/269/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/269/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/269/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/269") (id . 264728836) (number . 269) (title . "Use Mockito's timeout for test") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 1) (created_at . "2017-10-11T20:41:31Z") (updated_at . "2017-10-13T16:59:01Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/269") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/269") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/269.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/269.patch")) (body . "- use Mockito's timeout instead of Thread.sleep
- Fixes #268

Signed-off-by: Prithvi Raj <p.r@uber.com>")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/268") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/268/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/268/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/268/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/268") (id . 264724531) (number . 268) (title . "Fix flaky test") (user (login . "black-adder") (id . 791791) (avatar_url . "https://avatars1.githubusercontent.com/u/791791?v=4") (gravatar_id . "") (url . "https://api.github.com/users/black-adder") (html_url . "https://github.com/black-adder") (followers_url . "https://api.github.com/users/black-adder/followers") (following_url . "https://api.github.com/users/black-adder/following{/other_user}") (gists_url . "https://api.github.com/users/black-adder/gists{/gist_id}") (starred_url . "https://api.github.com/users/black-adder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/black-adder/subscriptions") (organizations_url . "https://api.github.com/users/black-adder/orgs") (repos_url . "https://api.github.com/users/black-adder/repos") (events_url . "https://api.github.com/users/black-adder/events{/privacy}") (received_events_url . "https://api.github.com/users/black-adder/received_events") (type . "User") (site_admin)) (labels ((id . 360321468) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/bug") (name . "bug") (color . "ee0701") (default . t)) ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-10-11T20:26:53Z") (updated_at . "2017-10-11T20:41:34Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "```
com.uber.jaeger.samplers.RemoteControlledSamplerTest > testUpdatePerOperationSamplerUpdatesExistingPerOperationSampler FAILED
    org.mockito.exceptions.verification.TooLittleActualInvocations:
    perOperationSampler.update(
        Mock for OperationSamplingParameters, hashCode: 115078806
    );
    Wanted 2 times:
    -> at com.uber.jaeger.samplers.PerOperationSampler.update(PerOperationSampler.java:56)
    But was 1 time:
    -> at com.uber.jaeger.samplers.PerOperationSampler.update(PerOperationSampler.java:56)
        at com.uber.jaeger.samplers.PerOperationSampler.update(PerOperationSampler.java:56)
        at com.uber.jaeger.samplers.RemoteControlledSamplerTest.testUpdatePerOperationSamplerUpdatesExistingPerOperationSampler(RemoteControlledSamplerTest.java:113)
```")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/265") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/265/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/265/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/265/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/265") (id . 263959863) (number . 265) (title . "Update instructions for IntelliJ code style plugin") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 6) (created_at . "2017-10-09T16:48:05Z") (updated_at . "2017-11-23T03:26:32Z") (closed_at) (author_association . "OWNER") (body . "Since we switched to explicit checkstyle config, the previous comment about IntelliJ plugin was removed.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/258") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/258/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/258/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/258/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/258") (id . 263653441) (number . 258) (title . "Revisit construction API for all core public components") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 2) (created_at . "2017-10-07T16:28:30Z") (updated_at . "2018-01-30T10:33:52Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/253") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/253/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/253/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/253/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/253") (id . 263134979) (number . 253) (title . "[Discussion] When should we release v1.0?") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 6) (created_at . "2017-10-05T13:57:30Z") (updated_at . "2018-01-26T16:19:17Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/251") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/251/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/251/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/251/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/251") (id . 262980877) (number . 251) (title . "Declarative option to use HttpSender and bypass agent use") (user (login . "bmozaffa") (id . 2790666) (avatar_url . "https://avatars3.githubusercontent.com/u/2790666?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bmozaffa") (html_url . "https://github.com/bmozaffa") (followers_url . "https://api.github.com/users/bmozaffa/followers") (following_url . "https://api.github.com/users/bmozaffa/following{/other_user}") (gists_url . "https://api.github.com/users/bmozaffa/gists{/gist_id}") (starred_url . "https://api.github.com/users/bmozaffa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bmozaffa/subscriptions") (organizations_url . "https://api.github.com/users/bmozaffa/orgs") (repos_url . "https://api.github.com/users/bmozaffa/repos") (events_url . "https://api.github.com/users/bmozaffa/events{/privacy}") (received_events_url . "https://api.github.com/users/bmozaffa/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-10-05T01:40:56Z") (updated_at . "2017-11-22T18:55:29Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "The use of HttpSender instead of UdpSender would allow the Jaeger client stack to directly send tracing data to the collector, thereby removing the need for a running agent in the application or elsewhere. Ideally, such functionality would be configurable in an environment like WildFly Swarm without the need to write code.

If the call using HttpSender can be made outside the running application thread, shielding the business code from both the lag and potential failure, it can be a viable alternative to having agents deployed.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/247") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/247/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/247/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/247/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/247") (id . 262302594) (number . 247) (title . "Use grizzly tests for jaxrs2 instrumentation") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels ((id . 711415642) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/review") (name . "review") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 1) (created_at . "2017-10-03T04:42:31Z") (updated_at . "2017-10-12T01:58:39Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/247") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/247") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/247.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/247.patch")) (body . "- Add grizzly tests for jaxrs2 instrumentation
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/244") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/244/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/244/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/244/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/244") (id . 260314346) (number . 244) (title . "Use semver in the dependencies") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-09-25T15:16:04Z") (updated_at . "2017-09-26T19:50:42Z") (closed_at) (author_association . "OWNER") (body . "something like the following:
```xml
 <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>[3.0, 3.8.2)</version>
    </dependency>
```

 *  http://www.mojohaus.org/versions-maven-plugin/examples/resolve-ranges.html
 * https://docs.gradle.org/current/userguide/dependency_management.html#sub:dynamic_versions_and_changing_modules
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/235") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/235/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/235/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/235/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/235") (id . 258084666) (number . 235) (title . "Tracer concurrency tests") (user (login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-09-15T15:47:05Z") (updated_at . "2017-09-15T15:47:05Z") (closed_at) (author_association . "OWNER") (body . "Create a test which concurrently uses tracer/tracers.

Related PR https://github.com/uber/jaeger-client-java/pull/233")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/231") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/231/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/231/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/231/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/231") (id . 253977890) (number . 231) (title . "Persisting incomplete spans") (user (login . "phal0r") (id . 3658211) (avatar_url . "https://avatars3.githubusercontent.com/u/3658211?v=4") (gravatar_id . "") (url . "https://api.github.com/users/phal0r") (html_url . "https://github.com/phal0r") (followers_url . "https://api.github.com/users/phal0r/followers") (following_url . "https://api.github.com/users/phal0r/following{/other_user}") (gists_url . "https://api.github.com/users/phal0r/gists{/gist_id}") (starred_url . "https://api.github.com/users/phal0r/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/phal0r/subscriptions") (organizations_url . "https://api.github.com/users/phal0r/orgs") (repos_url . "https://api.github.com/users/phal0r/repos") (events_url . "https://api.github.com/users/phal0r/events{/privacy}") (received_events_url . "https://api.github.com/users/phal0r/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 11) (created_at . "2017-08-30T12:18:21Z") (updated_at . "2018-01-29T17:01:30Z") (closed_at) (author_association . "NONE") (body . "I have a question/ feature request:

We want to utilize Jaeger as Tracing/Logging framework for processes and web services. It is important for us that a span gets persisted once it's created and not only when it is finished.

Let's assume the following scenario: A process which has some substeps gets executed and runs like 5-10 minutes. The process creates a span with its name and some tags. Also, every substep creates a span. Once finished the span is being persisted with the next client flush. This means for the first span, that it's persisted after 10 minutes. To monitor the execution, it is important for us that the first span is being persisted after creation and updated when finished.

(just to clarify: by process I mean hierarchical steps of work  running in the JVM not a os process)

I think this would be a nice feature in general as it would be possible to see long running spans and spans that never finish, cause the applications shuts down, has connectivity problems or other issues during processing that prevent it to send the span to the collector at the end.

What do you think about this? ")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/230") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/230/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/230/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/230/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/230") (id . 252438294) (number . 230) (title . "Fix metric name for reporterDropped counter.") (user (login . "isaachier") (id . 2578297) (avatar_url . "https://avatars3.githubusercontent.com/u/2578297?v=4") (gravatar_id . "") (url . "https://api.github.com/users/isaachier") (html_url . "https://github.com/isaachier") (followers_url . "https://api.github.com/users/isaachier/followers") (following_url . "https://api.github.com/users/isaachier/following{/other_user}") (gists_url . "https://api.github.com/users/isaachier/gists{/gist_id}") (starred_url . "https://api.github.com/users/isaachier/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/isaachier/subscriptions") (organizations_url . "https://api.github.com/users/isaachier/orgs") (repos_url . "https://api.github.com/users/isaachier/repos") (events_url . "https://api.github.com/users/isaachier/events{/privacy}") (received_events_url . "https://api.github.com/users/isaachier/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-08-23T22:46:14Z") (updated_at . "2017-08-24T16:51:23Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/230") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/230") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/230.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/230.patch")) (body . "Based on the go client (https://github.com/uber/jaeger-client-go/blob/master/metrics.go#L63), the metric name is incorrect.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/228") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/228/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/228/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/228/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/228") (id . 248349156) (number . 228) (title . "How to use jaeger-thrift  classifier  thrift92 right?") (user (login . "candyleer") (id . 11530760) (avatar_url . "https://avatars1.githubusercontent.com/u/11530760?v=4") (gravatar_id . "") (url . "https://api.github.com/users/candyleer") (html_url . "https://github.com/candyleer") (followers_url . "https://api.github.com/users/candyleer/followers") (following_url . "https://api.github.com/users/candyleer/following{/other_user}") (gists_url . "https://api.github.com/users/candyleer/gists{/gist_id}") (starred_url . "https://api.github.com/users/candyleer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/candyleer/subscriptions") (organizations_url . "https://api.github.com/users/candyleer/orgs") (repos_url . "https://api.github.com/users/candyleer/repos") (events_url . "https://api.github.com/users/candyleer/events{/privacy}") (received_events_url . "https://api.github.com/users/candyleer/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2017-08-07T09:03:08Z") (updated_at . "2017-09-11T15:41:06Z") (closed_at) (author_association . "NONE") (body . "My project thrift version is 0.5.0,so it's conflict  with jaeger-thrift,so I follow the docs to use classifier  thrift92,but when i replace the pom ,I found it's not compatible with jaeger-core.
because the jaeger-core UdpSender  is dependent on org.apache.thrift.protocol.TCompactProtocol,
org.apache.thrift.protocol.TProtocolFactory ,and in class com.uber.jaeger.agent.thrift.Agent.Client#Client(org.apache.thrift.protocol.TProtocol),it's constructor use original thrift,how can i use org.shadow.apache.thrift92 (classifier  thrift92 supplied ),not org.apache.thrift to avoid conflict? rewrite the UdpSender and ThriftUdpTransport  and any relation class that dependent on  org.apache.thrift ?")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/225") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/225/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/225/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/225/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/225") (id . 246443616) (number . 225) (title . "Does it make sense to use gzip compression for Thrift HTTP senders?") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-28T19:52:25Z") (updated_at . "2017-07-28T19:52:25Z") (closed_at) (author_association . "OWNER") (body . "This change https://github.com/uber/jaeger/pull/282 allows gzip, but perhaps it's only useful when submitting spans as JSON.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/222") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/222/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/222/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/222/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/222") (id . 245617811) (number . 222) (title . "add wrapper for ScheduledExecutorService") (user (login . "ccl0326") (id . 904084) (avatar_url . "https://avatars2.githubusercontent.com/u/904084?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ccl0326") (html_url . "https://github.com/ccl0326") (followers_url . "https://api.github.com/users/ccl0326/followers") (following_url . "https://api.github.com/users/ccl0326/following{/other_user}") (gists_url . "https://api.github.com/users/ccl0326/gists{/gist_id}") (starred_url . "https://api.github.com/users/ccl0326/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ccl0326/subscriptions") (organizations_url . "https://api.github.com/users/ccl0326/orgs") (repos_url . "https://api.github.com/users/ccl0326/repos") (events_url . "https://api.github.com/users/ccl0326/events{/privacy}") (received_events_url . "https://api.github.com/users/ccl0326/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-07-26T06:22:16Z") (updated_at . "2017-07-27T03:53:20Z") (closed_at) (author_association . "NONE") (body . "as title.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/212") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/212/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/212/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/212/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/212") (id . 243174892) (number . 212) (title . "Make it easier for one process to report spans as multiple services") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 4) (created_at . "2017-07-15T13:18:55Z") (updated_at . "2017-07-17T09:35:22Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I have a process which listens on a queue with spans in our internal format and reports them to jaeger. Right now I create N tracers and it's acceptable because N is rather low (~50) - one per service, and I ignore other \"process\" tags like IP. And that was the simplest way.

I do that because `UDPSender` caches process tags and additionally process tags are taken from Tracer instance which adds them automatically.

Here's what could work:
- disable sampling for a given span so that it is not reported when `finish`ed - that should work currently
- somehow bypass caching of `Process` inside `UDPSender` that would allow to have just one `UDPSender` instance (or one per thread, one per consumer, etc.)
- add new method to `UDPSender` which appends a span but takes additionally a `Process` and `processBytesSize`, something like:

```
  // old append delegates to the new method
  @Override
  public int append(Span span) throws SenderException {
    if (process == null) {
      process = new Process(span.getTracer().getServiceName());
      process.setTags(JaegerThriftSpanConverter.buildTags(span.getTracer().tags()));
      processBytesSize = getSizeOfSerializedThrift(process);
      byteBufferSize += processBytesSize;
    }
    append(span, process, processBytesSize);
}

public int append(Span span, Process process, int processBytesSize) throws SenderException {
    (...)
}
```
What I don't like here is the risk that passed `processBytesSize` won't match the real `process` size. But maybe it would be possible to create a separate class which contains Process and caches its size.

What do you think?")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/211") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/211/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/211/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/211/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/211") (id . 243172737) (number . 211) (title . "Reporter-spans[state=success] metric is inaccurate") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-07-15T12:34:14Z") (updated_at . "2017-07-15T12:34:36Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "There's a missing `metrics.reporterSuccess.inc(n)` inside `AppendCommand`. It was tricky to spot because `UDPSender.append` flushes only at high throughput and at lower levels things look fine.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/204") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/204/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/204/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/204/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/204") (id . 238838363) (number . 204) (title . "Make the span active after extraction within the jersey filter") (user (login . "hloos") (id . 5079768) (avatar_url . "https://avatars1.githubusercontent.com/u/5079768?v=4") (gravatar_id . "") (url . "https://api.github.com/users/hloos") (html_url . "https://github.com/hloos") (followers_url . "https://api.github.com/users/hloos/followers") (following_url . "https://api.github.com/users/hloos/following{/other_user}") (gists_url . "https://api.github.com/users/hloos/gists{/gist_id}") (starred_url . "https://api.github.com/users/hloos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/hloos/subscriptions") (organizations_url . "https://api.github.com/users/hloos/orgs") (repos_url . "https://api.github.com/users/hloos/repos") (events_url . "https://api.github.com/users/hloos/events{/privacy}") (received_events_url . "https://api.github.com/users/hloos/received_events") (type . "User") (site_admin)) (labels ((id . 360321468) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/bug") (name . "bug") (color . "ee0701") (default . t)) ((id . 712439419) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/in%20progress") (name . "in progress") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 2) (created_at . "2017-06-27T12:44:27Z") (updated_at . "2017-10-06T15:11:29Z") (closed_at) (author_association . "NONE") (body . "Hello,

Maybe I misunderstand the way the span needs to be used but, in jaeger-jaxrs2, when using the com.uber.jaeger.filters.jaxrs2.ServerFilter, the span created after extraction of the request headers is currently not made active within the tracer instance.

```
SpanContext spanContext = tracer.extract(Format.Builtin.HTTP_HEADERS, carrier);
if (spanContext != null) {
    builder = builder.asChildOf(spanContext);
}
Span serverSpan = builder.startManual();

// the following line is missing
tracer.makeActive(serverSpan);

traceContext.push(serverSpan);
```

Therefor, when building a new span within the application, a new span is created instead of a child of the one extracted from the request.

```
try(ActiveSpan activeSpan = tracer.buildSpan(\"jumpcargo-my-friend\").startActive()) {
}
```

Version of opentracing: 0.30.0
Version of jaeger-client-java: 0.20.0

")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/192") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/192/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/192/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/192/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/192") (id . 232728367) (number . 192) (title . "Side effects of imprecise clock") (user (login . "mabn") (id . 2757166) (avatar_url . "https://avatars0.githubusercontent.com/u/2757166?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mabn") (html_url . "https://github.com/mabn") (followers_url . "https://api.github.com/users/mabn/followers") (following_url . "https://api.github.com/users/mabn/following{/other_user}") (gists_url . "https://api.github.com/users/mabn/gists{/gist_id}") (starred_url . "https://api.github.com/users/mabn/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mabn/subscriptions") (organizations_url . "https://api.github.com/users/mabn/orgs") (repos_url . "https://api.github.com/users/mabn/repos") (events_url . "https://api.github.com/users/mabn/events{/privacy}") (received_events_url . "https://api.github.com/users/mabn/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 13) (created_at . "2017-05-31T23:45:36Z") (updated_at . "2017-08-01T23:43:15Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I found an interesting problem that took some time to track down.

Basically spans in the jaeger UI were \"centered\" in a weird way. Initially I thought that it's some UI issue, but after comparing the json returned by jaeger-query with cassandra it turned out that jaeger-query completely messes span start times. And by completely I mean that span taking 1ms was shifted by 3ms. Here's how it looks like:

![Alt text](https://monosnap.com/file/YZPE6yqX0wzLVQ0lDTcY6ake5DgmZa.png)

In this example \"child 2\" should happen as the last span inside the \"parent\" - should be stuck to the right edge of the parent. There's no delay because all those spans are reported by the same process.

After digging through the jaeger code I found `ClockSkew` and there are two problems here:
1. `ClockSkew` adjust span start times if they overlap with their parent. It does it only if parent and child are reported by different hosts, but the host is taken from \"ip\" tag of the process. If it's missing the default is to assume that these are different hosts.
2. jaeger-client-java by default uses `SystemClock` which has millisecond precision, but timestamps reported to jaeger are in microseconds. To convert the time to micros it multiplies it by 1000:
    ```java
    public long currentTimeMicros() {  return System.currentTimeMillis() * 1000; }
    ```
    One can think of it as rounding down exact start time to milliseconds.

    Span duration on the other hand is calculated with more precise `System.nanoTime`.
  As a result of this rounding it's possible that:
    ```
    round(parent.start) + parent.duration < round(child.start) + child.duration
    ```
    for children which end at the same time as the parent it happens very often.

So - child span end time exceeds parent's finish time by between 0 and 1000 micros which in combination with missing process \"ip\" tag triggers clock skew adjuster. And for very long parents and very short children the adjustment is drastic (around 50% of parent duration).

There are two options:
1. change the default in jaeger-query
2. better clock implementation in jaeger-client-java
3. add \"ip\" process tag by default

I guess that the default make sense so better clock implementation would be a good improvement.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/182") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/182/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/182/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/182/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/182") (id . 228556498) (number . 182) (title . "Deprecate instrumentations in favor of opentracing-contrib") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels ((id . 360321470) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 11) (created_at . "2017-05-14T17:39:45Z") (updated_at . "2018-01-19T23:53:57Z") (closed_at) (author_association . "OWNER") (body . "Many of the frameworks we instrumented in jaeger-client-java are also instrumented in opentracing-contrib. We should deprecate Jaeger-specific instrumentation.

Criteria:
 * [x] Need to implement #179 to support active span
 * [ ] Deprecate jaeger-context (make it a wrapper around active span, if possible)
 * [ ] Need to investigate compatibility of opentracing-contrib libs with how Jaeger instrumentation was done. Ideally we want to avoid forcing changes to existing code by keeping Jaeger classes as thin wrappers around opentracing-contrib
 * [ ] If complete backwards compatibility is not possible, document exact migration steps")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/172") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/172/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/172/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/172/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/172") (id . 226846892) (number . 172) (title . "Support a Prometheus metrics endpoint") (user (login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 17) (created_at . "2017-05-07T10:24:34Z") (updated_at . "2017-09-16T17:36:14Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Enable metrics collected from the Jaeger client, and the service (application) being instrumented, to be reported to a prometheus compatible metrics system.

Initial suggestion is to record some generic metrics related to any Spans of certain `span.kind`, such as `client`, `server`, `producer`, `consumer`.

Metrics names could be based on `service`, `operation` and `span.kind`.

A counter could be reported for the invocation of the service\\operation\\spankind. A counter could also be recorded for any span that has an `error` tag of `true`.

Protocol specific scenarios should also be considered - for example with HTTP we may want to record counters regarding the status code categories, e.g. 4xx, 5xx.
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/171") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/171/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/171/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/171/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/171") (id . 226657835) (number . 171) (title . "Add short circuiting") (user (login . "black-adder") (id . 791791) (avatar_url . "https://avatars1.githubusercontent.com/u/791791?v=4") (gravatar_id . "") (url . "https://api.github.com/users/black-adder") (html_url . "https://github.com/black-adder") (followers_url . "https://api.github.com/users/black-adder/followers") (following_url . "https://api.github.com/users/black-adder/following{/other_user}") (gists_url . "https://api.github.com/users/black-adder/gists{/gist_id}") (starred_url . "https://api.github.com/users/black-adder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/black-adder/subscriptions") (organizations_url . "https://api.github.com/users/black-adder/orgs") (repos_url . "https://api.github.com/users/black-adder/repos") (events_url . "https://api.github.com/users/black-adder/events{/privacy}") (received_events_url . "https://api.github.com/users/black-adder/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-05-05T18:39:33Z") (updated_at . "2017-05-05T22:41:23Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/171") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/171") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/171.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/171.patch")) (body . "")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/168") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/168/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/168/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/168/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/168") (id . 226236952) (number . 168) (title . "Expand exception logs") (user (login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-05-04T10:23:33Z") (updated_at . "2017-05-14T17:30:12Z") (closed_at) (author_association . "OWNER") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/168") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/168") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/168.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/168.patch")) (body . "")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/159") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/159/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/159/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/159/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/159") (id . 225938799) (number . 159) (title . "Fix javadoc checkstyle ") (user (login . "pavolloffay") (id . 5618424) (avatar_url . "https://avatars0.githubusercontent.com/u/5618424?v=4") (gravatar_id . "") (url . "https://api.github.com/users/pavolloffay") (html_url . "https://github.com/pavolloffay") (followers_url . "https://api.github.com/users/pavolloffay/followers") (following_url . "https://api.github.com/users/pavolloffay/following{/other_user}") (gists_url . "https://api.github.com/users/pavolloffay/gists{/gist_id}") (starred_url . "https://api.github.com/users/pavolloffay/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/pavolloffay/subscriptions") (organizations_url . "https://api.github.com/users/pavolloffay/orgs") (repos_url . "https://api.github.com/users/pavolloffay/repos") (events_url . "https://api.github.com/users/pavolloffay/events{/privacy}") (received_events_url . "https://api.github.com/users/pavolloffay/received_events") (type . "User") (site_admin)) (labels ((id . 712440397) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/backlog") (name . "backlog") (color . "ededed") (default))) (state . "open") (locked) (assignee (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (assignees ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-05-03T10:13:34Z") (updated_at . "2017-10-06T15:12:16Z") (closed_at) (author_association . "OWNER") (body . "Currently, there are disabled some javadoc related rules e.g. https://github.com/uber/jaeger-client-java/blob/master/config/checkstyle/checkstyle.xml#L187.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/146") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/146/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/146/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/146/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/146") (id . 223578692) (number . 146) (title . "Allow setting baggage headers on requests without a trace context") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1") (html_url . "https://github.com/jaegertracing/jaeger-client-java/milestone/1") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones/1/labels") (id . 3049800) (number . 1) (title . "1.0 release") (description . "") (creator (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (open_issues . 8) (closed_issues . 1) (state . "open") (created_at . "2018-01-19T23:50:23Z") (updated_at . "2018-02-01T01:42:41Z") (due_on) (closed_at)) (comments . 1) (created_at . "2017-04-22T17:12:06Z") (updated_at . "2018-01-19T23:54:19Z") (closed_at) (author_association . "OWNER") (body . "It is useful
  * for debugging purposes, e.g. when you curl an endpoint and cannot start a trace from client side,
  * in production scenarios, e.g. we have an auth plugin to haproxy that's written in Lua, for which we don't have a jaeger client lib yet, so they cannot do the normal tracing operations, but they do want to store the auth token in the baggage.

In other clients (e.g. [Go](https://github.com/uber/jaeger-client-go/blob/master/propagation.go#L144)) we allow using `jaeger-baggage: k1=v1,k2=v2` header for this purpose, as well as the normal `uberctx-`-prefixed headers.
  ")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/121") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/121/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/121/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/121/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/121") (id . 197077809) (number . 121) (title . "Configure license header plugin ") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-12-22T02:03:50Z") (updated_at . "2016-12-22T02:03:50Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "The current configuration for the license header plugin updates the license header on build and doesn't seem to test the presence of a header when code without a header is checked in.

Read the documentation here https://github.com/hierynomus/license-gradle-plugin and configure the plugin to fail the build if a license header isn't applied. Do not apply the license header as part of the build. (Doing so unnecessarily applies the header to all the thrift generated files which is potentially slowing down the build).
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/87") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/87/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/87/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/87/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/87") (id . 188552787) (number . 87) (title . "Log traffic with debug header") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels ((id . 360321470) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t)) ((id . 360321471) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/help%20wanted") (name . "help wanted") (color . "128A0C") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2016-11-10T16:22:39Z") (updated_at . "2017-05-14T17:46:47Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "In all of the http filters, log when a request is received with jaeger-debug-header set")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/86") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/86/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/86/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/86/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/86") (id . 188543533) (number . 86) (title . "Allow for easy logging of traceIds") (user (login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 12) (created_at . "2016-11-10T15:48:52Z") (updated_at . "2017-07-15T19:00:45Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Most applications don't have a formal way of correlating log lines for a given request even within the application.
For these applications, it would be very beneficial to set the traceId in a [MDC](http://www.slf4j.org/api/org/slf4j/MDC.html) which allows end users to simply add the traceId's MDC parameter to their log format string, enabling them to separate log lines on a per request basis.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/84") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/84/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/84/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/84/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/84") (id . 185496172) (number . 84) (title . "Consider using manual thrift payload generation") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 19) (created_at . "2016-10-26T20:06:11Z") (updated_at . "2017-10-04T15:14:58Z") (closed_at) (author_association . "OWNER") (body . "@adriancole did this in Zipkin by implementing thrift-like serialization manually. However, if we do this, I'd only do it along with upgrading to the new data model.
- [ ] manual thrift serializer
- [ ] unit tests validating that regular Thrift serializer can read the manually generated bytes payload
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/58") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/58/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/58/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/58/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/58") (id . 178409737) (number . 58) (title . "Automate release process") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (assignees ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin))) (milestone) (comments . 22) (created_at . "2016-09-21T17:17:43Z") (updated_at . "2017-10-16T13:54:54Z") (closed_at) (author_association . "OWNER") (body . "Current release process is documented in the readme and is fairly painful. The most ideal process would be to push a tag and have the release happen automatically (but I am not clear what happens to the changelog in this case). Using a make command would also be acceptable if it can do a bunch of changes in a row like bump the version, publish, bump version to snapshot again, and then automatically close & release the repo from staging to maven via sonatype.
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/44") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/44/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/44/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/44/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/44") (id . 175659967) (number . 44) (title . "Isn't possible to override the Reporter or inject/extract using com.uber.jaeger.Configuration") (user (login . "adriancole") (id . 64215) (avatar_url . "https://avatars2.githubusercontent.com/u/64215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adriancole") (html_url . "https://github.com/adriancole") (followers_url . "https://api.github.com/users/adriancole/followers") (following_url . "https://api.github.com/users/adriancole/following{/other_user}") (gists_url . "https://api.github.com/users/adriancole/gists{/gist_id}") (starred_url . "https://api.github.com/users/adriancole/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adriancole/subscriptions") (organizations_url . "https://api.github.com/users/adriancole/orgs") (repos_url . "https://api.github.com/users/adriancole/repos") (events_url . "https://api.github.com/users/adriancole/events{/privacy}") (received_events_url . "https://api.github.com/users/adriancole/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-09-08T04:00:06Z") (updated_at . "2016-09-09T01:14:48Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I'm having to do a lot of hacking to make it possible to use an alternate Reporter (or at least an alternate Sender) with the current com.uber.jaeger.Configuration.
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/42") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/42/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/42/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/42/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/42") (id . 175325029) (number . 42) (title . "Investigate \"warning: [options] bootstrap class path not set in conjunction with -source 1.7\"") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-09-06T19:03:44Z") (updated_at . "2017-11-20T17:24:44Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/29") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/29/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/29/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/29/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/issues/29") (id . 171042445) (number . 29) (title . "Do not publish snapshot artifacts from branches/PRs") (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-08-14T04:56:46Z") (updated_at . "2016-08-14T04:56:46Z") (closed_at) (author_association . "OWNER") (body . "Snapshot should be only published from `master`
"))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "jaegertracing")) (name . "jaeger-client-java"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin)))))) ((login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin) (name) (company) (blog . "http://www.devx.me") (location . "厦门") (email) (hireable) (bio) (public_repos . 8) (public_gists . 0) (followers . 47) (following . 258) (created_at . "2011-11-08T12:25:06Z") (updated_at . "2017-10-03T14:12:29Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)))))) ((login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin) (name . "Juraci Paixão Kröhling") (company . "Red Hat") (blog . "") (location . "Munich, Germany") (email . "juraci.github@kroehling.de") (hireable) (bio) (public_repos . 198) (public_gists . 9) (followers . 28) (following . 40) (created_at . "2008-06-11T18:30:43Z") (updated_at . "2018-01-29T13:42:55Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dray92") (id . 6182447) (avatar_url . "https://avatars2.githubusercontent.com/u/6182447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dray92") (html_url . "https://github.com/dray92") (followers_url . "https://api.github.com/users/dray92/followers") (following_url . "https://api.github.com/users/dray92/following{/other_user}") (gists_url . "https://api.github.com/users/dray92/gists{/gist_id}") (starred_url . "https://api.github.com/users/dray92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dray92/subscriptions") (organizations_url . "https://api.github.com/users/dray92/orgs") (repos_url . "https://api.github.com/users/dray92/repos") (events_url . "https://api.github.com/users/dray92/events{/privacy}") (received_events_url . "https://api.github.com/users/dray92/received_events") (type . "User") (site_admin)))))) ((login . "dray92") (id . 6182447) (avatar_url . "https://avatars2.githubusercontent.com/u/6182447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dray92") (html_url . "https://github.com/dray92") (followers_url . "https://api.github.com/users/dray92/followers") (following_url . "https://api.github.com/users/dray92/following{/other_user}") (gists_url . "https://api.github.com/users/dray92/gists{/gist_id}") (starred_url . "https://api.github.com/users/dray92/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dray92/subscriptions") (organizations_url . "https://api.github.com/users/dray92/orgs") (repos_url . "https://api.github.com/users/dray92/repos") (events_url . "https://api.github.com/users/dray92/events{/privacy}") (received_events_url . "https://api.github.com/users/dray92/received_events") (type . "User") (site_admin) (name . "Debosmit Ray") (company . "Uber Technologies, Inc.") (blog . "http://dray92.github.io") (location . "Seattle, WA, USA") (email . "dray92@uw.edu") (hireable . t) (bio) (public_repos . 44) (public_gists . 0) (followers . 5) (following . 3) (created_at . "2013-12-14T01:22:44Z") (updated_at . "2018-02-01T16:03:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin)))))) ((login . "vprithvi") (id . 833009) (avatar_url . "https://avatars0.githubusercontent.com/u/833009?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vprithvi") (html_url . "https://github.com/vprithvi") (followers_url . "https://api.github.com/users/vprithvi/followers") (following_url . "https://api.github.com/users/vprithvi/following{/other_user}") (gists_url . "https://api.github.com/users/vprithvi/gists{/gist_id}") (starred_url . "https://api.github.com/users/vprithvi/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vprithvi/subscriptions") (organizations_url . "https://api.github.com/users/vprithvi/orgs") (repos_url . "https://api.github.com/users/vprithvi/repos") (events_url . "https://api.github.com/users/vprithvi/events{/privacy}") (received_events_url . "https://api.github.com/users/vprithvi/received_events") (type . "User") (site_admin) (name . "Prithvi Raj") (company . "@uber ") (blog . "") (location . "New York") (email) (hireable . t) (bio) (public_repos . 15) (public_gists . 1) (followers . 17) (following . 15) (created_at . "2011-06-06T15:47:47Z") (updated_at . "2017-12-06T15:52:03Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "isaachier") (id . 2578297) (avatar_url . "https://avatars3.githubusercontent.com/u/2578297?v=4") (gravatar_id . "") (url . "https://api.github.com/users/isaachier") (html_url . "https://github.com/isaachier") (followers_url . "https://api.github.com/users/isaachier/followers") (following_url . "https://api.github.com/users/isaachier/following{/other_user}") (gists_url . "https://api.github.com/users/isaachier/gists{/gist_id}") (starred_url . "https://api.github.com/users/isaachier/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/isaachier/subscriptions") (organizations_url . "https://api.github.com/users/isaachier/orgs") (repos_url . "https://api.github.com/users/isaachier/repos") (events_url . "https://api.github.com/users/isaachier/events{/privacy}") (received_events_url . "https://api.github.com/users/isaachier/received_events") (type . "User") (site_admin)))))) ((login . "isaachier") (id . 2578297) (avatar_url . "https://avatars3.githubusercontent.com/u/2578297?v=4") (gravatar_id . "") (url . "https://api.github.com/users/isaachier") (html_url . "https://github.com/isaachier") (followers_url . "https://api.github.com/users/isaachier/followers") (following_url . "https://api.github.com/users/isaachier/following{/other_user}") (gists_url . "https://api.github.com/users/isaachier/gists{/gist_id}") (starred_url . "https://api.github.com/users/isaachier/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/isaachier/subscriptions") (organizations_url . "https://api.github.com/users/isaachier/orgs") (repos_url . "https://api.github.com/users/isaachier/repos") (events_url . "https://api.github.com/users/isaachier/events{/privacy}") (received_events_url . "https://api.github.com/users/isaachier/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 47) (public_gists . 0) (followers . 9) (following . 1) (created_at . "2012-10-17T05:54:10Z") (updated_at . "2017-12-26T11:14:43Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "black-adder") (id . 791791) (avatar_url . "https://avatars1.githubusercontent.com/u/791791?v=4") (gravatar_id . "") (url . "https://api.github.com/users/black-adder") (html_url . "https://github.com/black-adder") (followers_url . "https://api.github.com/users/black-adder/followers") (following_url . "https://api.github.com/users/black-adder/following{/other_user}") (gists_url . "https://api.github.com/users/black-adder/gists{/gist_id}") (starred_url . "https://api.github.com/users/black-adder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/black-adder/subscriptions") (organizations_url . "https://api.github.com/users/black-adder/orgs") (repos_url . "https://api.github.com/users/black-adder/repos") (events_url . "https://api.github.com/users/black-adder/events{/privacy}") (received_events_url . "https://api.github.com/users/black-adder/received_events") (type . "User") (site_admin)))))) ((login . "black-adder") (id . 791791) (avatar_url . "https://avatars1.githubusercontent.com/u/791791?v=4") (gravatar_id . "") (url . "https://api.github.com/users/black-adder") (html_url . "https://github.com/black-adder") (followers_url . "https://api.github.com/users/black-adder/followers") (following_url . "https://api.github.com/users/black-adder/following{/other_user}") (gists_url . "https://api.github.com/users/black-adder/gists{/gist_id}") (starred_url . "https://api.github.com/users/black-adder/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/black-adder/subscriptions") (organizations_url . "https://api.github.com/users/black-adder/orgs") (repos_url . "https://api.github.com/users/black-adder/repos") (events_url . "https://api.github.com/users/black-adder/events{/privacy}") (received_events_url . "https://api.github.com/users/black-adder/received_events") (type . "User") (site_admin) (name . "Won Jun Jang") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 15) (following . 0) (created_at . "2011-05-16T19:49:27Z") (updated_at . "2018-01-25T19:12:57Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "malafeev") (id . 1412925) (avatar_url . "https://avatars3.githubusercontent.com/u/1412925?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malafeev") (html_url . "https://github.com/malafeev") (followers_url . "https://api.github.com/users/malafeev/followers") (following_url . "https://api.github.com/users/malafeev/following{/other_user}") (gists_url . "https://api.github.com/users/malafeev/gists{/gist_id}") (starred_url . "https://api.github.com/users/malafeev/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malafeev/subscriptions") (organizations_url . "https://api.github.com/users/malafeev/orgs") (repos_url . "https://api.github.com/users/malafeev/repos") (events_url . "https://api.github.com/users/malafeev/events{/privacy}") (received_events_url . "https://api.github.com/users/malafeev/received_events") (type . "User") (site_admin)))))) ((login . "malafeev") (id . 1412925) (avatar_url . "https://avatars3.githubusercontent.com/u/1412925?v=4") (gravatar_id . "") (url . "https://api.github.com/users/malafeev") (html_url . "https://github.com/malafeev") (followers_url . "https://api.github.com/users/malafeev/followers") (following_url . "https://api.github.com/users/malafeev/following{/other_user}") (gists_url . "https://api.github.com/users/malafeev/gists{/gist_id}") (starred_url . "https://api.github.com/users/malafeev/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/malafeev/subscriptions") (organizations_url . "https://api.github.com/users/malafeev/orgs") (repos_url . "https://api.github.com/users/malafeev/repos") (events_url . "https://api.github.com/users/malafeev/events{/privacy}") (received_events_url . "https://api.github.com/users/malafeev/received_events") (type . "User") (site_admin) (name . "Sergei Malafeev") (company) (blog . "") (location . "Singapore") (email . "sergeymalafeev@gmail.com") (hireable . t) (bio) (public_repos . 16) (public_gists . 0) (followers . 0) (following . 3) (created_at . "2012-02-06T15:26:16Z") (updated_at . "2018-01-25T08:34:06Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "milenkovicm") (id . 956287) (avatar_url . "https://avatars1.githubusercontent.com/u/956287?v=4") (gravatar_id . "") (url . "https://api.github.com/users/milenkovicm") (html_url . "https://github.com/milenkovicm") (followers_url . "https://api.github.com/users/milenkovicm/followers") (following_url . "https://api.github.com/users/milenkovicm/following{/other_user}") (gists_url . "https://api.github.com/users/milenkovicm/gists{/gist_id}") (starred_url . "https://api.github.com/users/milenkovicm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/milenkovicm/subscriptions") (organizations_url . "https://api.github.com/users/milenkovicm/orgs") (repos_url . "https://api.github.com/users/milenkovicm/repos") (events_url . "https://api.github.com/users/milenkovicm/events{/privacy}") (received_events_url . "https://api.github.com/users/milenkovicm/received_events") (type . "User") (site_admin)))))) ((login . "milenkovicm") (id . 956287) (avatar_url . "https://avatars1.githubusercontent.com/u/956287?v=4") (gravatar_id . "") (url . "https://api.github.com/users/milenkovicm") (html_url . "https://github.com/milenkovicm") (followers_url . "https://api.github.com/users/milenkovicm/followers") (following_url . "https://api.github.com/users/milenkovicm/following{/other_user}") (gists_url . "https://api.github.com/users/milenkovicm/gists{/gist_id}") (starred_url . "https://api.github.com/users/milenkovicm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/milenkovicm/subscriptions") (organizations_url . "https://api.github.com/users/milenkovicm/orgs") (repos_url . "https://api.github.com/users/milenkovicm/repos") (events_url . "https://api.github.com/users/milenkovicm/events{/privacy}") (received_events_url . "https://api.github.com/users/milenkovicm/received_events") (type . "User") (site_admin) (name . "Marko Milenković") (company) (blog . "https://twitter.com/marko_m") (location . "Ireland") (email) (hireable) (bio . "Hoping that some day power-point to code generator will be invented.") (public_repos . 13) (public_gists . 29) (followers . 19) (following . 22) (created_at . "2011-08-03T10:35:38Z") (updated_at . "2018-01-15T13:40:45Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "justfill22") (id . 3868168) (avatar_url . "https://avatars1.githubusercontent.com/u/3868168?v=4") (gravatar_id . "") (url . "https://api.github.com/users/justfill22") (html_url . "https://github.com/justfill22") (followers_url . "https://api.github.com/users/justfill22/followers") (following_url . "https://api.github.com/users/justfill22/following{/other_user}") (gists_url . "https://api.github.com/users/justfill22/gists{/gist_id}") (starred_url . "https://api.github.com/users/justfill22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/justfill22/subscriptions") (organizations_url . "https://api.github.com/users/justfill22/orgs") (repos_url . "https://api.github.com/users/justfill22/repos") (events_url . "https://api.github.com/users/justfill22/events{/privacy}") (received_events_url . "https://api.github.com/users/justfill22/received_events") (type . "User") (site_admin)))))) ((login . "justfill22") (id . 3868168) (avatar_url . "https://avatars1.githubusercontent.com/u/3868168?v=4") (gravatar_id . "") (url . "https://api.github.com/users/justfill22") (html_url . "https://github.com/justfill22") (followers_url . "https://api.github.com/users/justfill22/followers") (following_url . "https://api.github.com/users/justfill22/following{/other_user}") (gists_url . "https://api.github.com/users/justfill22/gists{/gist_id}") (starred_url . "https://api.github.com/users/justfill22/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/justfill22/subscriptions") (organizations_url . "https://api.github.com/users/justfill22/orgs") (repos_url . "https://api.github.com/users/justfill22/repos") (events_url . "https://api.github.com/users/justfill22/events{/privacy}") (received_events_url . "https://api.github.com/users/justfill22/received_events") (type . "User") (site_admin) (name . "Phil Jones") (company) (blog . "") (location . "California USA") (email . "justfill22@gmail.com") (hireable) (bio . "will code for food") (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-03-14T20:04:14Z") (updated_at . "2017-11-13T02:09:18Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "bmozaffa") (id . 2790666) (avatar_url . "https://avatars3.githubusercontent.com/u/2790666?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bmozaffa") (html_url . "https://github.com/bmozaffa") (followers_url . "https://api.github.com/users/bmozaffa/followers") (following_url . "https://api.github.com/users/bmozaffa/following{/other_user}") (gists_url . "https://api.github.com/users/bmozaffa/gists{/gist_id}") (starred_url . "https://api.github.com/users/bmozaffa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bmozaffa/subscriptions") (organizations_url . "https://api.github.com/users/bmozaffa/orgs") (repos_url . "https://api.github.com/users/bmozaffa/repos") (events_url . "https://api.github.com/users/bmozaffa/events{/privacy}") (received_events_url . "https://api.github.com/users/bmozaffa/received_events") (type . "User") (site_admin)))))) ((login . "bmozaffa") (id . 2790666) (avatar_url . "https://avatars3.githubusercontent.com/u/2790666?v=4") (gravatar_id . "") (url . "https://api.github.com/users/bmozaffa") (html_url . "https://github.com/bmozaffa") (followers_url . "https://api.github.com/users/bmozaffa/followers") (following_url . "https://api.github.com/users/bmozaffa/following{/other_user}") (gists_url . "https://api.github.com/users/bmozaffa/gists{/gist_id}") (starred_url . "https://api.github.com/users/bmozaffa/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/bmozaffa/subscriptions") (organizations_url . "https://api.github.com/users/bmozaffa/orgs") (repos_url . "https://api.github.com/users/bmozaffa/repos") (events_url . "https://api.github.com/users/bmozaffa/events{/privacy}") (received_events_url . "https://api.github.com/users/bmozaffa/received_events") (type . "User") (site_admin) (name . "Babak") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 7) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2012-11-13T22:12:48Z") (updated_at . "2017-10-18T16:14:10Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "phal0r") (id . 3658211) (avatar_url . "https://avatars3.githubusercontent.com/u/3658211?v=4") (gravatar_id . "") (url . "https://api.github.com/users/phal0r") (html_url . "https://github.com/phal0r") (followers_url . "https://api.github.com/users/phal0r/followers") (following_url . "https://api.github.com/users/phal0r/following{/other_user}") (gists_url . "https://api.github.com/users/phal0r/gists{/gist_id}") (starred_url . "https://api.github.com/users/phal0r/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/phal0r/subscriptions") (organizations_url . "https://api.github.com/users/phal0r/orgs") (repos_url . "https://api.github.com/users/phal0r/repos") (events_url . "https://api.github.com/users/phal0r/events{/privacy}") (received_events_url . "https://api.github.com/users/phal0r/received_events") (type . "User") (site_admin)))))) ((login . "phal0r") (id . 3658211) (avatar_url . "https://avatars3.githubusercontent.com/u/3658211?v=4") (gravatar_id . "") (url . "https://api.github.com/users/phal0r") (html_url . "https://github.com/phal0r") (followers_url . "https://api.github.com/users/phal0r/followers") (following_url . "https://api.github.com/users/phal0r/following{/other_user}") (gists_url . "https://api.github.com/users/phal0r/gists{/gist_id}") (starred_url . "https://api.github.com/users/phal0r/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/phal0r/subscriptions") (organizations_url . "https://api.github.com/users/phal0r/orgs") (repos_url . "https://api.github.com/users/phal0r/repos") (events_url . "https://api.github.com/users/phal0r/events{/privacy}") (received_events_url . "https://api.github.com/users/phal0r/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location . "Eisenhüttenstadt") (email) (hireable) (bio) (public_repos . 4) (public_gists . 0) (followers . 1) (following . 3) (created_at . "2013-02-21T10:18:36Z") (updated_at . "2017-10-25T12:01:33Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "candyleer") (id . 11530760) (avatar_url . "https://avatars1.githubusercontent.com/u/11530760?v=4") (gravatar_id . "") (url . "https://api.github.com/users/candyleer") (html_url . "https://github.com/candyleer") (followers_url . "https://api.github.com/users/candyleer/followers") (following_url . "https://api.github.com/users/candyleer/following{/other_user}") (gists_url . "https://api.github.com/users/candyleer/gists{/gist_id}") (starred_url . "https://api.github.com/users/candyleer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/candyleer/subscriptions") (organizations_url . "https://api.github.com/users/candyleer/orgs") (repos_url . "https://api.github.com/users/candyleer/repos") (events_url . "https://api.github.com/users/candyleer/events{/privacy}") (received_events_url . "https://api.github.com/users/candyleer/received_events") (type . "User") (site_admin)))))) ((login . "candyleer") (id . 11530760) (avatar_url . "https://avatars1.githubusercontent.com/u/11530760?v=4") (gravatar_id . "") (url . "https://api.github.com/users/candyleer") (html_url . "https://github.com/candyleer") (followers_url . "https://api.github.com/users/candyleer/followers") (following_url . "https://api.github.com/users/candyleer/following{/other_user}") (gists_url . "https://api.github.com/users/candyleer/gists{/gist_id}") (starred_url . "https://api.github.com/users/candyleer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/candyleer/subscriptions") (organizations_url . "https://api.github.com/users/candyleer/orgs") (repos_url . "https://api.github.com/users/candyleer/repos") (events_url . "https://api.github.com/users/candyleer/events{/privacy}") (received_events_url . "https://api.github.com/users/candyleer/received_events") (type . "User") (site_admin) (name . "candylee") (company) (blog . "") (location) (email) (hireable) (bio . "Java and nodejs developer") (public_repos . 17) (public_gists . 0) (followers . 8) (following . 13) (created_at . "2015-03-18T01:50:48Z") (updated_at . "2017-12-17T13:02:28Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ccl0326") (id . 904084) (avatar_url . "https://avatars2.githubusercontent.com/u/904084?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ccl0326") (html_url . "https://github.com/ccl0326") (followers_url . "https://api.github.com/users/ccl0326/followers") (following_url . "https://api.github.com/users/ccl0326/following{/other_user}") (gists_url . "https://api.github.com/users/ccl0326/gists{/gist_id}") (starred_url . "https://api.github.com/users/ccl0326/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ccl0326/subscriptions") (organizations_url . "https://api.github.com/users/ccl0326/orgs") (repos_url . "https://api.github.com/users/ccl0326/repos") (events_url . "https://api.github.com/users/ccl0326/events{/privacy}") (received_events_url . "https://api.github.com/users/ccl0326/received_events") (type . "User") (site_admin)))))) ((login . "ccl0326") (id . 904084) (avatar_url . "https://avatars2.githubusercontent.com/u/904084?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ccl0326") (html_url . "https://github.com/ccl0326") (followers_url . "https://api.github.com/users/ccl0326/followers") (following_url . "https://api.github.com/users/ccl0326/following{/other_user}") (gists_url . "https://api.github.com/users/ccl0326/gists{/gist_id}") (starred_url . "https://api.github.com/users/ccl0326/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ccl0326/subscriptions") (organizations_url . "https://api.github.com/users/ccl0326/orgs") (repos_url . "https://api.github.com/users/ccl0326/repos") (events_url . "https://api.github.com/users/ccl0326/events{/privacy}") (received_events_url . "https://api.github.com/users/ccl0326/received_events") (type . "User") (site_admin) (name . "Chen Chenglong") (company) (blog . "") (location . "Beijing") (email . "ccl0326@163.com") (hireable) (bio) (public_repos . 96) (public_gists . 6) (followers . 30) (following . 551) (created_at . "2011-07-09T02:33:20Z") (updated_at . "2018-02-05T05:45:58Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "adriancole") (id . 64215) (avatar_url . "https://avatars2.githubusercontent.com/u/64215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adriancole") (html_url . "https://github.com/adriancole") (followers_url . "https://api.github.com/users/adriancole/followers") (following_url . "https://api.github.com/users/adriancole/following{/other_user}") (gists_url . "https://api.github.com/users/adriancole/gists{/gist_id}") (starred_url . "https://api.github.com/users/adriancole/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adriancole/subscriptions") (organizations_url . "https://api.github.com/users/adriancole/orgs") (repos_url . "https://api.github.com/users/adriancole/repos") (events_url . "https://api.github.com/users/adriancole/events{/privacy}") (received_events_url . "https://api.github.com/users/adriancole/received_events") (type . "User") (site_admin)))))) ((login . "adriancole") (id . 64215) (avatar_url . "https://avatars2.githubusercontent.com/u/64215?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adriancole") (html_url . "https://github.com/adriancole") (followers_url . "https://api.github.com/users/adriancole/followers") (following_url . "https://api.github.com/users/adriancole/following{/other_user}") (gists_url . "https://api.github.com/users/adriancole/gists{/gist_id}") (starred_url . "https://api.github.com/users/adriancole/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adriancole/subscriptions") (organizations_url . "https://api.github.com/users/adriancole/orgs") (repos_url . "https://api.github.com/users/adriancole/repos") (events_url . "https://api.github.com/users/adriancole/events{/privacy}") (received_events_url . "https://api.github.com/users/adriancole/received_events") (type . "User") (site_admin) (name . "Adrian Cole") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 91) (public_gists . 31) (followers . 367) (following . 5) (created_at . "2009-03-17T10:15:26Z") (updated_at . "2018-01-30T16:55:05Z")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:opentracing-0.31.0"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "ewe-haystack-probe"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-agent"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 108372632) (name . "haystack-agent") (full_name . "ExpediaDotCom/haystack-agent") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-agent") (description . "agent that dispatches spans to various sinks depending upon the configuration") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/deployments") (created_at . "2017-10-26T06:48:11Z") (updated_at . "2017-10-29T12:10:31Z") (pushed_at . "2017-12-04T03:40:10Z") (git_url . "git://github.com/ExpediaDotCom/haystack-agent.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-agent.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-agent.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-agent") (homepage) (size . 20357) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 7)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 108372632) (name . "haystack-agent") (full_name . "ExpediaDotCom/haystack-agent") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-agent") (description . "agent that dispatches spans to various sinks depending upon the configuration") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-agent/deployments") (created_at . "2017-10-26T06:48:11Z") (updated_at . "2017-10-29T12:10:31Z") (pushed_at . "2017-12-04T03:40:10Z") (git_url . "git://github.com/ExpediaDotCom/haystack-agent.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-agent.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-agent.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-agent") (homepage) (size . 20357) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 1) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 1) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 1) (subscribers_count . 7))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:publish-to-nexus"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:metrics"))) nil (nil :issues (magithub-request (ghubp-get-repos-owner-repo-issues-number (quote ((owner (login . "jaegertracing")) (name . "jaeger-client-java"))) (quote ((number . 333)))))) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (id . 293895896) (number . 333) (title . "Add micrometer StatsReporter implementation") (user (login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin)) (labels) (state . "closed") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-02-02T13:55:24Z") (updated_at . "2018-02-09T08:49:13Z") (closed_at . "2018-02-09T08:48:52Z") (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/333") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.patch")) (body . "implementation `StatsReporter` interface with [Micrometer](https://micrometer.io/), as mentioned in
https://github.com/jaegertracing/jaeger/issues/572") (closed_by (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin))) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues-number-comments (quote ((id . 56551000) (name . "jaeger-client-java") (full_name . "jaegertracing/jaeger-client-java") (owner (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/jaegertracing/jaeger-client-java") (description . "Jaeger Bindings for Java OpenTracing API") (fork) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (forks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/forks") (keys_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/teams") (hooks_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/hooks") (issue_events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/events") (assignees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/tags") (blobs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/languages") (stargazers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/stargazers") (contributors_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contributors") (subscribers_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscribers") (subscription_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/subscription") (commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/merges") (archive_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/downloads") (issues_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/deployments") (created_at . "2016-04-19T00:10:02Z") (updated_at . "2018-02-05T20:15:26Z") (pushed_at . "2018-02-03T08:13:51Z") (git_url . "git://github.com/jaegertracing/jaeger-client-java.git") (ssh_url . "git@github.com:jaegertracing/jaeger-client-java.git") (clone_url . "https://github.com/jaegertracing/jaeger-client-java.git") (svn_url . "https://github.com/jaegertracing/jaeger-client-java") (homepage . "http://jaegertracing.io/") (size . 1342) (stargazers_count . 119) (watchers_count . 119) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 56) (mirror_url) (archived) (open_issues_count . 47) (license) (forks . 56) (open_issues . 47) (watchers . 119) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "jaegertracing") (id . 28545596) (avatar_url . "https://avatars1.githubusercontent.com/u/28545596?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jaegertracing") (html_url . "https://github.com/jaegertracing") (followers_url . "https://api.github.com/users/jaegertracing/followers") (following_url . "https://api.github.com/users/jaegertracing/following{/other_user}") (gists_url . "https://api.github.com/users/jaegertracing/gists{/gist_id}") (starred_url . "https://api.github.com/users/jaegertracing/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jaegertracing/subscriptions") (organizations_url . "https://api.github.com/users/jaegertracing/orgs") (repos_url . "https://api.github.com/users/jaegertracing/repos") (events_url . "https://api.github.com/users/jaegertracing/events{/privacy}") (received_events_url . "https://api.github.com/users/jaegertracing/received_events") (type . "Organization") (site_admin)) (network_count . 56) (subscribers_count . 510))) (quote ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (repository_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java") (labels_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/labels{/name}") (comments_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/comments") (events_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333/events") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (id . 293895896) (number . 333) (title . "Add micrometer StatsReporter implementation") (user (login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin)) (labels ((id . 712439419) (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/labels/in%20progress") (name . "in progress") (color . "ededed") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-02-02T13:55:24Z") (updated_at . "2018-02-03T08:13:53Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/pulls/333") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333") (diff_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.diff") (patch_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333.patch")) (body . "implementation `StatsReporter` interface with [Micrometer](https://micrometer.io/), as mentioned in
https://github.com/jaegertracing/jaeger/issues/572"))))))) (((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/362594330") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-362594330") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 362594330) (user (login . "codecov[bot]") (id . 22429695) (avatar_url . "https://avatars2.githubusercontent.com/in/254?v=4") (gravatar_id . "") (url . "https://api.github.com/users/codecov%5Bbot%5D") (html_url . "https://github.com/apps/codecov") (followers_url . "https://api.github.com/users/codecov%5Bbot%5D/followers") (following_url . "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}") (gists_url . "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}") (starred_url . "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/codecov%5Bbot%5D/subscriptions") (organizations_url . "https://api.github.com/users/codecov%5Bbot%5D/orgs") (repos_url . "https://api.github.com/users/codecov%5Bbot%5D/repos") (events_url . "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}") (received_events_url . "https://api.github.com/users/codecov%5Bbot%5D/received_events") (type . "Bot") (site_admin)) (created_at . "2018-02-02T14:01:58Z") (updated_at . "2018-02-03T08:13:53Z") (author_association . "NONE") (body . "# [Codecov](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=h1) Report
> Merging [#333](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=desc) into [master](https://codecov.io/gh/jaegertracing/jaeger-client-java/commit/dde245dd50bfdfcfb40a39973bd195c288f29360?src=pr&el=desc) will **decrease** coverage by `0.4%`.
> The diff coverage is `0%`.

[![Impacted file tree graph](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333/graphs/tree.svg?height=150&token=DytDRhoRJC&width=650&src=pr)](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=tree)

```diff
@@             Coverage Diff              @@
##             master     #333      +/-   ##
============================================
- Coverage     83.96%   83.56%   -0.41%
- Complexity      569      570       +1
============================================
  Files            91       92       +1
  Lines          2227     2239      +12
  Branches        259      260       +1
============================================
+ Hits           1870     1871       +1
- Misses          256      268      +12
+ Partials        101      100       -1
```


| [Impacted Files](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=tree) | Coverage Δ | Complexity Δ | |
|---|---|---|---|
| [...m/uber/jaeger/metrics/MicrometerStatsReporter.java](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333/diff?src=pr&el=tree#diff-amFlZ2VyLWNvcmUvc3JjL21haW4vamF2YS9jb20vdWJlci9qYWVnZXIvbWV0cmljcy9NaWNyb21ldGVyU3RhdHNSZXBvcnRlci5qYXZh) | `0% <0%> (ø)` | `0 <0> (?)` | |
| [.../uber/jaeger/samplers/RemoteControlledSampler.java](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333/diff?src=pr&el=tree#diff-amFlZ2VyLWNvcmUvc3JjL21haW4vamF2YS9jb20vdWJlci9qYWVnZXIvc2FtcGxlcnMvUmVtb3RlQ29udHJvbGxlZFNhbXBsZXIuamF2YQ==) | `94.36% <0%> (+1.4%)` | `20% <0%> (+1%)` | :arrow_up: |

------

[Continue to review full report at Codecov](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=continue).
> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)
> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`
> Powered by [Codecov](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=footer). Last update [dde245d...3dca4f8](https://codecov.io/gh/jaegertracing/jaeger-client-java/pull/333?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/363475882") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-363475882") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 363475882) (user (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (created_at . "2018-02-06T16:18:47Z") (updated_at . "2018-02-06T16:18:47Z") (author_association . "MEMBER") (body . "I tried restarting Travis a few times, but it always times out:

> No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.

I have also tried to run a [sample application](https://github.com/jpkrohling/jaeger-client-java-tester) with this, but I got the following exception. @pavolloffay also took a look and got the same problem:

> java.lang.IllegalArgumentException: Prometheus requires that all meters with the same name have the same set of tag keys. There is already an existing meter containing tag keys [group, sampled]. The meter you are attempting to register has keys [group, state].

Relevant piece of the stack trace:

```
	at io.micrometer.core.instrument.Metrics.counter(Metrics.java:65)
	at com.uber.jaeger.metrics.MicrometerStatsReporter.incCounter(MicrometerStatsReporter.java:42)
	at com.uber.jaeger.metrics.StatsFactoryImpl$1.inc(StatsFactoryImpl.java:31)
	at com.uber.jaeger.Tracer.reportSpan(Tracer.java:142)
	at com.uber.jaeger.Span.finishWithDuration(Span.java:180)
	at com.uber.jaeger.Span.finish(Span.java:157)
```

I do get *some* output, though, which confirms the integration has all the pieces in place:

```
$ curl  http://localhost:8081
# HELP jaeger_spans_total
# TYPE jaeger_spans_total counter
jaeger_spans_total{group=\"sampling\",sampled=\"y\",} 2.0
# HELP jaeger_traces_total
# TYPE jaeger_traces_total counter
jaeger_traces_total{sampled=\"y\",state=\"started\",} 2.0
```

Besides the points above, this feature could make use of some documentation. If I can get the sample application to work, I can take care of the documentation, though.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/363826705") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-363826705") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 363826705) (user (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (created_at . "2018-02-07T16:31:13Z") (updated_at . "2018-02-07T16:31:13Z") (author_association . "MEMBER") (body . "I created a branch on my fork with a new commit that would fix the issue I mentioned above:

https://github.com/jpkrohling/jaeger-client-java/tree/333-NormalizedTags

I've taken a very conservative approach and normalized all tags across all metrics, while the absolute necessary would be across metrics with the same name.

@NeoCN , would you prefer to pick my commit and update this PR, or would you prefer me to create a new PR similar to the branch I linked above?

cc @pavolloffay , @objectiser (no need to review my branch yet, although I would appreciate if you'd have any concern with the approach I took).")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/363844426") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-363844426") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 363844426) (user (login . "objectiser") (id . 164562) (avatar_url . "https://avatars3.githubusercontent.com/u/164562?v=4") (gravatar_id . "") (url . "https://api.github.com/users/objectiser") (html_url . "https://github.com/objectiser") (followers_url . "https://api.github.com/users/objectiser/followers") (following_url . "https://api.github.com/users/objectiser/following{/other_user}") (gists_url . "https://api.github.com/users/objectiser/gists{/gist_id}") (starred_url . "https://api.github.com/users/objectiser/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/objectiser/subscriptions") (organizations_url . "https://api.github.com/users/objectiser/orgs") (repos_url . "https://api.github.com/users/objectiser/repos") (events_url . "https://api.github.com/users/objectiser/events{/privacy}") (received_events_url . "https://api.github.com/users/objectiser/received_events") (type . "User") (site_admin)) (created_at . "2018-02-07T17:24:29Z") (updated_at . "2018-02-07T17:24:29Z") (author_association . "CONTRIBUTOR") (body . "@jpkrohling Looks fine to me. Although would it be better to get the metrics unified first in #298? That should then identify where a consistent set of tags are required per metric name.")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/363866582") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-363866582") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 363866582) (user (login . "yurishkuro") (id . 3523016) (avatar_url . "https://avatars2.githubusercontent.com/u/3523016?v=4") (gravatar_id . "") (url . "https://api.github.com/users/yurishkuro") (html_url . "https://github.com/yurishkuro") (followers_url . "https://api.github.com/users/yurishkuro/followers") (following_url . "https://api.github.com/users/yurishkuro/following{/other_user}") (gists_url . "https://api.github.com/users/yurishkuro/gists{/gist_id}") (starred_url . "https://api.github.com/users/yurishkuro/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/yurishkuro/subscriptions") (organizations_url . "https://api.github.com/users/yurishkuro/orgs") (repos_url . "https://api.github.com/users/yurishkuro/repos") (events_url . "https://api.github.com/users/yurishkuro/events{/privacy}") (received_events_url . "https://api.github.com/users/yurishkuro/received_events") (type . "User") (site_admin)) (created_at . "2018-02-07T18:36:38Z") (updated_at . "2018-02-07T18:36:38Z") (author_association . "OWNER") (body . "I would like this to be a separate module, rather that increasing the core module's dependency footprint")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/364107562") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-364107562") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 364107562) (user (login . "jpkrohling") (id . 13387) (avatar_url . "https://avatars2.githubusercontent.com/u/13387?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jpkrohling") (html_url . "https://github.com/jpkrohling") (followers_url . "https://api.github.com/users/jpkrohling/followers") (following_url . "https://api.github.com/users/jpkrohling/following{/other_user}") (gists_url . "https://api.github.com/users/jpkrohling/gists{/gist_id}") (starred_url . "https://api.github.com/users/jpkrohling/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jpkrohling/subscriptions") (organizations_url . "https://api.github.com/users/jpkrohling/orgs") (repos_url . "https://api.github.com/users/jpkrohling/repos") (events_url . "https://api.github.com/users/jpkrohling/events{/privacy}") (received_events_url . "https://api.github.com/users/jpkrohling/received_events") (type . "User") (site_admin)) (created_at . "2018-02-08T13:13:20Z") (updated_at . "2018-02-08T13:13:20Z") (author_association . "MEMBER") (body . "> I would like this to be a separate module, rather that increasing the core module's dependency footprint

Agree. I just added a new commit on top of my branch with that.

@NeoCN , if you don't have any objections, I'll close this PR and open a new one based on my branch. It will still include your commits, don't worry :)
")) ((url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/comments/364337442") (html_url . "https://github.com/jaegertracing/jaeger-client-java/pull/333#issuecomment-364337442") (issue_url . "https://api.github.com/repos/jaegertracing/jaeger-client-java/issues/333") (id . 364337442) (user (login . "NeoCN") (id . 1180502) (avatar_url . "https://avatars2.githubusercontent.com/u/1180502?v=4") (gravatar_id . "") (url . "https://api.github.com/users/NeoCN") (html_url . "https://github.com/NeoCN") (followers_url . "https://api.github.com/users/NeoCN/followers") (following_url . "https://api.github.com/users/NeoCN/following{/other_user}") (gists_url . "https://api.github.com/users/NeoCN/gists{/gist_id}") (starred_url . "https://api.github.com/users/NeoCN/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/NeoCN/subscriptions") (organizations_url . "https://api.github.com/users/NeoCN/orgs") (repos_url . "https://api.github.com/users/NeoCN/repos") (events_url . "https://api.github.com/users/NeoCN/events{/privacy}") (received_events_url . "https://api.github.com/users/NeoCN/received_events") (type . "User") (site_admin)) (created_at . "2018-02-09T05:15:26Z") (updated_at . "2018-02-09T05:15:26Z") (author_association . "NONE") (body . "@jpkrohling Agree with you, just go ahead! "))) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 103698172) (name . "haystack-client-java") (full_name . "ExpediaDotCom/haystack-client-java") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-client-java") (description . "Haystack bindings for OpenTracing API") (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-client-java/deployments") (created_at . "2017-09-15T20:24:35Z") (updated_at . "2017-10-13T18:56:24Z") (pushed_at . "2018-01-03T21:48:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-client-java.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-client-java.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-client-java.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-client-java") (homepage) (size . 144) (stargazers_count . 1) (watchers_count . 1) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 0) (watchers . 1) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 7))) :head "personal:codecov"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "micrometer-metrics")) (name . "micrometer"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 87859908) (name . "micrometer") (full_name . "micrometer-metrics/micrometer") (owner (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/micrometer-metrics/micrometer") (description . "An application metrics facade for the most popular monitoring tools.") (fork) (url . "https://api.github.com/repos/micrometer-metrics/micrometer") (forks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/forks") (keys_url . "https://api.github.com/repos/micrometer-metrics/micrometer/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/micrometer-metrics/micrometer/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/micrometer-metrics/micrometer/teams") (hooks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/hooks") (issue_events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/events{/number}") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/events") (assignees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/assignees{/user}") (branches_url . "https://api.github.com/repos/micrometer-metrics/micrometer/branches{/branch}") (tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/tags") (blobs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/refs{/sha}") (trees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/micrometer-metrics/micrometer/statuses/{sha}") (languages_url . "https://api.github.com/repos/micrometer-metrics/micrometer/languages") (stargazers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/stargazers") (contributors_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contributors") (subscribers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscribers") (subscription_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscription") (commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/commits{/sha}") (git_commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/commits{/sha}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/comments{/number}") (issue_comment_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/comments{/number}") (contents_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contents/{+path}") (compare_url . "https://api.github.com/repos/micrometer-metrics/micrometer/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/micrometer-metrics/micrometer/merges") (archive_url . "https://api.github.com/repos/micrometer-metrics/micrometer/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/micrometer-metrics/micrometer/downloads") (issues_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues{/number}") (pulls_url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls{/number}") (milestones_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones{/number}") (notifications_url . "https://api.github.com/repos/micrometer-metrics/micrometer/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels{/name}") (releases_url . "https://api.github.com/repos/micrometer-metrics/micrometer/releases{/id}") (deployments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/deployments") (created_at . "2017-04-10T21:36:51Z") (updated_at . "2018-02-28T03:37:35Z") (pushed_at . "2018-02-27T14:06:56Z") (git_url . "git://github.com/micrometer-metrics/micrometer.git") (ssh_url . "git@github.com:micrometer-metrics/micrometer.git") (clone_url . "https://github.com/micrometer-metrics/micrometer.git") (svn_url . "https://github.com/micrometer-metrics/micrometer") (homepage . "http://micrometer.io") (size . 13623) (stargazers_count . 548) (watchers_count . 548) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 96) (mirror_url) (archived) (open_issues_count . 36) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 96) (open_issues . 36) (watchers . 548) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (network_count . 96) (subscribers_count . 83)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 87859908) (name . "micrometer") (full_name . "micrometer-metrics/micrometer") (owner (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/micrometer-metrics/micrometer") (description . "An application metrics facade for the most popular monitoring tools.") (fork) (url . "https://api.github.com/repos/micrometer-metrics/micrometer") (forks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/forks") (keys_url . "https://api.github.com/repos/micrometer-metrics/micrometer/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/micrometer-metrics/micrometer/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/micrometer-metrics/micrometer/teams") (hooks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/hooks") (issue_events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/events{/number}") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/events") (assignees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/assignees{/user}") (branches_url . "https://api.github.com/repos/micrometer-metrics/micrometer/branches{/branch}") (tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/tags") (blobs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/refs{/sha}") (trees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/micrometer-metrics/micrometer/statuses/{sha}") (languages_url . "https://api.github.com/repos/micrometer-metrics/micrometer/languages") (stargazers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/stargazers") (contributors_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contributors") (subscribers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscribers") (subscription_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscription") (commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/commits{/sha}") (git_commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/commits{/sha}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/comments{/number}") (issue_comment_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/comments{/number}") (contents_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contents/{+path}") (compare_url . "https://api.github.com/repos/micrometer-metrics/micrometer/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/micrometer-metrics/micrometer/merges") (archive_url . "https://api.github.com/repos/micrometer-metrics/micrometer/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/micrometer-metrics/micrometer/downloads") (issues_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues{/number}") (pulls_url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls{/number}") (milestones_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones{/number}") (notifications_url . "https://api.github.com/repos/micrometer-metrics/micrometer/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels{/name}") (releases_url . "https://api.github.com/repos/micrometer-metrics/micrometer/releases{/id}") (deployments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/deployments") (created_at . "2017-04-10T21:36:51Z") (updated_at . "2018-02-28T03:37:35Z") (pushed_at . "2018-02-27T14:06:56Z") (git_url . "git://github.com/micrometer-metrics/micrometer.git") (ssh_url . "git@github.com:micrometer-metrics/micrometer.git") (clone_url . "https://github.com/micrometer-metrics/micrometer.git") (svn_url . "https://github.com/micrometer-metrics/micrometer") (homepage . "http://micrometer.io") (size . 13623) (stargazers_count . 548) (watchers_count . 548) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 96) (mirror_url) (archived) (open_issues_count . 36) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 96) (open_issues . 36) (watchers . 548) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (network_count . 96) (subscribers_count . 83))))))) (((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/474") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/474/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/474/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/474/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/474") (id . 300428495) (number . 474) (title . "Support StackDriver") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-26T22:56:34Z") (updated_at . "2018-02-26T22:56:34Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/471") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/471/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/471/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/471/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/471") (id . 300393941) (number . 471) (title . "Kamino support") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-26T21:00:09Z") (updated_at . "2018-02-27T02:12:54Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "See https://github.com/pjfanning/micrometer-kamon. Could be an easy way to get data to Kamino?")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/469") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/469/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/469/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/469/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/469") (id . 300239638) (number . 469) (title . "Dependency BOM? ") (user (login . "flozano") (id . 1159291) (avatar_url . "https://avatars0.githubusercontent.com/u/1159291?v=4") (gravatar_id . "") (url . "https://api.github.com/users/flozano") (html_url . "https://github.com/flozano") (followers_url . "https://api.github.com/users/flozano/followers") (following_url . "https://api.github.com/users/flozano/following{/other_user}") (gists_url . "https://api.github.com/users/flozano/gists{/gist_id}") (starred_url . "https://api.github.com/users/flozano/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/flozano/subscriptions") (organizations_url . "https://api.github.com/users/flozano/orgs") (repos_url . "https://api.github.com/users/flozano/repos") (events_url . "https://api.github.com/users/flozano/events{/privacy}") (received_events_url . "https://api.github.com/users/flozano/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-02-26T13:32:24Z") (updated_at . "2018-02-26T13:32:24Z") (closed_at) (author_association . "NONE") (body . "It would be really useful to have a dependency BOM that avoids dependency-managing all dependencies one by one.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/458") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/458/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/458/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/458/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/458") (id . 299134518) (number . 458) (title . "URI tag of http.server.requests meter contains templated URI") (user (login . "edeandrea") (id . 363447) (avatar_url . "https://avatars0.githubusercontent.com/u/363447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/edeandrea") (html_url . "https://github.com/edeandrea") (followers_url . "https://api.github.com/users/edeandrea/followers") (following_url . "https://api.github.com/users/edeandrea/following{/other_user}") (gists_url . "https://api.github.com/users/edeandrea/gists{/gist_id}") (starred_url . "https://api.github.com/users/edeandrea/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/edeandrea/subscriptions") (organizations_url . "https://api.github.com/users/edeandrea/orgs") (repos_url . "https://api.github.com/users/edeandrea/repos") (events_url . "https://api.github.com/users/edeandrea/events{/privacy}") (received_events_url . "https://api.github.com/users/edeandrea/received_events") (type . "User") (site_admin)) (labels ((id . 580980798) (url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels/question") (name . "question") (color . "cc317c") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-02-21T21:26:21Z") (updated_at . "2018-02-21T21:41:55Z") (closed_at) (author_association . "NONE") (body . "Seems that when looking at the `http.server.requests` metric of a Spring Boot/Spring MVC application the URI tag has the value of a templated URI and not the actual expanded URI.

For example, my controller is annotated with `@RequestMapping(\"/things\")` and my action method has `@GetMapping(path = \"/{id}\")`, when looking at the output of the meter I see

```
Meter: name = http.server.requests, description = null, type = TIMER, tags = [ImmutableTag{key='exception', value='None'}, ImmutableTag{key='method', value='GET'}, ImmutableTag{key='status', value='200'}, ImmutableTag{key='uri', value='/things/{id}'}], measurements = [Measurement{statistic='COUNT', value=3.0}, Measurement{statistic='TOTAL_TIME', value=939.321339}, Measurement{statistic='MAX', value=923.181765}]
```

I was expecting to see

```
Meter: name = http.server.requests, description = null, type = TIMER, tags = [ImmutableTag{key='exception', value='None'}, ImmutableTag{key='method', value='GET'}, ImmutableTag{key='status', value='200'}, ImmutableTag{key='uri', value='/things/1'}], measurements = [Measurement{statistic='COUNT', value=3.0}, Measurement{statistic='TOTAL_TIME', value=939.321339}, Measurement{statistic='MAX', value=923.181765}]
```

Is this by design? I see it similarly on the `RestTemplate` customization with the `http.client.requests` metric where if I make an outbound REST call to `/somewhereElse/{id}` the URI is also template-ized there.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/457") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/457/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/457/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/457/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/457") (id . 299074540) (number . 457) (title . "min statistic for distribution summaries and timers") (user (login . "randysecrist") (id . 141339) (avatar_url . "https://avatars1.githubusercontent.com/u/141339?v=4") (gravatar_id . "") (url . "https://api.github.com/users/randysecrist") (html_url . "https://github.com/randysecrist") (followers_url . "https://api.github.com/users/randysecrist/followers") (following_url . "https://api.github.com/users/randysecrist/following{/other_user}") (gists_url . "https://api.github.com/users/randysecrist/gists{/gist_id}") (starred_url . "https://api.github.com/users/randysecrist/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/randysecrist/subscriptions") (organizations_url . "https://api.github.com/users/randysecrist/orgs") (repos_url . "https://api.github.com/users/randysecrist/repos") (events_url . "https://api.github.com/users/randysecrist/events{/privacy}") (received_events_url . "https://api.github.com/users/randysecrist/received_events") (type . "User") (site_admin)) (labels ((id . 580980798) (url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels/question") (name . "question") (color . "cc317c") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 8) (created_at . "2018-02-21T18:15:36Z") (updated_at . "2018-02-26T22:56:18Z") (closed_at) (author_association . "NONE") (body . "Quick question ...

Why doesn't https://github.com/micrometer-metrics/micrometer/blob/master/micrometer-core/src/main/java/io/micrometer/core/instrument/distribution/HistogramSnapshot.java have a min function?")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/456") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/456/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/456/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/456/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/456") (id . 299053324) (number . 456) (title . "Make global static composite on `Metrics` settable per thread") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-21T17:09:19Z") (updated_at . "2018-02-21T17:09:19Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Adding `ThreadLocal` indirection to the global static composite would make overriding it for tests possible.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/451") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/451/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/451/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/451/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/451") (id . 298848595) (number . 451) (title . "Add Dropwizard like annotations") (user (login . "paul-ovchinnikov") (id . 5802650) (avatar_url . "https://avatars1.githubusercontent.com/u/5802650?v=4") (gravatar_id . "") (url . "https://api.github.com/users/paul-ovchinnikov") (html_url . "https://github.com/paul-ovchinnikov") (followers_url . "https://api.github.com/users/paul-ovchinnikov/followers") (following_url . "https://api.github.com/users/paul-ovchinnikov/following{/other_user}") (gists_url . "https://api.github.com/users/paul-ovchinnikov/gists{/gist_id}") (starred_url . "https://api.github.com/users/paul-ovchinnikov/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/paul-ovchinnikov/subscriptions") (organizations_url . "https://api.github.com/users/paul-ovchinnikov/orgs") (repos_url . "https://api.github.com/users/paul-ovchinnikov/repos") (events_url . "https://api.github.com/users/paul-ovchinnikov/events{/privacy}") (received_events_url . "https://api.github.com/users/paul-ovchinnikov/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2018-02-21T05:41:09Z") (updated_at . "2018-02-26T22:13:56Z") (closed_at) (author_association . "NONE") (body . "Add annotations like in [Dropwizard](https://github.com/dropwizard/metrics/tree/4.1-development/metrics-annotation/src/main/java/com/codahale/metrics/annotation)
```
@Metered
@ExceptionMetered
@Counted
@Gauge
@CachedGauge
@Metric
@ResponseMetered
```
and Spring support for that
")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/441") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/441/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/441/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/441/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/441") (id . 298334960) (number . 441) (title . "Support Azure Application Insights") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 2) (created_at . "2018-02-19T16:26:45Z") (updated_at . "2018-02-27T23:19:54Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "See https://docs.microsoft.com/en-us/azure/application-insights/app-insights-api-custom-events-metrics#trackmetric")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/436") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/436/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/436/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/436/events") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/436") (id . 298087912) (number . 436) (title . "Make tests pass on JDK 9") (user (login . "shakuzen") (id . 8924140) (avatar_url . "https://avatars2.githubusercontent.com/u/8924140?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shakuzen") (html_url . "https://github.com/shakuzen") (followers_url . "https://api.github.com/users/shakuzen/followers") (following_url . "https://api.github.com/users/shakuzen/following{/other_user}") (gists_url . "https://api.github.com/users/shakuzen/gists{/gist_id}") (starred_url . "https://api.github.com/users/shakuzen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shakuzen/subscriptions") (organizations_url . "https://api.github.com/users/shakuzen/orgs") (repos_url . "https://api.github.com/users/shakuzen/repos") (events_url . "https://api.github.com/users/shakuzen/events{/privacy}") (received_events_url . "https://api.github.com/users/shakuzen/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-18T14:16:28Z") (updated_at . "2018-02-23T16:49:07Z") (closed_at) (author_association . "CONTRIBUTOR") (pull_request (url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls/436") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/436") (diff_url . "https://github.com/micrometer-metrics/micrometer/pull/436.diff") (patch_url . "https://github.com/micrometer-metrics/micrometer/pull/436.patch")) (body . "Due to some Java EE modules not being resolved in the JDK anymore since Java 9 (see [0]), these dependencies need to be made explicit where needed at runtime.

Since micrometer-spring-legacy is not trying to be Java 9 compatible at runtime (since Spring Boot 1.5 does not support Java 9), these are only needed for the purpose of running the tests on Java 9 and later.

If the micrometer-jersey2 module is intended to be compatible with Java 9+, the currently test-scoped dependency may need to be included at runtime. This may be an issue with Jersey's Java 9 runtime compatible itself, also.

[0] https://docs.oracle.com/javase/9/migrate/#GUID-F640FA9D-FB66-4D85-AD2B-D931174C09A3

Helps work towards #422. Tested with Oracle JDK9 locally on my machine.

```
$ java -version
java version \"9.0.4\"
Java(TM) SE Runtime Environment (build 9.0.4+11)
Java HotSpot(TM) 64-Bit Server VM (build 9.0.4+11, mixed mode)
```")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/435") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/435/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/435/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/435/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/435") (id . 298086277) (number . 435) (title . "Get all metrics during a single request through the system?") (user (login . "edeandrea") (id . 363447) (avatar_url . "https://avatars0.githubusercontent.com/u/363447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/edeandrea") (html_url . "https://github.com/edeandrea") (followers_url . "https://api.github.com/users/edeandrea/followers") (following_url . "https://api.github.com/users/edeandrea/following{/other_user}") (gists_url . "https://api.github.com/users/edeandrea/gists{/gist_id}") (starred_url . "https://api.github.com/users/edeandrea/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/edeandrea/subscriptions") (organizations_url . "https://api.github.com/users/edeandrea/orgs") (repos_url . "https://api.github.com/users/edeandrea/repos") (events_url . "https://api.github.com/users/edeandrea/events{/privacy}") (received_events_url . "https://api.github.com/users/edeandrea/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-02-18T13:51:42Z") (updated_at . "2018-02-21T15:58:18Z") (closed_at) (author_association . "NONE") (body . "Is there a way that I can retrieve all the metrics that were recording during a single http request?

For example with a Spring MVC application - the request comes in, goes through my system (DB calls, other REST/SOAP calls, etc), then leaves. Before it leaves I want to look at all the metrics that were recorded and send them back as part of the response payload/response header/etc, so that on a request-by-request basis I can break down the metrics that way.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/431") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/431/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/431/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/431/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/431") (id . 297743771) (number . 431) (title . "Prepend http_server_requests with SOAP urlMappings") (user (login . "robachmann") (id . 8127370) (avatar_url . "https://avatars2.githubusercontent.com/u/8127370?v=4") (gravatar_id . "") (url . "https://api.github.com/users/robachmann") (html_url . "https://github.com/robachmann") (followers_url . "https://api.github.com/users/robachmann/followers") (following_url . "https://api.github.com/users/robachmann/following{/other_user}") (gists_url . "https://api.github.com/users/robachmann/gists{/gist_id}") (starred_url . "https://api.github.com/users/robachmann/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/robachmann/subscriptions") (organizations_url . "https://api.github.com/users/robachmann/orgs") (repos_url . "https://api.github.com/users/robachmann/repos") (events_url . "https://api.github.com/users/robachmann/events{/privacy}") (received_events_url . "https://api.github.com/users/robachmann/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-16T10:44:21Z") (updated_at . "2018-02-19T15:17:36Z") (closed_at) (author_association . "NONE") (body . "Scraping metrics from an application with micrometer RC 9 returns:

```
http_server_requests_seconds_count{exception=\"None\",method=\"GET\",status=\"200\",uri=\"/rest/accounts/{id}\",} 654.0
http_server_requests_seconds_count{exception=\"None\",method=\"POST\",status=\"200\",uri=\"/accounts\",} 946.0
```
The first metric is from a REST endpoint (`@RestController`) whereas the second one is from a SOAP endpoint (`@Endpoint`) where the method is annotated as follows:

```
@PayloadRoot(namespace = TARGET_NAMESPACE, localPart = \"getAccount\")
@ResponsePayload
@Override
@Timed(percentiles = {0.5, 0.95})
public GetAccountResponse getAccount(@RequestPayload GetAccount request) {}
```
Requests are being forwarded to this endpoint as configured in an extension of a `WsConfigurerAdapter`:
```
@Bean
public ServletRegistrationBean messageDispatcherServlet(ApplicationContext applicationContext) {
    MessageDispatcherServlet servlet = new MessageDispatcherServlet();
    servlet.setApplicationContext(applicationContext);
    servlet.setTransformWsdlLocations(true);
    return new ServletRegistrationBean(servlet, \"/soap/*\");
}
```

Does micrometer has any possibility to access the *complete* URI of a request including the defined `urlMapping=\"/soap/*\"`? I would like to have the metrics' uri starting with either /soap or /rest:
```
http_server_requests_seconds_count{exception=\"None\",method=\"GET\",status=\"200\",uri=\"/rest/accounts/{id}\",} 654.0
http_server_requests_seconds_count{exception=\"None\",method=\"POST\",status=\"200\",uri=\"/soap/accounts\",} 946.0
```

That would be very helpful, thank you :-)

PS: The `@Timed(percentiles = {0.5, 0.95})` doesn't seem to have any effect on `@Endpoint`.
//edit:
Instead of `@Timed(percentiles = {0.5, 0.95})`, I set the property that works for all endpoints.
```
management.metrics.summaries.percentiles:
  all: 0.5, 0.95
```")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/429") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/429/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/429/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/429/events") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/429") (id . 297045329) (number . 429) (title . "Add Elastic support") (user (login . "tkp1n") (id . 9985284) (avatar_url . "https://avatars0.githubusercontent.com/u/9985284?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tkp1n") (html_url . "https://github.com/tkp1n") (followers_url . "https://api.github.com/users/tkp1n/followers") (following_url . "https://api.github.com/users/tkp1n/following{/other_user}") (gists_url . "https://api.github.com/users/tkp1n/gists{/gist_id}") (starred_url . "https://api.github.com/users/tkp1n/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tkp1n/subscriptions") (organizations_url . "https://api.github.com/users/tkp1n/orgs") (repos_url . "https://api.github.com/users/tkp1n/repos") (events_url . "https://api.github.com/users/tkp1n/events{/privacy}") (received_events_url . "https://api.github.com/users/tkp1n/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 1) (created_at . "2018-02-14T10:32:20Z") (updated_at . "2018-02-23T16:49:07Z") (closed_at) (author_association . "NONE") (pull_request (url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls/429") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/429") (diff_url . "https://github.com/micrometer-metrics/micrometer/pull/429.diff") (patch_url . "https://github.com/micrometer-metrics/micrometer/pull/429.patch")) (body . "Proposal for issue #154

Basically a re-implementation of the [elasticsearch-metrics-reporter-java](https://github.com/elastic/elasticsearch-metrics-reporter-java) for micrometer.

@jkschneider ")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/422") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/422/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/422/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/422/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/422") (id . 296477481) (number . 422) (title . "Java 9 build") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-12T18:26:15Z") (updated_at . "2018-02-12T18:26:15Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "From #414:

> It might be a good idea to consider introducing something like https://github.com/policeman-tools/forbidden-apis and/or switching the build to run with JDK9 and use the compiler flag release to target 1.8, which is what JUnit 5 does.

> sdkman might have a simple Java 9 option: http://sdkman.io

> I'll try to give it a go with different Runtimes. I was about to propose https://adoptopenjdk.net/ but there is no build of a JDK with openJ9 on OSX yet. Likely due this.
")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/419") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/419/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/419/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/419/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/419") (id . 296411249) (number . 419) (title . "Add an AppOptics implementation") (user (login . "mheffner") (id . 80635) (avatar_url . "https://avatars2.githubusercontent.com/u/80635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mheffner") (html_url . "https://github.com/mheffner") (followers_url . "https://api.github.com/users/mheffner/followers") (following_url . "https://api.github.com/users/mheffner/following{/other_user}") (gists_url . "https://api.github.com/users/mheffner/gists{/gist_id}") (starred_url . "https://api.github.com/users/mheffner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mheffner/subscriptions") (organizations_url . "https://api.github.com/users/mheffner/orgs") (repos_url . "https://api.github.com/users/mheffner/repos") (events_url . "https://api.github.com/users/mheffner/events{/privacy}") (received_events_url . "https://api.github.com/users/mheffner/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 1) (created_at . "2018-02-12T15:17:52Z") (updated_at . "2018-02-12T15:29:46Z") (closed_at) (author_association . "NONE") (body . "Add implementation support for [AppOptics](https://www.appoptics.com/) (formely Librato) as a dimensional registry. API docs can be [found here](https://docs.appoptics.com/api/).")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/416") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/416/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/416/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/416/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/416") (id . 296328502) (number . 416) (title . "Export Spring Boot Health Check Information") (user (login . "tf-martin-maier-moessner") (id . 35150088) (avatar_url . "https://avatars3.githubusercontent.com/u/35150088?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tf-martin-maier-moessner") (html_url . "https://github.com/tf-martin-maier-moessner") (followers_url . "https://api.github.com/users/tf-martin-maier-moessner/followers") (following_url . "https://api.github.com/users/tf-martin-maier-moessner/following{/other_user}") (gists_url . "https://api.github.com/users/tf-martin-maier-moessner/gists{/gist_id}") (starred_url . "https://api.github.com/users/tf-martin-maier-moessner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tf-martin-maier-moessner/subscriptions") (organizations_url . "https://api.github.com/users/tf-martin-maier-moessner/orgs") (repos_url . "https://api.github.com/users/tf-martin-maier-moessner/repos") (events_url . "https://api.github.com/users/tf-martin-maier-moessner/events{/privacy}") (received_events_url . "https://api.github.com/users/tf-martin-maier-moessner/received_events") (type . "User") (site_admin)) (labels ((id . 729884708) (url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels/doc-update") (name . "doc-update") (color . "ab66cc") (default))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 4) (created_at . "2018-02-12T10:36:38Z") (updated_at . "2018-02-14T23:39:33Z") (closed_at) (author_association . "NONE") (body . "I want to export health information provided by Spring Boot's health endpoint (/health) to Prometheus. Is there an easy (standard) way to do this with micrometer?")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/410") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/410/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/410/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/410/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/410") (id . 296041013) (number . 410) (title . "Support Apache Camel") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2018-02-09T23:12:52Z") (updated_at . "2018-02-12T08:09:39Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "See https://github.com/laurikimmel/camel-metrics
See https://brunonetid.github.io/2017/11/27/camel-prometheus-openshift.html

cc / @bjartek ")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/398") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/398/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/398/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/398/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/398") (id . 294702283) (number . 398) (title . "Source jars missing for snapshots") (user (login . "dsyer") (id . 124075) (avatar_url . "https://avatars1.githubusercontent.com/u/124075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dsyer") (html_url . "https://github.com/dsyer") (followers_url . "https://api.github.com/users/dsyer/followers") (following_url . "https://api.github.com/users/dsyer/following{/other_user}") (gists_url . "https://api.github.com/users/dsyer/gists{/gist_id}") (starred_url . "https://api.github.com/users/dsyer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dsyer/subscriptions") (organizations_url . "https://api.github.com/users/dsyer/orgs") (repos_url . "https://api.github.com/users/dsyer/repos") (events_url . "https://api.github.com/users/dsyer/events{/privacy}") (received_events_url . "https://api.github.com/users/dsyer/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 1) (created_at . "2018-02-06T10:14:26Z") (updated_at . "2018-02-14T23:36:42Z") (closed_at) (author_association . "NONE") (body . "```
Index of snapshot/io/micrometer/micrometer-core/1.0.0-SNAPSHOT
Name                                                   Last modified      Size
../
maven-metadata.xml                                      06-Feb-2018 04:03  1.19 KB
micrometer-core-1.0.0-20180206.000204-151-javadoc.jar   06-Feb-2018 00:11  578.03 KB
micrometer-core-1.0.0-20180206.000204-151-sources.jar   06-Feb-2018 00:11  190.50 KB
micrometer-core-1.0.0-20180206.033825-153-javadoc.jar   06-Feb-2018 03:56  578.29 KB
micrometer-core-1.0.0-20180206.033825-153-sources.jar   06-Feb-2018 03:56  190.65 KB
micrometer-core-1.0.0-20180206.033825-153.jar           06-Feb-2018 03:38  278.24 KB
micrometer-core-1.0.0-20180206.033825-153.pom           06-Feb-2018 03:38  5.92 KB
micrometer-core-1.0.0-20180206.035634-154-javadoc.jar   06-Feb-2018 04:03  578.25 KB
micrometer-core-1.0.0-20180206.035634-154-sources.jar   06-Feb-2018 04:03  190.64 KB
micrometer-core-1.0.0-20180206.035634-154.jar           06-Feb-2018 03:56  278.24 KB
micrometer-core-1.0.0-20180206.035634-154.pom           06-Feb-2018 03:56  5.92 KB
micrometer-core-1.0.0-20180206.040300-155.jar           06-Feb-2018 04:03  278.24 KB
micrometer-core-1.0.0-20180206.040300-155.pom           06-Feb-2018 04:03  5.93 KB
```

It looks like build 155 didn't get source jars (but look at the timestamp on the sources for build 154). Something fishy going on there?")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/390") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/390/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/390/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/390/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/390") (id . 293916065) (number . 390) (title . "Instrument Redisson") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2018-02-02T15:00:23Z") (updated_at . "2018-02-13T20:23:30Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Seems like the best option might be to add Micrometer support directly to Redisson, similarly to its Dropwizard integration. Some of the metrics that Redisson is recording to Dropwizard are more fine-grained than the JCache implementation surfaces. See [detail here](https://github.com/redisson/redisson/wiki/14.-Integration%20with%20frameworks#147-jmx-and-dropwizard-metrics).")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/369") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/369/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/369/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/369/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/369") (id . 291748837) (number . 369) (title . "Support InfluxDB line protocol over UDP") (user (login . "wei-hai") (id . 2936715) (avatar_url . "https://avatars1.githubusercontent.com/u/2936715?v=4") (gravatar_id . "") (url . "https://api.github.com/users/wei-hai") (html_url . "https://github.com/wei-hai") (followers_url . "https://api.github.com/users/wei-hai/followers") (following_url . "https://api.github.com/users/wei-hai/following{/other_user}") (gists_url . "https://api.github.com/users/wei-hai/gists{/gist_id}") (starred_url . "https://api.github.com/users/wei-hai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/wei-hai/subscriptions") (organizations_url . "https://api.github.com/users/wei-hai/orgs") (repos_url . "https://api.github.com/users/wei-hai/repos") (events_url . "https://api.github.com/users/wei-hai/events{/privacy}") (received_events_url . "https://api.github.com/users/wei-hai/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 3) (created_at . "2018-01-25T23:13:00Z") (updated_at . "2018-02-19T21:42:01Z") (closed_at) (author_association . "NONE") (body . "it would be convenient to export springboot production metrics inside endpoint `/metrics` to influxdb via line protocol, in the properties file it could support the following variables:
```
influxdb.host=localhost
influxdb.port=8086
influxdb.protocol=tcp or udp
influxdb.database=springboot
influxdb.measurement=counter
influxdb.interval=60s
```

influxdb line protocol:
https://docs.influxdata.com/influxdb/v1.4/write_protocols/line_protocol_tutorial/")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/368") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/368/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/368/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/368/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/368") (id . 291540987) (number . 368) (title . "Support for removing a Meter from the MeterRegistry") (user (login . "adoelger") (id . 4172849) (avatar_url . "https://avatars3.githubusercontent.com/u/4172849?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adoelger") (html_url . "https://github.com/adoelger") (followers_url . "https://api.github.com/users/adoelger/followers") (following_url . "https://api.github.com/users/adoelger/following{/other_user}") (gists_url . "https://api.github.com/users/adoelger/gists{/gist_id}") (starred_url . "https://api.github.com/users/adoelger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adoelger/subscriptions") (organizations_url . "https://api.github.com/users/adoelger/orgs") (repos_url . "https://api.github.com/users/adoelger/repos") (events_url . "https://api.github.com/users/adoelger/events{/privacy}") (received_events_url . "https://api.github.com/users/adoelger/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 2) (created_at . "2018-01-25T11:41:35Z") (updated_at . "2018-02-14T15:26:43Z") (closed_at) (author_association . "NONE") (body . "Support for removing a Meter from the MeterRegistry. Like DropWizard Metrics -> MetricRegistry.remove().")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/343") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/343/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/343/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/343/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/343") (id . 288666179) (number . 343) (title . "Instrument Vert.x applications") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2018-01-15T17:20:34Z") (updated_at . "2018-01-26T13:55:48Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "cc / @jfconavarrete")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/307") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/307/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/307/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/307/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/307") (id . 282913859) (number . 307) (title . "Deadlock issue in TimeWindowLatencyHistogram") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels ((id . 580980793) (url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels/bug") (name . "bug") (color . "ee0701") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 4) (created_at . "2017-12-18T15:17:40Z") (updated_at . "2018-02-20T03:07:02Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "As reported by @imasahiro.

https://gist.github.com/imasahiro/2e7f119d670bb957dde8dbd916cd352d")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/303") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/303/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/303/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/303/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/303") (id . 282484460) (number . 303) (title . "Impedance mismatch between micrometer and CloudWatch") (user (login . "cykl") (id . 1764725) (avatar_url . "https://avatars3.githubusercontent.com/u/1764725?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cykl") (html_url . "https://github.com/cykl") (followers_url . "https://api.github.com/users/cykl/followers") (following_url . "https://api.github.com/users/cykl/following{/other_user}") (gists_url . "https://api.github.com/users/cykl/gists{/gist_id}") (starred_url . "https://api.github.com/users/cykl/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cykl/subscriptions") (organizations_url . "https://api.github.com/users/cykl/orgs") (repos_url . "https://api.github.com/users/cykl/repos") (events_url . "https://api.github.com/users/cykl/events{/privacy}") (received_events_url . "https://api.github.com/users/cykl/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 6) (created_at . "2017-12-15T16:45:24Z") (updated_at . "2018-02-27T16:54:56Z") (closed_at) (author_association . "NONE") (body . "Unlike almost any other TSDB, CloudWatch suffer from a very severe limitation: it is not able to aggregate across dimension.

http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#Dimension

> For metrics produced by certain AWS services, such as Amazon EC2, CloudWatch can aggregate data across dimensions. For example, search for metrics in the AWS/EC2 namespace but do not specify any dimensions, CloudWatch aggregates all data for the specified metric to create the statistic that you requested. **CloudWatch does not aggregate across dimensions for your custom metrics.**

> CloudWatch treats each unique combination of dimensions as a separate metric, even if the metrics have the same metric name. **You can only retrieve statistics using combinations of dimensions that you specifically published.** When you retrieve statistics, specify the same values for the namespace, metric name, and dimension parameters that were used when the metrics were created. You can also specify the start and end times for CloudWatch to use for aggregation.

This limitation leads to a serious impedance mismatch with micrometer:

  - To be able to get both service and instance level statistics you must publish two MetricDatum (the only difference being the drop of the instance dimension)
  - Most micrometer `MeterBinder`s define highly dimensional Meter that you won't be able to aggregate. CloudWatch also charges per active metrics (defined as \"_a name, a namespace, and zero or more dimensions_\"), leading to another trade-off between costs and level of details.

Another issue related to CloudWatch charging per `active metrics`, is that the current registry constantly push all registered meters even if they are not active. Servo used to stop pushing inactive metrics leading to substantial cost saving  (many counters tracking infrequent errors are mostly inactive)

I had like to know your opinion about those issues and how people typically use the CloudWatch registry.

---

I am migrating from Spectator + servo-aws and tried to recreate our current, unpleasant, setup:

 - Registry is configured to add `serviceId` & `instanceId` tags to all meters, meaning that we can get instance level stats but not service level stats.
 - To get service level stats, I duplicate meters and drop the `instanceId` dimension. I wrote [a prototype](https://gist.github.com/cykl/bd6463bb8f15fa486815547368c9c307) of a such approach.  Overriding `getMeters` is likely a not a good idea, but it was the easiest one.
 - As CloudWatch is quite expensive, we decided to not duplicate every meters but only the ones that are while listed (ie. name prefixed by `\"service.\"`). It work \"fines\" for user defined meters but also mean that I can't get service level stats from micrometer defined meters. Switching to a tag based approach might be more flexible.
 - That's it.  I don't see how to overcome CloudWatch limitations. Highly dimensional metrics, like WebMvc, can be seen at instance level with the help of templated dashboards (Grafana). It's better than nothing but not what you want.




")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/302") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/302/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/302/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/302/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/302") (id . 282456357) (number . 302) (title . "@Timed on @JMSListener should register timing metrics") (user (login . "nickstolwijk") (id . 1562274) (avatar_url . "https://avatars1.githubusercontent.com/u/1562274?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nickstolwijk") (html_url . "https://github.com/nickstolwijk") (followers_url . "https://api.github.com/users/nickstolwijk/followers") (following_url . "https://api.github.com/users/nickstolwijk/following{/other_user}") (gists_url . "https://api.github.com/users/nickstolwijk/gists{/gist_id}") (starred_url . "https://api.github.com/users/nickstolwijk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nickstolwijk/subscriptions") (organizations_url . "https://api.github.com/users/nickstolwijk/orgs") (repos_url . "https://api.github.com/users/nickstolwijk/repos") (events_url . "https://api.github.com/users/nickstolwijk/events{/privacy}") (received_events_url . "https://api.github.com/users/nickstolwijk/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2017-12-15T15:09:15Z") (updated_at . "2018-02-14T23:25:56Z") (closed_at) (author_association . "NONE") (body . "Using Spring JMS and Spring Boot 2 I want to be able to put the @Timed annotation on the methods with @JMSListener, so I can track how much messages I have processed and how long they took. (See the functionality for @Scheduled)")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/278") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/278/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/278/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/278/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/278") (id . 280659054) (number . 278) (title . "Support timing individual servlet filters") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 1) (created_at . "2017-12-09T00:50:04Z") (updated_at . "2018-02-14T23:26:04Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "**Purpose:** Monitor the impact that individual servlet filters have on overall latency.

cc / @twicksell
cc / @adriancole

Options we discussed:
1. BPP
2. AOP
3. Server-specific impl _a la_ `AbstractConfigurableWebServerFactory` ")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/274") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/274/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/274/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/274/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/274") (id . 279947120) (number . 274) (title . "Support SumoLogic's custom collector") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2017-12-06T23:39:04Z") (updated_at . "2018-02-14T23:36:09Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Write example docs in Sumo's query language.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/272") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/272/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/272/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/272/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/272") (id . 279887308) (number . 272) (title . "Support dynatrace") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 2) (created_at . "2017-12-06T20:01:36Z") (updated_at . "2018-02-14T23:36:25Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "https://www.dynatrace.com/support/help/dynatrace-api/custom-devices-and-metrics/what-does-the-custom-network-devices-and-metrics-api-provide/")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/243") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/243/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/243/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/243/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/243") (id . 276031112) (number . 243) (title . "Prometheus Push Gateway - error during metrics collection") (user (login . "lupo112") (id . 1206903) (avatar_url . "https://avatars2.githubusercontent.com/u/1206903?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lupo112") (html_url . "https://github.com/lupo112") (followers_url . "https://api.github.com/users/lupo112/followers") (following_url . "https://api.github.com/users/lupo112/following{/other_user}") (gists_url . "https://api.github.com/users/lupo112/gists{/gist_id}") (starred_url . "https://api.github.com/users/lupo112/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lupo112/subscriptions") (organizations_url . "https://api.github.com/users/lupo112/orgs") (repos_url . "https://api.github.com/users/lupo112/repos") (events_url . "https://api.github.com/users/lupo112/events{/privacy}") (received_events_url . "https://api.github.com/users/lupo112/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 12) (created_at . "2017-11-22T11:17:18Z") (updated_at . "2018-02-19T23:48:02Z") (closed_at) (author_association . "NONE") (body . "Hi

I am using prometheus gateway and I have a problem. Gateway reporting this error:

```
An error has occurred during metrics collection:

gathered metric family process_start_time_seconds has help \"The start time of the Java virtual machine\" but should have \"Start time of the process since unix epoch in seconds.\"
```

So it cannot be scraped any data from push gateway into prometheus server.

Any idea how to solve this?

Used versions (all latest):
```
Micrometer (core, spring-legacy, registry-prometheus) 1.0.0-rc.4
Prometheus Java client (simpleclient, pushgateway) 0.1.0
Prometheus Push Gateway 0.4.0
```")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/236") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/236/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/236/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/236/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/236") (id . 275153926) (number . 236) (title . "Support for easy Timed Feign requests") (user (login . "fiunchinho") (id . 627038) (avatar_url . "https://avatars0.githubusercontent.com/u/627038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fiunchinho") (html_url . "https://github.com/fiunchinho") (followers_url . "https://api.github.com/users/fiunchinho/followers") (following_url . "https://api.github.com/users/fiunchinho/following{/other_user}") (gists_url . "https://api.github.com/users/fiunchinho/gists{/gist_id}") (starred_url . "https://api.github.com/users/fiunchinho/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fiunchinho/subscriptions") (organizations_url . "https://api.github.com/users/fiunchinho/orgs") (repos_url . "https://api.github.com/users/fiunchinho/repos") (events_url . "https://api.github.com/users/fiunchinho/events{/privacy}") (received_events_url . "https://api.github.com/users/fiunchinho/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-11-19T12:12:04Z") (updated_at . "2018-02-22T20:18:05Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I'd like an easy out-of-the-box way of timing requests done by Feign clients. I want the same behavior [as we currently have for RestTemplate](http://micrometer.io/docs/ref/spring/1.5#_client_side_http_instrumentation), but for Feign.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/207") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/207/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/207/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/207/events") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/207") (id . 273194563) (number . 207) (title . "Add TracingTimer") (user (login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 10) (created_at . "2017-11-12T02:55:56Z") (updated_at . "2018-02-23T16:49:07Z") (closed_at) (author_association . "COLLABORATOR") (pull_request (url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls/207") (html_url . "https://github.com/micrometer-metrics/micrometer/pull/207") (diff_url . "https://github.com/micrometer-metrics/micrometer/pull/207.diff") (patch_url . "https://github.com/micrometer-metrics/micrometer/pull/207.patch")) (body . "Alternative solution to #28

This creates a `TracingTimer` that could be used to automatically generate tracing spans.

Instead of instrumenting at the registry level, I wrap the `Timer` that is returned by the `register` call.

FYI @adriancole

")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/154") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/154/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/154/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/154/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/154") (id . 264591124) (number . 154) (title . "Support Elastic") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 26) (created_at . "2017-10-11T13:41:27Z") (updated_at . "2018-02-26T19:26:42Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "See [the docs](https://www.elastic.co/guide/en/beats/metricbeat/6.0/metricbeat-module-http.html). This was raised in https://github.com/spring-projects/spring-boot/issues/10449.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/147") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/147/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/147/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/147/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/147") (id . 263561596) (number . 147) (title . "Support collectd (input to Graphite, Riemann, etc.)") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 4) (created_at . "2017-10-06T20:23:47Z") (updated_at . "2018-02-23T14:59:40Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/65") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/65/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/65/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/65/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/65") (id . 246469433) (number . 65) (title . "Zabbix support") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 1) (created_at . "2017-07-28T22:01:36Z") (updated_at . "2018-02-09T23:02:07Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "https://www.zabbix.com/

Is this something we want?")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/32") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/32/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/32/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/32/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/32") (id . 232365197) (number . 32) (title . "Support interval counters") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 2) (created_at . "2017-05-30T20:02:09Z") (updated_at . "2018-02-14T23:37:00Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "A counter that also keeps track of the time since last update (in the form of a gauge).")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/28") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/28/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/28/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/28/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/28") (id . 231921199) (number . 28) (title . "Add ability to emit tracing and logging when metering") (user (login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin)) (labels ((id . 580980798) (url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels/question") (name . "question") (color . "cc317c") (default . t))) (state . "open") (locked) (assignee (login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin)) (assignees ((login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 0) (created_at . "2017-05-29T03:50:38Z") (updated_at . "2018-02-15T02:25:12Z") (closed_at) (author_association . "COLLABORATOR") (body . "Inspired by this talk: https://youtu.be/P8dc-rLnLr0?t=5h31m5s at Monitorama.

What if I were able to create a timer and when it runs it could check if there was an active slueth/zipkin trace and it could create a span. Also at the same time it could log out details. This way  app code would be instrumented by a single line and we could emit the log/metric/trace info on their behalf.")) ((url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/24") (repository_url . "https://api.github.com/repos/micrometer-metrics/micrometer") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/24/labels{/name}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/24/comments") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/24/events") (html_url . "https://github.com/micrometer-metrics/micrometer/issues/24") (id . 231644798) (number . 24) (title . "Blow up or warn when @Timed has no name on @Scheduled") (user (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22") (html_url . "https://github.com/micrometer-metrics/micrometer/milestone/22") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones/22/labels") (id . 3104163) (number . 22) (title . "1.1.0") (description) (creator (login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)) (open_issues . 29) (closed_issues . 0) (state . "open") (created_at . "2018-02-09T23:02:07Z") (updated_at . "2018-02-27T02:12:54Z") (due_on) (closed_at)) (comments . 3) (created_at . "2017-05-26T14:35:40Z") (updated_at . "2018-02-14T23:37:08Z") (closed_at) (author_association . "CONTRIBUTOR") (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 87859908) (name . "micrometer") (full_name . "micrometer-metrics/micrometer") (owner (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/micrometer-metrics/micrometer") (description . "An application metrics facade for the most popular monitoring tools.") (fork) (url . "https://api.github.com/repos/micrometer-metrics/micrometer") (forks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/forks") (keys_url . "https://api.github.com/repos/micrometer-metrics/micrometer/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/micrometer-metrics/micrometer/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/micrometer-metrics/micrometer/teams") (hooks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/hooks") (issue_events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/events{/number}") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/events") (assignees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/assignees{/user}") (branches_url . "https://api.github.com/repos/micrometer-metrics/micrometer/branches{/branch}") (tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/tags") (blobs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/refs{/sha}") (trees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/micrometer-metrics/micrometer/statuses/{sha}") (languages_url . "https://api.github.com/repos/micrometer-metrics/micrometer/languages") (stargazers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/stargazers") (contributors_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contributors") (subscribers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscribers") (subscription_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscription") (commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/commits{/sha}") (git_commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/commits{/sha}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/comments{/number}") (issue_comment_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/comments{/number}") (contents_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contents/{+path}") (compare_url . "https://api.github.com/repos/micrometer-metrics/micrometer/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/micrometer-metrics/micrometer/merges") (archive_url . "https://api.github.com/repos/micrometer-metrics/micrometer/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/micrometer-metrics/micrometer/downloads") (issues_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues{/number}") (pulls_url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls{/number}") (milestones_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones{/number}") (notifications_url . "https://api.github.com/repos/micrometer-metrics/micrometer/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels{/name}") (releases_url . "https://api.github.com/repos/micrometer-metrics/micrometer/releases{/id}") (deployments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/deployments") (created_at . "2017-04-10T21:36:51Z") (updated_at . "2018-02-28T03:37:35Z") (pushed_at . "2018-02-27T14:06:56Z") (git_url . "git://github.com/micrometer-metrics/micrometer.git") (ssh_url . "git@github.com:micrometer-metrics/micrometer.git") (clone_url . "https://github.com/micrometer-metrics/micrometer.git") (svn_url . "https://github.com/micrometer-metrics/micrometer") (homepage . "http://micrometer.io") (size . 13623) (stargazers_count . 548) (watchers_count . 548) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 96) (mirror_url) (archived) (open_issues_count . 36) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 96) (open_issues . 36) (watchers . 548) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (network_count . 96) (subscribers_count . 83))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 87859908) (name . "micrometer") (full_name . "micrometer-metrics/micrometer") (owner (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/micrometer-metrics/micrometer") (description . "An application metrics facade for the most popular monitoring tools.") (fork) (url . "https://api.github.com/repos/micrometer-metrics/micrometer") (forks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/forks") (keys_url . "https://api.github.com/repos/micrometer-metrics/micrometer/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/micrometer-metrics/micrometer/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/micrometer-metrics/micrometer/teams") (hooks_url . "https://api.github.com/repos/micrometer-metrics/micrometer/hooks") (issue_events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/events{/number}") (events_url . "https://api.github.com/repos/micrometer-metrics/micrometer/events") (assignees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/assignees{/user}") (branches_url . "https://api.github.com/repos/micrometer-metrics/micrometer/branches{/branch}") (tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/tags") (blobs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/refs{/sha}") (trees_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/micrometer-metrics/micrometer/statuses/{sha}") (languages_url . "https://api.github.com/repos/micrometer-metrics/micrometer/languages") (stargazers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/stargazers") (contributors_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contributors") (subscribers_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscribers") (subscription_url . "https://api.github.com/repos/micrometer-metrics/micrometer/subscription") (commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/commits{/sha}") (git_commits_url . "https://api.github.com/repos/micrometer-metrics/micrometer/git/commits{/sha}") (comments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/comments{/number}") (issue_comment_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues/comments{/number}") (contents_url . "https://api.github.com/repos/micrometer-metrics/micrometer/contents/{+path}") (compare_url . "https://api.github.com/repos/micrometer-metrics/micrometer/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/micrometer-metrics/micrometer/merges") (archive_url . "https://api.github.com/repos/micrometer-metrics/micrometer/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/micrometer-metrics/micrometer/downloads") (issues_url . "https://api.github.com/repos/micrometer-metrics/micrometer/issues{/number}") (pulls_url . "https://api.github.com/repos/micrometer-metrics/micrometer/pulls{/number}") (milestones_url . "https://api.github.com/repos/micrometer-metrics/micrometer/milestones{/number}") (notifications_url . "https://api.github.com/repos/micrometer-metrics/micrometer/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/micrometer-metrics/micrometer/labels{/name}") (releases_url . "https://api.github.com/repos/micrometer-metrics/micrometer/releases{/id}") (deployments_url . "https://api.github.com/repos/micrometer-metrics/micrometer/deployments") (created_at . "2017-04-10T21:36:51Z") (updated_at . "2018-02-28T03:37:35Z") (pushed_at . "2018-02-27T14:06:56Z") (git_url . "git://github.com/micrometer-metrics/micrometer.git") (ssh_url . "git@github.com:micrometer-metrics/micrometer.git") (clone_url . "https://github.com/micrometer-metrics/micrometer.git") (svn_url . "https://github.com/micrometer-metrics/micrometer") (homepage . "http://micrometer.io") (size . 13623) (stargazers_count . 548) (watchers_count . 548) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 96) (mirror_url) (archived) (open_issues_count . 36) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 96) (open_issues . 36) (watchers . 548) (default_branch . "master") (permissions (admin) (push) (pull . t)) (organization (login . "micrometer-metrics") (id . 30124485) (avatar_url . "https://avatars0.githubusercontent.com/u/30124485?v=4") (gravatar_id . "") (url . "https://api.github.com/users/micrometer-metrics") (html_url . "https://github.com/micrometer-metrics") (followers_url . "https://api.github.com/users/micrometer-metrics/followers") (following_url . "https://api.github.com/users/micrometer-metrics/following{/other_user}") (gists_url . "https://api.github.com/users/micrometer-metrics/gists{/gist_id}") (starred_url . "https://api.github.com/users/micrometer-metrics/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/micrometer-metrics/subscriptions") (organizations_url . "https://api.github.com/users/micrometer-metrics/orgs") (repos_url . "https://api.github.com/users/micrometer-metrics/repos") (events_url . "https://api.github.com/users/micrometer-metrics/events{/privacy}") (received_events_url . "https://api.github.com/users/micrometer-metrics/received_events") (type . "Organization") (site_admin)) (network_count . 96) (subscribers_count . 83)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "shakuzen") (id . 8924140) (avatar_url . "https://avatars2.githubusercontent.com/u/8924140?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shakuzen") (html_url . "https://github.com/shakuzen") (followers_url . "https://api.github.com/users/shakuzen/followers") (following_url . "https://api.github.com/users/shakuzen/following{/other_user}") (gists_url . "https://api.github.com/users/shakuzen/gists{/gist_id}") (starred_url . "https://api.github.com/users/shakuzen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shakuzen/subscriptions") (organizations_url . "https://api.github.com/users/shakuzen/orgs") (repos_url . "https://api.github.com/users/shakuzen/repos") (events_url . "https://api.github.com/users/shakuzen/events{/privacy}") (received_events_url . "https://api.github.com/users/shakuzen/received_events") (type . "User") (site_admin)))))) ((login . "shakuzen") (id . 8924140) (avatar_url . "https://avatars2.githubusercontent.com/u/8924140?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shakuzen") (html_url . "https://github.com/shakuzen") (followers_url . "https://api.github.com/users/shakuzen/followers") (following_url . "https://api.github.com/users/shakuzen/following{/other_user}") (gists_url . "https://api.github.com/users/shakuzen/gists{/gist_id}") (starred_url . "https://api.github.com/users/shakuzen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shakuzen/subscriptions") (organizations_url . "https://api.github.com/users/shakuzen/orgs") (repos_url . "https://api.github.com/users/shakuzen/repos") (events_url . "https://api.github.com/users/shakuzen/events{/privacy}") (received_events_url . "https://api.github.com/users/shakuzen/received_events") (type . "User") (site_admin) (name . "Tommy Ludwig") (company) (blog . "") (location . "Tokyo") (email) (hireable) (bio) (public_repos . 50) (public_gists . 1) (followers . 20) (following . 0) (created_at . "2014-09-26T04:19:09Z") (updated_at . "2017-12-17T02:03:32Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tkp1n") (id . 9985284) (avatar_url . "https://avatars0.githubusercontent.com/u/9985284?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tkp1n") (html_url . "https://github.com/tkp1n") (followers_url . "https://api.github.com/users/tkp1n/followers") (following_url . "https://api.github.com/users/tkp1n/following{/other_user}") (gists_url . "https://api.github.com/users/tkp1n/gists{/gist_id}") (starred_url . "https://api.github.com/users/tkp1n/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tkp1n/subscriptions") (organizations_url . "https://api.github.com/users/tkp1n/orgs") (repos_url . "https://api.github.com/users/tkp1n/repos") (events_url . "https://api.github.com/users/tkp1n/events{/privacy}") (received_events_url . "https://api.github.com/users/tkp1n/received_events") (type . "User") (site_admin)))))) ((login . "tkp1n") (id . 9985284) (avatar_url . "https://avatars0.githubusercontent.com/u/9985284?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tkp1n") (html_url . "https://github.com/tkp1n") (followers_url . "https://api.github.com/users/tkp1n/followers") (following_url . "https://api.github.com/users/tkp1n/following{/other_user}") (gists_url . "https://api.github.com/users/tkp1n/gists{/gist_id}") (starred_url . "https://api.github.com/users/tkp1n/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tkp1n/subscriptions") (organizations_url . "https://api.github.com/users/tkp1n/orgs") (repos_url . "https://api.github.com/users/tkp1n/repos") (events_url . "https://api.github.com/users/tkp1n/events{/privacy}") (received_events_url . "https://api.github.com/users/tkp1n/received_events") (type . "User") (site_admin) (name . "Nicolas Portmann") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 1) (public_gists . 0) (followers . 1) (following . 0) (created_at . "2014-11-28T04:55:30Z") (updated_at . "2018-02-27T23:30:03Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin)))))) ((login . "checketts") (id . 416063) (avatar_url . "https://avatars0.githubusercontent.com/u/416063?v=4") (gravatar_id . "") (url . "https://api.github.com/users/checketts") (html_url . "https://github.com/checketts") (followers_url . "https://api.github.com/users/checketts/followers") (following_url . "https://api.github.com/users/checketts/following{/other_user}") (gists_url . "https://api.github.com/users/checketts/gists{/gist_id}") (starred_url . "https://api.github.com/users/checketts/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/checketts/subscriptions") (organizations_url . "https://api.github.com/users/checketts/orgs") (repos_url . "https://api.github.com/users/checketts/repos") (events_url . "https://api.github.com/users/checketts/events{/privacy}") (received_events_url . "https://api.github.com/users/checketts/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 56) (public_gists . 2) (followers . 10) (following . 0) (created_at . "2010-09-26T03:22:59Z") (updated_at . "2018-02-08T04:10:04Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin)))))) ((login . "jkschneider") (id . 1697736) (avatar_url . "https://avatars2.githubusercontent.com/u/1697736?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jkschneider") (html_url . "https://github.com/jkschneider") (followers_url . "https://api.github.com/users/jkschneider/followers") (following_url . "https://api.github.com/users/jkschneider/following{/other_user}") (gists_url . "https://api.github.com/users/jkschneider/gists{/gist_id}") (starred_url . "https://api.github.com/users/jkschneider/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jkschneider/subscriptions") (organizations_url . "https://api.github.com/users/jkschneider/orgs") (repos_url . "https://api.github.com/users/jkschneider/repos") (events_url . "https://api.github.com/users/jkschneider/events{/privacy}") (received_events_url . "https://api.github.com/users/jkschneider/received_events") (type . "User") (site_admin) (name . "Jon Schneider") (company . "Pivotal") (blog . "https://www.linkedin.com/in/jonkschneider/") (location . "Columbia, MO") (email) (hireable) (bio . "Spring Team at Pivotal") (public_repos . 86) (public_gists . 17) (followers . 90) (following . 16) (created_at . "2012-05-02T06:00:05Z") (updated_at . "2018-02-13T15:46:57Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "flozano") (id . 1159291) (avatar_url . "https://avatars0.githubusercontent.com/u/1159291?v=4") (gravatar_id . "") (url . "https://api.github.com/users/flozano") (html_url . "https://github.com/flozano") (followers_url . "https://api.github.com/users/flozano/followers") (following_url . "https://api.github.com/users/flozano/following{/other_user}") (gists_url . "https://api.github.com/users/flozano/gists{/gist_id}") (starred_url . "https://api.github.com/users/flozano/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/flozano/subscriptions") (organizations_url . "https://api.github.com/users/flozano/orgs") (repos_url . "https://api.github.com/users/flozano/repos") (events_url . "https://api.github.com/users/flozano/events{/privacy}") (received_events_url . "https://api.github.com/users/flozano/received_events") (type . "User") (site_admin)))))) ((login . "flozano") (id . 1159291) (avatar_url . "https://avatars0.githubusercontent.com/u/1159291?v=4") (gravatar_id . "") (url . "https://api.github.com/users/flozano") (html_url . "https://github.com/flozano") (followers_url . "https://api.github.com/users/flozano/followers") (following_url . "https://api.github.com/users/flozano/following{/other_user}") (gists_url . "https://api.github.com/users/flozano/gists{/gist_id}") (starred_url . "https://api.github.com/users/flozano/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/flozano/subscriptions") (organizations_url . "https://api.github.com/users/flozano/orgs") (repos_url . "https://api.github.com/users/flozano/repos") (events_url . "https://api.github.com/users/flozano/events{/privacy}") (received_events_url . "https://api.github.com/users/flozano/received_events") (type . "User") (site_admin) (name . "Francisco A. Lozano") (company . "Kii corporation") (blog . "") (location . "Valencia, Spain") (email) (hireable) (bio) (public_repos . 87) (public_gists . 3) (followers . 11) (following . 51) (created_at . "2011-10-29T08:41:59Z") (updated_at . "2018-01-29T10:25:06Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "edeandrea") (id . 363447) (avatar_url . "https://avatars0.githubusercontent.com/u/363447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/edeandrea") (html_url . "https://github.com/edeandrea") (followers_url . "https://api.github.com/users/edeandrea/followers") (following_url . "https://api.github.com/users/edeandrea/following{/other_user}") (gists_url . "https://api.github.com/users/edeandrea/gists{/gist_id}") (starred_url . "https://api.github.com/users/edeandrea/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/edeandrea/subscriptions") (organizations_url . "https://api.github.com/users/edeandrea/orgs") (repos_url . "https://api.github.com/users/edeandrea/repos") (events_url . "https://api.github.com/users/edeandrea/events{/privacy}") (received_events_url . "https://api.github.com/users/edeandrea/received_events") (type . "User") (site_admin)))))) ((login . "edeandrea") (id . 363447) (avatar_url . "https://avatars0.githubusercontent.com/u/363447?v=4") (gravatar_id . "") (url . "https://api.github.com/users/edeandrea") (html_url . "https://github.com/edeandrea") (followers_url . "https://api.github.com/users/edeandrea/followers") (following_url . "https://api.github.com/users/edeandrea/following{/other_user}") (gists_url . "https://api.github.com/users/edeandrea/gists{/gist_id}") (starred_url . "https://api.github.com/users/edeandrea/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/edeandrea/subscriptions") (organizations_url . "https://api.github.com/users/edeandrea/orgs") (repos_url . "https://api.github.com/users/edeandrea/repos") (events_url . "https://api.github.com/users/edeandrea/events{/privacy}") (received_events_url . "https://api.github.com/users/edeandrea/received_events") (type . "User") (site_admin) (name . "Eric Deandrea") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 1) (following . 1) (created_at . "2010-08-13T13:20:52Z") (updated_at . "2018-02-18T13:49:33Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "randysecrist") (id . 141339) (avatar_url . "https://avatars1.githubusercontent.com/u/141339?v=4") (gravatar_id . "") (url . "https://api.github.com/users/randysecrist") (html_url . "https://github.com/randysecrist") (followers_url . "https://api.github.com/users/randysecrist/followers") (following_url . "https://api.github.com/users/randysecrist/following{/other_user}") (gists_url . "https://api.github.com/users/randysecrist/gists{/gist_id}") (starred_url . "https://api.github.com/users/randysecrist/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/randysecrist/subscriptions") (organizations_url . "https://api.github.com/users/randysecrist/orgs") (repos_url . "https://api.github.com/users/randysecrist/repos") (events_url . "https://api.github.com/users/randysecrist/events{/privacy}") (received_events_url . "https://api.github.com/users/randysecrist/received_events") (type . "User") (site_admin)))))) ((login . "randysecrist") (id . 141339) (avatar_url . "https://avatars1.githubusercontent.com/u/141339?v=4") (gravatar_id . "") (url . "https://api.github.com/users/randysecrist") (html_url . "https://github.com/randysecrist") (followers_url . "https://api.github.com/users/randysecrist/followers") (following_url . "https://api.github.com/users/randysecrist/following{/other_user}") (gists_url . "https://api.github.com/users/randysecrist/gists{/gist_id}") (starred_url . "https://api.github.com/users/randysecrist/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/randysecrist/subscriptions") (organizations_url . "https://api.github.com/users/randysecrist/orgs") (repos_url . "https://api.github.com/users/randysecrist/repos") (events_url . "https://api.github.com/users/randysecrist/events{/privacy}") (received_events_url . "https://api.github.com/users/randysecrist/received_events") (type . "User") (site_admin) (name . "Randy Secrist") (company . "Basho Technologies") (blog . "http://randysecrist.github.com/") (location . "Salt Lake City, Utah") (email . "randy ~dot~ secrist ~at~ gmail.com") (hireable . t) (bio . "Father of four amazing children.

I code in Erlang, C, Java, Javascript and Ruby.") (public_repos . 49) (public_gists . 19) (followers . 35) (following . 37) (created_at . "2009-10-18T17:04:31Z") (updated_at . "2018-02-17T16:48:22Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "paul-ovchinnikov") (id . 5802650) (avatar_url . "https://avatars1.githubusercontent.com/u/5802650?v=4") (gravatar_id . "") (url . "https://api.github.com/users/paul-ovchinnikov") (html_url . "https://github.com/paul-ovchinnikov") (followers_url . "https://api.github.com/users/paul-ovchinnikov/followers") (following_url . "https://api.github.com/users/paul-ovchinnikov/following{/other_user}") (gists_url . "https://api.github.com/users/paul-ovchinnikov/gists{/gist_id}") (starred_url . "https://api.github.com/users/paul-ovchinnikov/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/paul-ovchinnikov/subscriptions") (organizations_url . "https://api.github.com/users/paul-ovchinnikov/orgs") (repos_url . "https://api.github.com/users/paul-ovchinnikov/repos") (events_url . "https://api.github.com/users/paul-ovchinnikov/events{/privacy}") (received_events_url . "https://api.github.com/users/paul-ovchinnikov/received_events") (type . "User") (site_admin)))))) ((login . "paul-ovchinnikov") (id . 5802650) (avatar_url . "https://avatars1.githubusercontent.com/u/5802650?v=4") (gravatar_id . "") (url . "https://api.github.com/users/paul-ovchinnikov") (html_url . "https://github.com/paul-ovchinnikov") (followers_url . "https://api.github.com/users/paul-ovchinnikov/followers") (following_url . "https://api.github.com/users/paul-ovchinnikov/following{/other_user}") (gists_url . "https://api.github.com/users/paul-ovchinnikov/gists{/gist_id}") (starred_url . "https://api.github.com/users/paul-ovchinnikov/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/paul-ovchinnikov/subscriptions") (organizations_url . "https://api.github.com/users/paul-ovchinnikov/orgs") (repos_url . "https://api.github.com/users/paul-ovchinnikov/repos") (events_url . "https://api.github.com/users/paul-ovchinnikov/events{/privacy}") (received_events_url . "https://api.github.com/users/paul-ovchinnikov/received_events") (type . "User") (site_admin) (name) (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 14) (public_gists . 1) (followers . 2) (following . 0) (created_at . "2013-10-29T10:27:32Z") (updated_at . "2018-02-21T07:27:57Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "robachmann") (id . 8127370) (avatar_url . "https://avatars2.githubusercontent.com/u/8127370?v=4") (gravatar_id . "") (url . "https://api.github.com/users/robachmann") (html_url . "https://github.com/robachmann") (followers_url . "https://api.github.com/users/robachmann/followers") (following_url . "https://api.github.com/users/robachmann/following{/other_user}") (gists_url . "https://api.github.com/users/robachmann/gists{/gist_id}") (starred_url . "https://api.github.com/users/robachmann/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/robachmann/subscriptions") (organizations_url . "https://api.github.com/users/robachmann/orgs") (repos_url . "https://api.github.com/users/robachmann/repos") (events_url . "https://api.github.com/users/robachmann/events{/privacy}") (received_events_url . "https://api.github.com/users/robachmann/received_events") (type . "User") (site_admin)))))) ((login . "robachmann") (id . 8127370) (avatar_url . "https://avatars2.githubusercontent.com/u/8127370?v=4") (gravatar_id . "") (url . "https://api.github.com/users/robachmann") (html_url . "https://github.com/robachmann") (followers_url . "https://api.github.com/users/robachmann/followers") (following_url . "https://api.github.com/users/robachmann/following{/other_user}") (gists_url . "https://api.github.com/users/robachmann/gists{/gist_id}") (starred_url . "https://api.github.com/users/robachmann/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/robachmann/subscriptions") (organizations_url . "https://api.github.com/users/robachmann/orgs") (repos_url . "https://api.github.com/users/robachmann/repos") (events_url . "https://api.github.com/users/robachmann/events{/privacy}") (received_events_url . "https://api.github.com/users/robachmann/received_events") (type . "User") (site_admin) (name . "Roman Bachmann") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 9) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2014-07-10T17:49:51Z") (updated_at . "2018-02-06T04:11:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "mheffner") (id . 80635) (avatar_url . "https://avatars2.githubusercontent.com/u/80635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mheffner") (html_url . "https://github.com/mheffner") (followers_url . "https://api.github.com/users/mheffner/followers") (following_url . "https://api.github.com/users/mheffner/following{/other_user}") (gists_url . "https://api.github.com/users/mheffner/gists{/gist_id}") (starred_url . "https://api.github.com/users/mheffner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mheffner/subscriptions") (organizations_url . "https://api.github.com/users/mheffner/orgs") (repos_url . "https://api.github.com/users/mheffner/repos") (events_url . "https://api.github.com/users/mheffner/events{/privacy}") (received_events_url . "https://api.github.com/users/mheffner/received_events") (type . "User") (site_admin)))))) ((login . "mheffner") (id . 80635) (avatar_url . "https://avatars2.githubusercontent.com/u/80635?v=4") (gravatar_id . "") (url . "https://api.github.com/users/mheffner") (html_url . "https://github.com/mheffner") (followers_url . "https://api.github.com/users/mheffner/followers") (following_url . "https://api.github.com/users/mheffner/following{/other_user}") (gists_url . "https://api.github.com/users/mheffner/gists{/gist_id}") (starred_url . "https://api.github.com/users/mheffner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/mheffner/subscriptions") (organizations_url . "https://api.github.com/users/mheffner/orgs") (repos_url . "https://api.github.com/users/mheffner/repos") (events_url . "https://api.github.com/users/mheffner/events{/privacy}") (received_events_url . "https://api.github.com/users/mheffner/received_events") (type . "User") (site_admin) (name . "Mike Heffner") (company . "Librato") (blog . "http://twitter.com/mheffner") (location . "Blacksburg, VA") (email . "mikeh@fesnel.com") (hireable) (bio) (public_repos . 63) (public_gists . 54) (followers . 26) (following . 4) (created_at . "2009-05-04T04:01:55Z") (updated_at . "2018-02-01T15:23:18Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "tf-martin-maier-moessner") (id . 35150088) (avatar_url . "https://avatars3.githubusercontent.com/u/35150088?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tf-martin-maier-moessner") (html_url . "https://github.com/tf-martin-maier-moessner") (followers_url . "https://api.github.com/users/tf-martin-maier-moessner/followers") (following_url . "https://api.github.com/users/tf-martin-maier-moessner/following{/other_user}") (gists_url . "https://api.github.com/users/tf-martin-maier-moessner/gists{/gist_id}") (starred_url . "https://api.github.com/users/tf-martin-maier-moessner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tf-martin-maier-moessner/subscriptions") (organizations_url . "https://api.github.com/users/tf-martin-maier-moessner/orgs") (repos_url . "https://api.github.com/users/tf-martin-maier-moessner/repos") (events_url . "https://api.github.com/users/tf-martin-maier-moessner/events{/privacy}") (received_events_url . "https://api.github.com/users/tf-martin-maier-moessner/received_events") (type . "User") (site_admin)))))) ((login . "tf-martin-maier-moessner") (id . 35150088) (avatar_url . "https://avatars3.githubusercontent.com/u/35150088?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tf-martin-maier-moessner") (html_url . "https://github.com/tf-martin-maier-moessner") (followers_url . "https://api.github.com/users/tf-martin-maier-moessner/followers") (following_url . "https://api.github.com/users/tf-martin-maier-moessner/following{/other_user}") (gists_url . "https://api.github.com/users/tf-martin-maier-moessner/gists{/gist_id}") (starred_url . "https://api.github.com/users/tf-martin-maier-moessner/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tf-martin-maier-moessner/subscriptions") (organizations_url . "https://api.github.com/users/tf-martin-maier-moessner/orgs") (repos_url . "https://api.github.com/users/tf-martin-maier-moessner/repos") (events_url . "https://api.github.com/users/tf-martin-maier-moessner/events{/privacy}") (received_events_url . "https://api.github.com/users/tf-martin-maier-moessner/received_events") (type . "User") (site_admin) (name . "Martin Maier-Moessner") (company . "@Twinformatics") (blog . "") (location . "Vienna") (email) (hireable) (bio . "Work account of @tine2k") (public_repos . 0) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2018-01-05T19:58:22Z") (updated_at . "2018-01-30T08:52:05Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "dsyer") (id . 124075) (avatar_url . "https://avatars1.githubusercontent.com/u/124075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dsyer") (html_url . "https://github.com/dsyer") (followers_url . "https://api.github.com/users/dsyer/followers") (following_url . "https://api.github.com/users/dsyer/following{/other_user}") (gists_url . "https://api.github.com/users/dsyer/gists{/gist_id}") (starred_url . "https://api.github.com/users/dsyer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dsyer/subscriptions") (organizations_url . "https://api.github.com/users/dsyer/orgs") (repos_url . "https://api.github.com/users/dsyer/repos") (events_url . "https://api.github.com/users/dsyer/events{/privacy}") (received_events_url . "https://api.github.com/users/dsyer/received_events") (type . "User") (site_admin)))))) ((login . "dsyer") (id . 124075) (avatar_url . "https://avatars1.githubusercontent.com/u/124075?v=4") (gravatar_id . "") (url . "https://api.github.com/users/dsyer") (html_url . "https://github.com/dsyer") (followers_url . "https://api.github.com/users/dsyer/followers") (following_url . "https://api.github.com/users/dsyer/following{/other_user}") (gists_url . "https://api.github.com/users/dsyer/gists{/gist_id}") (starred_url . "https://api.github.com/users/dsyer/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/dsyer/subscriptions") (organizations_url . "https://api.github.com/users/dsyer/orgs") (repos_url . "https://api.github.com/users/dsyer/repos") (events_url . "https://api.github.com/users/dsyer/events{/privacy}") (received_events_url . "https://api.github.com/users/dsyer/received_events") (type . "User") (site_admin) (name . "Dave Syer") (company . "Pivotal") (blog . "http://spring.io/team/dsyer") (location . "London") (email . "david_syer@hotmail.com") (hireable) (bio . "Founder of Spring Cloud, Spring Boot, Spring Batch, and an active contributor to Spring Integration, Spring Framework, Spring AMQP, Spring Security.") (public_repos . 230) (public_gists . 39) (followers . 1590) (following . 3) (created_at . "2009-09-07T08:52:49Z") (updated_at . "2017-12-20T21:22:36Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "wei-hai") (id . 2936715) (avatar_url . "https://avatars1.githubusercontent.com/u/2936715?v=4") (gravatar_id . "") (url . "https://api.github.com/users/wei-hai") (html_url . "https://github.com/wei-hai") (followers_url . "https://api.github.com/users/wei-hai/followers") (following_url . "https://api.github.com/users/wei-hai/following{/other_user}") (gists_url . "https://api.github.com/users/wei-hai/gists{/gist_id}") (starred_url . "https://api.github.com/users/wei-hai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/wei-hai/subscriptions") (organizations_url . "https://api.github.com/users/wei-hai/orgs") (repos_url . "https://api.github.com/users/wei-hai/repos") (events_url . "https://api.github.com/users/wei-hai/events{/privacy}") (received_events_url . "https://api.github.com/users/wei-hai/received_events") (type . "User") (site_admin)))))) ((login . "wei-hai") (id . 2936715) (avatar_url . "https://avatars1.githubusercontent.com/u/2936715?v=4") (gravatar_id . "") (url . "https://api.github.com/users/wei-hai") (html_url . "https://github.com/wei-hai") (followers_url . "https://api.github.com/users/wei-hai/followers") (following_url . "https://api.github.com/users/wei-hai/following{/other_user}") (gists_url . "https://api.github.com/users/wei-hai/gists{/gist_id}") (starred_url . "https://api.github.com/users/wei-hai/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/wei-hai/subscriptions") (organizations_url . "https://api.github.com/users/wei-hai/orgs") (repos_url . "https://api.github.com/users/wei-hai/repos") (events_url . "https://api.github.com/users/wei-hai/events{/privacy}") (received_events_url . "https://api.github.com/users/wei-hai/received_events") (type . "User") (site_admin) (name . "Wei Hai") (company . "Credit Karma") (blog . "") (location . "San Francisco") (email . "hai.vincent@gmail.com") (hireable . t) (bio) (public_repos . 8) (public_gists . 0) (followers . 2) (following . 0) (created_at . "2012-12-01T05:54:27Z") (updated_at . "2018-02-02T05:26:35Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "adoelger") (id . 4172849) (avatar_url . "https://avatars3.githubusercontent.com/u/4172849?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adoelger") (html_url . "https://github.com/adoelger") (followers_url . "https://api.github.com/users/adoelger/followers") (following_url . "https://api.github.com/users/adoelger/following{/other_user}") (gists_url . "https://api.github.com/users/adoelger/gists{/gist_id}") (starred_url . "https://api.github.com/users/adoelger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adoelger/subscriptions") (organizations_url . "https://api.github.com/users/adoelger/orgs") (repos_url . "https://api.github.com/users/adoelger/repos") (events_url . "https://api.github.com/users/adoelger/events{/privacy}") (received_events_url . "https://api.github.com/users/adoelger/received_events") (type . "User") (site_admin)))))) ((login . "adoelger") (id . 4172849) (avatar_url . "https://avatars3.githubusercontent.com/u/4172849?v=4") (gravatar_id . "") (url . "https://api.github.com/users/adoelger") (html_url . "https://github.com/adoelger") (followers_url . "https://api.github.com/users/adoelger/followers") (following_url . "https://api.github.com/users/adoelger/following{/other_user}") (gists_url . "https://api.github.com/users/adoelger/gists{/gist_id}") (starred_url . "https://api.github.com/users/adoelger/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/adoelger/subscriptions") (organizations_url . "https://api.github.com/users/adoelger/orgs") (repos_url . "https://api.github.com/users/adoelger/repos") (events_url . "https://api.github.com/users/adoelger/events{/privacy}") (received_events_url . "https://api.github.com/users/adoelger/received_events") (type . "User") (site_admin) (name . "André Dölger") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 0) (public_gists . 0) (followers . 0) (following . 0) (created_at . "2013-04-16T16:16:30Z") (updated_at . "2017-08-24T08:22:47Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "cykl") (id . 1764725) (avatar_url . "https://avatars3.githubusercontent.com/u/1764725?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cykl") (html_url . "https://github.com/cykl") (followers_url . "https://api.github.com/users/cykl/followers") (following_url . "https://api.github.com/users/cykl/following{/other_user}") (gists_url . "https://api.github.com/users/cykl/gists{/gist_id}") (starred_url . "https://api.github.com/users/cykl/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cykl/subscriptions") (organizations_url . "https://api.github.com/users/cykl/orgs") (repos_url . "https://api.github.com/users/cykl/repos") (events_url . "https://api.github.com/users/cykl/events{/privacy}") (received_events_url . "https://api.github.com/users/cykl/received_events") (type . "User") (site_admin)))))) ((login . "cykl") (id . 1764725) (avatar_url . "https://avatars3.githubusercontent.com/u/1764725?v=4") (gravatar_id . "") (url . "https://api.github.com/users/cykl") (html_url . "https://github.com/cykl") (followers_url . "https://api.github.com/users/cykl/followers") (following_url . "https://api.github.com/users/cykl/following{/other_user}") (gists_url . "https://api.github.com/users/cykl/gists{/gist_id}") (starred_url . "https://api.github.com/users/cykl/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/cykl/subscriptions") (organizations_url . "https://api.github.com/users/cykl/orgs") (repos_url . "https://api.github.com/users/cykl/repos") (events_url . "https://api.github.com/users/cykl/events{/privacy}") (received_events_url . "https://api.github.com/users/cykl/received_events") (type . "User") (site_admin) (name . "Clément MATHIEU") (company . "Freelance") (blog . "http://unportant.info") (location . "Nice, France") (email . "clement+github@unportant.info") (hireable . t) (bio . "qwerty pianist") (public_repos . 19) (public_gists . 8) (followers . 12) (following . 0) (created_at . "2012-05-22T12:56:59Z") (updated_at . "2018-02-27T15:23:46Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "nickstolwijk") (id . 1562274) (avatar_url . "https://avatars1.githubusercontent.com/u/1562274?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nickstolwijk") (html_url . "https://github.com/nickstolwijk") (followers_url . "https://api.github.com/users/nickstolwijk/followers") (following_url . "https://api.github.com/users/nickstolwijk/following{/other_user}") (gists_url . "https://api.github.com/users/nickstolwijk/gists{/gist_id}") (starred_url . "https://api.github.com/users/nickstolwijk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nickstolwijk/subscriptions") (organizations_url . "https://api.github.com/users/nickstolwijk/orgs") (repos_url . "https://api.github.com/users/nickstolwijk/repos") (events_url . "https://api.github.com/users/nickstolwijk/events{/privacy}") (received_events_url . "https://api.github.com/users/nickstolwijk/received_events") (type . "User") (site_admin)))))) ((login . "nickstolwijk") (id . 1562274) (avatar_url . "https://avatars1.githubusercontent.com/u/1562274?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nickstolwijk") (html_url . "https://github.com/nickstolwijk") (followers_url . "https://api.github.com/users/nickstolwijk/followers") (following_url . "https://api.github.com/users/nickstolwijk/following{/other_user}") (gists_url . "https://api.github.com/users/nickstolwijk/gists{/gist_id}") (starred_url . "https://api.github.com/users/nickstolwijk/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nickstolwijk/subscriptions") (organizations_url . "https://api.github.com/users/nickstolwijk/orgs") (repos_url . "https://api.github.com/users/nickstolwijk/repos") (events_url . "https://api.github.com/users/nickstolwijk/events{/privacy}") (received_events_url . "https://api.github.com/users/nickstolwijk/received_events") (type . "User") (site_admin) (name . "Nick Stolwijk") (company . "Blue4IT") (blog . "") (location . "Bodegraven") (email . "nick.stolwijk@gmail.com") (hireable) (bio) (public_repos . 15) (public_gists . 0) (followers . 1) (following . 3) (created_at . "2012-03-21T20:23:12Z") (updated_at . "2017-11-30T13:43:07Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "lupo112") (id . 1206903) (avatar_url . "https://avatars2.githubusercontent.com/u/1206903?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lupo112") (html_url . "https://github.com/lupo112") (followers_url . "https://api.github.com/users/lupo112/followers") (following_url . "https://api.github.com/users/lupo112/following{/other_user}") (gists_url . "https://api.github.com/users/lupo112/gists{/gist_id}") (starred_url . "https://api.github.com/users/lupo112/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lupo112/subscriptions") (organizations_url . "https://api.github.com/users/lupo112/orgs") (repos_url . "https://api.github.com/users/lupo112/repos") (events_url . "https://api.github.com/users/lupo112/events{/privacy}") (received_events_url . "https://api.github.com/users/lupo112/received_events") (type . "User") (site_admin)))))) ((login . "lupo112") (id . 1206903) (avatar_url . "https://avatars2.githubusercontent.com/u/1206903?v=4") (gravatar_id . "") (url . "https://api.github.com/users/lupo112") (html_url . "https://github.com/lupo112") (followers_url . "https://api.github.com/users/lupo112/followers") (following_url . "https://api.github.com/users/lupo112/following{/other_user}") (gists_url . "https://api.github.com/users/lupo112/gists{/gist_id}") (starred_url . "https://api.github.com/users/lupo112/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/lupo112/subscriptions") (organizations_url . "https://api.github.com/users/lupo112/orgs") (repos_url . "https://api.github.com/users/lupo112/repos") (events_url . "https://api.github.com/users/lupo112/events{/privacy}") (received_events_url . "https://api.github.com/users/lupo112/received_events") (type . "User") (site_admin) (name . "Lupo112") (company) (blog . "") (location) (email) (hireable) (bio) (public_repos . 4) (public_gists . 2) (followers . 2) (following . 0) (created_at . "2011-11-19T18:24:22Z") (updated_at . "2018-02-15T17:06:07Z")) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "fiunchinho") (id . 627038) (avatar_url . "https://avatars0.githubusercontent.com/u/627038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fiunchinho") (html_url . "https://github.com/fiunchinho") (followers_url . "https://api.github.com/users/fiunchinho/followers") (following_url . "https://api.github.com/users/fiunchinho/following{/other_user}") (gists_url . "https://api.github.com/users/fiunchinho/gists{/gist_id}") (starred_url . "https://api.github.com/users/fiunchinho/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fiunchinho/subscriptions") (organizations_url . "https://api.github.com/users/fiunchinho/orgs") (repos_url . "https://api.github.com/users/fiunchinho/repos") (events_url . "https://api.github.com/users/fiunchinho/events{/privacy}") (received_events_url . "https://api.github.com/users/fiunchinho/received_events") (type . "User") (site_admin)))))) ((login . "fiunchinho") (id . 627038) (avatar_url . "https://avatars0.githubusercontent.com/u/627038?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fiunchinho") (html_url . "https://github.com/fiunchinho") (followers_url . "https://api.github.com/users/fiunchinho/followers") (following_url . "https://api.github.com/users/fiunchinho/following{/other_user}") (gists_url . "https://api.github.com/users/fiunchinho/gists{/gist_id}") (starred_url . "https://api.github.com/users/fiunchinho/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fiunchinho/subscriptions") (organizations_url . "https://api.github.com/users/fiunchinho/orgs") (repos_url . "https://api.github.com/users/fiunchinho/repos") (events_url . "https://api.github.com/users/fiunchinho/events{/privacy}") (received_events_url . "https://api.github.com/users/fiunchinho/received_events") (type . "User") (site_admin) (name . "Jose Armesto") (company) (blog . "https://armesto.net") (location . "Barcelona") (email) (hireable) (bio) (public_repos . 86) (public_gists . 17) (followers . 91) (following . 61) (created_at . "2011-02-19T14:41:02Z") (updated_at . "2018-01-12T11:10:46Z")) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "shellbj")) (name . "haystack"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 99600285) (name . "haystack") (full_name . "shellbj/haystack") (owner (login . "shellbj") (id . 397853) (avatar_url . "https://avatars2.githubusercontent.com/u/397853?v=4") (gravatar_id . "") (url . "https://api.github.com/users/shellbj") (html_url . "https://github.com/shellbj") (followers_url . "https://api.github.com/users/shellbj/followers") (following_url . "https://api.github.com/users/shellbj/following{/other_user}") (gists_url . "https://api.github.com/users/shellbj/gists{/gist_id}") (starred_url . "https://api.github.com/users/shellbj/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/shellbj/subscriptions") (organizations_url . "https://api.github.com/users/shellbj/orgs") (repos_url . "https://api.github.com/users/shellbj/repos") (events_url . "https://api.github.com/users/shellbj/events{/privacy}") (received_events_url . "https://api.github.com/users/shellbj/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/shellbj/haystack") (description) (fork . t) (url . "https://api.github.com/repos/shellbj/haystack") (forks_url . "https://api.github.com/repos/shellbj/haystack/forks") (keys_url . "https://api.github.com/repos/shellbj/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/shellbj/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/shellbj/haystack/teams") (hooks_url . "https://api.github.com/repos/shellbj/haystack/hooks") (issue_events_url . "https://api.github.com/repos/shellbj/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/shellbj/haystack/events") (assignees_url . "https://api.github.com/repos/shellbj/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/shellbj/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/shellbj/haystack/tags") (blobs_url . "https://api.github.com/repos/shellbj/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/shellbj/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/shellbj/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/shellbj/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/shellbj/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/shellbj/haystack/languages") (stargazers_url . "https://api.github.com/repos/shellbj/haystack/stargazers") (contributors_url . "https://api.github.com/repos/shellbj/haystack/contributors") (subscribers_url . "https://api.github.com/repos/shellbj/haystack/subscribers") (subscription_url . "https://api.github.com/repos/shellbj/haystack/subscription") (commits_url . "https://api.github.com/repos/shellbj/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/shellbj/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/shellbj/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/shellbj/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/shellbj/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/shellbj/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/shellbj/haystack/merges") (archive_url . "https://api.github.com/repos/shellbj/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/shellbj/haystack/downloads") (issues_url . "https://api.github.com/repos/shellbj/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/shellbj/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/shellbj/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/shellbj/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/shellbj/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/shellbj/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/shellbj/haystack/deployments") (created_at . "2017-08-07T16:57:45Z") (updated_at . "2017-07-31T08:23:56Z") (pushed_at . "2017-11-27T21:34:12Z") (git_url . "git://github.com/shellbj/haystack.git") (ssh_url . "git@github.com:shellbj/haystack.git") (clone_url . "https://github.com/shellbj/haystack.git") (svn_url . "https://github.com/shellbj/haystack") (homepage) (size . 5000) (stargazers_count . 0) (watchers_count . 0) (language) (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (parent (id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master")) (source (id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master")) (network_count . 2) (subscribers_count . 1)) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9))) :head "personal:clientsnippy"))) nil (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9))))))) (((url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/255") (repository_url . "https://api.github.com/repos/ExpediaDotCom/haystack") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/255/labels{/name}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/255/comments") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/255/events") (html_url . "https://github.com/ExpediaDotCom/haystack/pull/255") (id . 300979134) (number . 255) (title . "changed kubewatch kubectl command to apply") (user (login . "ayansen") (id . 4974508) (avatar_url . "https://avatars2.githubusercontent.com/u/4974508?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ayansen") (html_url . "https://github.com/ayansen") (followers_url . "https://api.github.com/users/ayansen/followers") (following_url . "https://api.github.com/users/ayansen/following{/other_user}") (gists_url . "https://api.github.com/users/ayansen/gists{/gist_id}") (starred_url . "https://api.github.com/users/ayansen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ayansen/subscriptions") (organizations_url . "https://api.github.com/users/ayansen/orgs") (repos_url . "https://api.github.com/users/ayansen/repos") (events_url . "https://api.github.com/users/ayansen/events{/privacy}") (received_events_url . "https://api.github.com/users/ayansen/received_events") (type . "User") (site_admin)) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-02-28T10:56:28Z") (updated_at . "2018-02-28T17:04:38Z") (closed_at) (author_association . "MEMBER") (pull_request (url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls/255") (html_url . "https://github.com/ExpediaDotCom/haystack/pull/255") (diff_url . "https://github.com/ExpediaDotCom/haystack/pull/255.diff") (patch_url . "https://github.com/ExpediaDotCom/haystack/pull/255.patch")) (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "ayansen") (id . 4974508) (avatar_url . "https://avatars2.githubusercontent.com/u/4974508?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ayansen") (html_url . "https://github.com/ayansen") (followers_url . "https://api.github.com/users/ayansen/followers") (following_url . "https://api.github.com/users/ayansen/following{/other_user}") (gists_url . "https://api.github.com/users/ayansen/gists{/gist_id}") (starred_url . "https://api.github.com/users/ayansen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ayansen/subscriptions") (organizations_url . "https://api.github.com/users/ayansen/orgs") (repos_url . "https://api.github.com/users/ayansen/repos") (events_url . "https://api.github.com/users/ayansen/events{/privacy}") (received_events_url . "https://api.github.com/users/ayansen/received_events") (type . "User") (site_admin)))))) ((login . "ayansen") (id . 4974508) (avatar_url . "https://avatars2.githubusercontent.com/u/4974508?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ayansen") (html_url . "https://github.com/ayansen") (followers_url . "https://api.github.com/users/ayansen/followers") (following_url . "https://api.github.com/users/ayansen/following{/other_user}") (gists_url . "https://api.github.com/users/ayansen/gists{/gist_id}") (starred_url . "https://api.github.com/users/ayansen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ayansen/subscriptions") (organizations_url . "https://api.github.com/users/ayansen/orgs") (repos_url . "https://api.github.com/users/ayansen/repos") (events_url . "https://api.github.com/users/ayansen/events{/privacy}") (received_events_url . "https://api.github.com/users/ayansen/received_events") (type . "User") (site_admin) (name . "Ayan Sen") (company . "Expedia") (blog . "") (location . "Delhi-NCR, India") (email . "ayansen89@gmail.com") (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 1) (following . 4) (created_at . "2013-07-09T15:19:59Z") (updated_at . "2018-02-21T13:57:15Z")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9))) :head "personal:master"))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments") (created_at . "2017-07-31T08:23:56Z") (updated_at . "2018-02-18T03:44:35Z") (pushed_at . "2018-02-28T17:04:39Z") (git_url . "git://github.com/ExpediaDotCom/haystack.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack.git") (clone_url . "https://github.com/ExpediaDotCom/haystack.git") (svn_url . "https://github.com/ExpediaDotCom/haystack") (homepage) (size . 6476) (stargazers_count . 7) (watchers_count . 7) (language . "HCL") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 2) (mirror_url) (archived) (open_issues_count . 1) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 2) (open_issues . 1) (watchers . 7) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 2) (subscribers_count . 9))) "master"))) ((state . "success") (statuses ((url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/cf7ce17218e2d1734c619bfff6d48b9c41640bc5") (id . 4654716002) (state . "success") (description . "The Travis CI build passed") (target_url . "https://travis-ci.org/ExpediaDotCom/haystack/builds/347310725?utm_source=github_status&utm_medium=notification") (context . "continuous-integration/travis-ci/push") (created_at . "2018-02-28T15:09:29Z") (updated_at . "2018-02-28T15:09:29Z"))) (sha . "cf7ce17218e2d1734c619bfff6d48b9c41640bc5") (total_count . 1) (repository (id . 98865832) (name . "haystack") (full_name . "ExpediaDotCom/haystack") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack/deployments")) (commit_url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits/cf7ce17218e2d1734c619bfff6d48b9c41640bc5") (url . "https://api.github.com/repos/ExpediaDotCom/haystack/commits/cf7ce17218e2d1734c619bfff6d48b9c41640bc5/status")) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "ewe-haystack-example-dropwizard"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments") (created_at . "2018-03-01T16:14:31Z") (updated_at . "2018-03-01T16:15:52Z") (pushed_at . "2018-03-01T16:16:08Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/ewe-haystack-example-dropwizard.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (homepage) (size . 28) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 2)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments") (created_at . "2018-03-01T16:14:31Z") (updated_at . "2018-03-01T16:15:52Z") (pushed_at . "2018-03-01T16:16:08Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/ewe-haystack-example-dropwizard.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (homepage) (size . 28) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 2))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments") (created_at . "2018-03-01T16:14:31Z") (updated_at . "2018-03-01T16:15:52Z") (pushed_at . "2018-03-01T16:16:08Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/ewe-haystack-example-dropwizard.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (homepage) (size . 28) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 2))) "master"))) ((state . "pending") (statuses) (sha . "20cf106d140670c236e99e1845f2a4d068ed0c8e") (total_count . 0) (repository (id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits/20cf106d140670c236e99e1845f2a4d068ed0c8e") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits/20cf106d140670c236e99e1845f2a4d068ed0c8e/status")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments") (created_at . "2018-03-01T16:14:31Z") (updated_at . "2018-03-01T16:15:52Z") (pushed_at . "2018-03-01T16:16:08Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/ewe-haystack-example-dropwizard.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (homepage) (size . 28) (stargazers_count . 0) (watchers_count . 0) (language . "Java") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 0) (forks . 0) (open_issues . 0) (watchers . 0) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 2))) "haystack-client"))) ((state . "pending") (statuses) (sha . "d25b3f3eda79b8bdc31025b7f4cb0fdc5585248d") (total_count . 0) (repository (id . 35725) (name . "ewe-haystack-example-dropwizard") (full_name . "EWE/ewe-haystack-example-dropwizard") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/ewe-haystack-example-dropwizard") (description . "This is a repository for the Primer application : ewe-haystack-example-dropwizard") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits/d25b3f3eda79b8bdc31025b7f4cb0fdc5585248d") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/ewe-haystack-example-dropwizard/commits/d25b3f3eda79b8bdc31025b7f4cb0fdc5585248d/status")) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-pulls (quote ((id . 5848097) (name . "exp-devops") (full_name . "ExpediaInc/exp-devops") (owner (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (private . t) (html_url . "https://github.com/ExpediaInc/exp-devops") (description . "Chef cookbooks, Splunk apps and Tools used for devops") (fork) (url . "https://api.github.com/repos/ExpediaInc/exp-devops") (forks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/forks") (keys_url . "https://api.github.com/repos/ExpediaInc/exp-devops/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaInc/exp-devops/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaInc/exp-devops/teams") (hooks_url . "https://api.github.com/repos/ExpediaInc/exp-devops/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaInc/exp-devops/events") (assignees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaInc/exp-devops/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/tags") (blobs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaInc/exp-devops/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaInc/exp-devops/languages") (stargazers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaInc/exp-devops/subscription") (commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaInc/exp-devops/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaInc/exp-devops/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaInc/exp-devops/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaInc/exp-devops/merges") (archive_url . "https://api.github.com/repos/ExpediaInc/exp-devops/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaInc/exp-devops/downloads") (issues_url . "https://api.github.com/repos/ExpediaInc/exp-devops/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaInc/exp-devops/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaInc/exp-devops/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaInc/exp-devops/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaInc/exp-devops/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaInc/exp-devops/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaInc/exp-devops/deployments") (created_at . "2012-09-17T22:11:37Z") (updated_at . "2018-01-19T14:03:14Z") (pushed_at . "2018-01-22T19:48:34Z") (git_url . "git://github.com/ExpediaInc/exp-devops.git") (ssh_url . "git@github.com:ExpediaInc/exp-devops.git") (clone_url . "https://github.com/ExpediaInc/exp-devops.git") (svn_url . "https://github.com/ExpediaInc/exp-devops") (homepage) (size . 742451) (stargazers_count . 31) (watchers_count . 31) (language . "Ruby") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 95) (mirror_url) (archived) (open_issues_count . 315) (license) (forks . 95) (open_issues . 315) (watchers . 31) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaInc") (id . 1225964) (avatar_url . "https://avatars2.githubusercontent.com/u/1225964?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaInc") (html_url . "https://github.com/ExpediaInc") (followers_url . "https://api.github.com/users/ExpediaInc/followers") (following_url . "https://api.github.com/users/ExpediaInc/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaInc/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaInc/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaInc/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaInc/orgs") (repos_url . "https://api.github.com/users/ExpediaInc/repos") (events_url . "https://api.github.com/users/ExpediaInc/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaInc/received_events") (type . "Organization") (site_admin)) (network_count . 95) (subscribers_count . 542))) :head "personal:haystack-agent-cleanup"))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "haystack"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments") (created_at . "2016-03-14T12:27:48Z") (updated_at . "2017-09-06T05:36:30Z") (pushed_at . "2017-11-11T18:34:59Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/haystack.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/haystack.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/haystack.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (homepage) (size . 928) (stargazers_count . 5) (watchers_count . 5) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 2) (forks . 0) (open_issues . 2) (watchers . 5) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 231)) (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments") (created_at . "2016-03-14T12:27:48Z") (updated_at . "2017-09-06T05:36:30Z") (pushed_at . "2017-11-11T18:34:59Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/haystack.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/haystack.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/haystack.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (homepage) (size . 928) (stargazers_count . 5) (watchers_count . 5) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 2) (forks . 0) (open_issues . 2) (watchers . 5) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 231))) "es5"))) ((state . "pending") (statuses) (sha . "7af62ffe3e9b698594f1f87f3fe8795c1a75393a") (total_count . 0) (repository (id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments")) (commit_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits/7af62ffe3e9b698594f1f87f3fe8795c1a75393a") (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits/7af62ffe3e9b698594f1f87f3fe8795c1a75393a/status")) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments") (created_at . "2016-03-14T12:27:48Z") (updated_at . "2017-09-06T05:36:30Z") (pushed_at . "2017-11-11T18:34:59Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/haystack.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/haystack.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/haystack.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (homepage) (size . 928) (stargazers_count . 5) (watchers_count . 5) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 2) (forks . 0) (open_issues . 2) (watchers . 5) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 231))))))) (((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/54") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/54/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/54/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/54/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/54") (id . 398609) (number . 54) (title . "Update haystack_template.json") (user (login . "asaggarwal") (id . 145) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/145?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal") (html_url . "https://ewegithub.sb.karmalab.net/asaggarwal") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ashish Aggarwal (asaggarwal),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-11-01T17:51:41Z") (updated_at . "2017-11-01T17:51:41Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls/54") (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/54") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/54.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/54.patch")) (body . "")) ((url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/52") (repository_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/52/labels{/name}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/52/comments") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/52/events") (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/52") (id . 387612) (number . 52) (title . "update es tempate add dynamic fields") (user (login . "aysen") (id . 148) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/148?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen") (html_url . "https://ewegithub.sb.karmalab.net/aysen") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ayan Sen (aysen),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")) (labels) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-17T08:53:13Z") (updated_at . "2017-10-17T08:53:13Z") (closed_at) (pull_request (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls/52") (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/52") (diff_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/52.diff") (patch_url . "https://ewegithub.sb.karmalab.net/EWE/haystack/pull/52.patch")) (body . ""))) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments") (created_at . "2016-03-14T12:27:48Z") (updated_at . "2017-09-06T05:36:30Z") (pushed_at . "2017-11-11T18:34:59Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/haystack.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/haystack.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/haystack.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (homepage) (size . 928) (stargazers_count . 5) (watchers_count . 5) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 2) (forks . 0) (open_issues . 2) (watchers . 5) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 231))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 7336) (name . "haystack") (full_name . "EWE/haystack") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (description . "") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/haystack/deployments") (created_at . "2016-03-14T12:27:48Z") (updated_at . "2017-09-06T05:36:30Z") (pushed_at . "2017-11-11T18:34:59Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/haystack.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/haystack.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/haystack.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/haystack") (homepage) (size . 928) (stargazers_count . 5) (watchers_count . 5) (language) (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (open_issues_count . 2) (forks . 0) (open_issues . 2) (watchers . 5) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 231)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "asaggarwal") (id . 145) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/145?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal") (html_url . "https://ewegithub.sb.karmalab.net/asaggarwal") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ashish Aggarwal (asaggarwal),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "asaggarwal") (id . 145) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/145?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal") (html_url . "https://ewegithub.sb.karmalab.net/asaggarwal") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/asaggarwal/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ashish Aggarwal (asaggarwal),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Ashish") (company) (blog . "") (location) (email . "asaggarwal@expedia.com") (hireable) (bio) (public_repos . 6) (public_gists . 0) (followers . 3) (following . 0) (created_at . "2013-07-12T07:08:52Z") (updated_at . "2018-01-22T12:31:30Z") (suspended_at)) (nil :user-demographics (magithub-request (ghubp-get-users-username (quote ((login . "aysen") (id . 148) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/148?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen") (html_url . "https://ewegithub.sb.karmalab.net/aysen") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ayan Sen (aysen),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com")))))) ((login . "aysen") (id . 148) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/148?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen") (html_url . "https://ewegithub.sb.karmalab.net/aysen") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/aysen/received_events") (type . "User") (site_admin) (ldap_dn . "CN=Ayan Sen (aysen),OU=User Policy 0,OU=All Users,DC=SEA,DC=CORP,DC=EXPECN,DC=com") (name . "Ayan Sen") (company) (blog . "") (location) (email . "aysen@expedia.com") (hireable) (bio) (public_repos . 2) (public_gists . 0) (followers . 0) (following . 1) (created_at . "2013-07-12T08:12:56Z") (updated_at . "2018-01-12T11:07:30Z") (suspended_at)) (nil :notification (magithub-request (ghubp-unpaginate (ghubp-get-notifications)))) nil (((auth . magithub)) :issues (magithub-request (ghubp-get-issues))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "EWE")) (name . "platform"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 57) (name . "platform") (full_name . "EWE/platform") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform") (description . "EWE Platform Components") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/deployments") (created_at . "2013-05-23T18:24:43Z") (updated_at . "2018-03-02T14:43:33Z") (pushed_at . "2018-03-09T21:54:10Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform") (homepage) (size . 11074) (stargazers_count . 9) (watchers_count . 9) (language) (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 22) (mirror_url) (open_issues_count . 0) (forks . 22) (open_issues . 0) (watchers . 9) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 22) (subscribers_count . 337)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 57) (name . "platform") (full_name . "EWE/platform") (owner (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://ewegithub.sb.karmalab.net/EWE/platform") (description . "EWE Platform Components") (fork) (url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform") (forks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/forks") (keys_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/keys{/key_id}") (collaborators_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/collaborators{/collaborator}") (teams_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/teams") (hooks_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/hooks") (issue_events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues/events{/number}") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/events") (assignees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/assignees{/user}") (branches_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/branches{/branch}") (tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/tags") (blobs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/blobs{/sha}") (git_tags_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/tags{/sha}") (git_refs_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/refs{/sha}") (trees_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/trees{/sha}") (statuses_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/statuses/{sha}") (languages_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/languages") (stargazers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/stargazers") (contributors_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/contributors") (subscribers_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/subscribers") (subscription_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/subscription") (commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/commits{/sha}") (git_commits_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/git/commits{/sha}") (comments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/comments{/number}") (issue_comment_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues/comments{/number}") (contents_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/contents/{+path}") (compare_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/compare/{base}...{head}") (merges_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/merges") (archive_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/{archive_format}{/ref}") (downloads_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/downloads") (issues_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/issues{/number}") (pulls_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/pulls{/number}") (milestones_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/milestones{/number}") (notifications_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/notifications{?since,all,participating}") (labels_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/labels{/name}") (releases_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/releases{/id}") (deployments_url . "https://ewegithub.sb.karmalab.net/api/v3/repos/EWE/platform/deployments") (created_at . "2013-05-23T18:24:43Z") (updated_at . "2018-03-02T14:43:33Z") (pushed_at . "2018-03-09T21:54:10Z") (git_url . "git://ewegithub.sb.karmalab.net/EWE/platform.git") (ssh_url . "git@ewegithub.sb.karmalab.net:EWE/platform.git") (clone_url . "https://ewegithub.sb.karmalab.net/EWE/platform.git") (svn_url . "https://ewegithub.sb.karmalab.net/EWE/platform") (homepage) (size . 11074) (stargazers_count . 9) (watchers_count . 9) (language) (has_issues) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages . t) (forks_count . 22) (mirror_url) (open_issues_count . 0) (forks . 22) (open_issues . 0) (watchers . 9) (default_branch . "master") (permissions (admin) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "EWE") (id . 7) (avatar_url . "https://ewegithub.sb.karmalab.net/avatars/u/7?") (gravatar_id . "") (url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE") (html_url . "https://ewegithub.sb.karmalab.net/EWE") (followers_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/followers") (following_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/following{/other_user}") (gists_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/gists{/gist_id}") (starred_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/starred{/owner}{/repo}") (subscriptions_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/subscriptions") (organizations_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/orgs") (repos_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/repos") (events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/events{/privacy}") (received_events_url . "https://ewegithub.sb.karmalab.net/api/v3/users/EWE/received_events") (type . "Organization") (site_admin)) (network_count . 22) (subscribers_count . 337))))))) nil (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "ExpediaDotCom")) (name . "haystack-trends"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 100239899) (name . "haystack-trends") (full_name . "ExpediaDotCom/haystack-trends") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-trends") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/deployments") (created_at . "2017-08-14T07:22:20Z") (updated_at . "2018-03-13T15:56:22Z") (pushed_at . "2018-03-13T15:56:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-trends.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-trends.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-trends.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-trends") (homepage) (size . 604) (stargazers_count . 2) (watchers_count . 2) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 0) (open_issues . 0) (watchers . 2) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 8)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 100239899) (name . "haystack-trends") (full_name . "ExpediaDotCom/haystack-trends") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-trends") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/deployments") (created_at . "2017-08-14T07:22:20Z") (updated_at . "2018-03-13T15:56:22Z") (pushed_at . "2018-03-13T15:56:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-trends.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-trends.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-trends.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-trends") (homepage) (size . 604) (stargazers_count . 2) (watchers_count . 2) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 0) (open_issues . 0) (watchers . 2) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 8))))))) nil (nil :ci-status (magithub-request (ghubp-get-repos-owner-repo-commits-ref-status (quote ((id . 100239899) (name . "haystack-trends") (full_name . "ExpediaDotCom/haystack-trends") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-trends") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/deployments") (created_at . "2017-08-14T07:22:20Z") (updated_at . "2018-03-13T15:56:22Z") (pushed_at . "2018-03-13T15:56:20Z") (git_url . "git://github.com/ExpediaDotCom/haystack-trends.git") (ssh_url . "git@github.com:ExpediaDotCom/haystack-trends.git") (clone_url . "https://github.com/ExpediaDotCom/haystack-trends.git") (svn_url . "https://github.com/ExpediaDotCom/haystack-trends") (homepage) (size . 604) (stargazers_count . 2) (watchers_count . 2) (language . "Scala") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 0) (mirror_url) (archived) (open_issues_count . 0) (license (key . "apache-2.0") (name . "Apache License 2.0") (spdx_id . "Apache-2.0") (url . "https://api.github.com/licenses/apache-2.0")) (forks . 0) (open_issues . 0) (watchers . 2) (default_branch . "master") (permissions (admin . t) (push . t) (pull . t)) (allow_squash_merge . t) (allow_merge_commit . t) (allow_rebase_merge . t) (organization (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (network_count . 0) (subscribers_count . 8))) "codecov"))) ((state . "pending") (statuses) (sha . "62f53ddb0b22d230dfc0fca694273ec025f335fb") (total_count . 0) (repository (id . 100239899) (name . "haystack-trends") (full_name . "ExpediaDotCom/haystack-trends") (owner (login . "ExpediaDotCom") (id . 8900718) (avatar_url . "https://avatars2.githubusercontent.com/u/8900718?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ExpediaDotCom") (html_url . "https://github.com/ExpediaDotCom") (followers_url . "https://api.github.com/users/ExpediaDotCom/followers") (following_url . "https://api.github.com/users/ExpediaDotCom/following{/other_user}") (gists_url . "https://api.github.com/users/ExpediaDotCom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ExpediaDotCom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ExpediaDotCom/subscriptions") (organizations_url . "https://api.github.com/users/ExpediaDotCom/orgs") (repos_url . "https://api.github.com/users/ExpediaDotCom/repos") (events_url . "https://api.github.com/users/ExpediaDotCom/events{/privacy}") (received_events_url . "https://api.github.com/users/ExpediaDotCom/received_events") (type . "Organization") (site_admin)) (private) (html_url . "https://github.com/ExpediaDotCom/haystack-trends") (description) (fork) (url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends") (forks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/forks") (keys_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/teams") (hooks_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/hooks") (issue_events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/events{/number}") (events_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/events") (assignees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/assignees{/user}") (branches_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/branches{/branch}") (tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/tags") (blobs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/refs{/sha}") (trees_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/statuses/{sha}") (languages_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/languages") (stargazers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/stargazers") (contributors_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contributors") (subscribers_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscribers") (subscription_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/subscription") (commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits{/sha}") (git_commits_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/git/commits{/sha}") (comments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/comments{/number}") (issue_comment_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues/comments{/number}") (contents_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/contents/{+path}") (compare_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/merges") (archive_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/downloads") (issues_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/issues{/number}") (pulls_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/pulls{/number}") (milestones_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/milestones{/number}") (notifications_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/labels{/name}") (releases_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/releases{/id}") (deployments_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/deployments")) (commit_url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits/62f53ddb0b22d230dfc0fca694273ec025f335fb") (url . "https://api.github.com/repos/ExpediaDotCom/haystack-trends/commits/62f53ddb0b22d230dfc0fca694273ec025f335fb/status")) (nil :repo-demographics (condition-case e (or (magithub-request (ghubp-get-repos-owner-repo (quote ((owner (login . "vermiculus")) (name . "magithub"))))) (and (not (magithub--api-available-p)) sparse-repo)) (ghub-404 nil))) ((id . 68352724) (name . "magithub") (full_name . "vermiculus/magithub") (owner (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/vermiculus/magithub") (description . "Magit-based interfaces to GitHub") (fork) (url . "https://api.github.com/repos/vermiculus/magithub") (forks_url . "https://api.github.com/repos/vermiculus/magithub/forks") (keys_url . "https://api.github.com/repos/vermiculus/magithub/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/vermiculus/magithub/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/vermiculus/magithub/teams") (hooks_url . "https://api.github.com/repos/vermiculus/magithub/hooks") (issue_events_url . "https://api.github.com/repos/vermiculus/magithub/issues/events{/number}") (events_url . "https://api.github.com/repos/vermiculus/magithub/events") (assignees_url . "https://api.github.com/repos/vermiculus/magithub/assignees{/user}") (branches_url . "https://api.github.com/repos/vermiculus/magithub/branches{/branch}") (tags_url . "https://api.github.com/repos/vermiculus/magithub/tags") (blobs_url . "https://api.github.com/repos/vermiculus/magithub/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/vermiculus/magithub/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/vermiculus/magithub/git/refs{/sha}") (trees_url . "https://api.github.com/repos/vermiculus/magithub/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/vermiculus/magithub/statuses/{sha}") (languages_url . "https://api.github.com/repos/vermiculus/magithub/languages") (stargazers_url . "https://api.github.com/repos/vermiculus/magithub/stargazers") (contributors_url . "https://api.github.com/repos/vermiculus/magithub/contributors") (subscribers_url . "https://api.github.com/repos/vermiculus/magithub/subscribers") (subscription_url . "https://api.github.com/repos/vermiculus/magithub/subscription") (commits_url . "https://api.github.com/repos/vermiculus/magithub/commits{/sha}") (git_commits_url . "https://api.github.com/repos/vermiculus/magithub/git/commits{/sha}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/comments{/number}") (issue_comment_url . "https://api.github.com/repos/vermiculus/magithub/issues/comments{/number}") (contents_url . "https://api.github.com/repos/vermiculus/magithub/contents/{+path}") (compare_url . "https://api.github.com/repos/vermiculus/magithub/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/vermiculus/magithub/merges") (archive_url . "https://api.github.com/repos/vermiculus/magithub/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/vermiculus/magithub/downloads") (issues_url . "https://api.github.com/repos/vermiculus/magithub/issues{/number}") (pulls_url . "https://api.github.com/repos/vermiculus/magithub/pulls{/number}") (milestones_url . "https://api.github.com/repos/vermiculus/magithub/milestones{/number}") (notifications_url . "https://api.github.com/repos/vermiculus/magithub/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/vermiculus/magithub/labels{/name}") (releases_url . "https://api.github.com/repos/vermiculus/magithub/releases{/id}") (deployments_url . "https://api.github.com/repos/vermiculus/magithub/deployments") (created_at . "2016-09-16T04:32:34Z") (updated_at . "2018-03-12T01:16:24Z") (pushed_at . "2018-03-07T12:49:29Z") (git_url . "git://github.com/vermiculus/magithub.git") (ssh_url . "git@github.com:vermiculus/magithub.git") (clone_url . "https://github.com/vermiculus/magithub.git") (svn_url . "https://github.com/vermiculus/magithub") (homepage . "") (size . 2423) (stargazers_count . 375) (watchers_count . 375) (language . "Emacs Lisp") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 46) (mirror_url) (archived) (open_issues_count . 61) (license (key . "gpl-3.0") (name . "GNU General Public License v3.0") (spdx_id . "GPL-3.0") (url . "https://api.github.com/licenses/gpl-3.0")) (forks . 46) (open_issues . 61) (watchers . 375) (default_branch . "master") (permissions (admin) (push) (pull . t)) (network_count . 46) (subscribers_count . 15)) (nil :issues (magithub-request (ghubp-unpaginate (ghubp-get-repos-owner-repo-issues (quote ((id . 68352724) (name . "magithub") (full_name . "vermiculus/magithub") (owner (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (private) (html_url . "https://github.com/vermiculus/magithub") (description . "Magit-based interfaces to GitHub") (fork) (url . "https://api.github.com/repos/vermiculus/magithub") (forks_url . "https://api.github.com/repos/vermiculus/magithub/forks") (keys_url . "https://api.github.com/repos/vermiculus/magithub/keys{/key_id}") (collaborators_url . "https://api.github.com/repos/vermiculus/magithub/collaborators{/collaborator}") (teams_url . "https://api.github.com/repos/vermiculus/magithub/teams") (hooks_url . "https://api.github.com/repos/vermiculus/magithub/hooks") (issue_events_url . "https://api.github.com/repos/vermiculus/magithub/issues/events{/number}") (events_url . "https://api.github.com/repos/vermiculus/magithub/events") (assignees_url . "https://api.github.com/repos/vermiculus/magithub/assignees{/user}") (branches_url . "https://api.github.com/repos/vermiculus/magithub/branches{/branch}") (tags_url . "https://api.github.com/repos/vermiculus/magithub/tags") (blobs_url . "https://api.github.com/repos/vermiculus/magithub/git/blobs{/sha}") (git_tags_url . "https://api.github.com/repos/vermiculus/magithub/git/tags{/sha}") (git_refs_url . "https://api.github.com/repos/vermiculus/magithub/git/refs{/sha}") (trees_url . "https://api.github.com/repos/vermiculus/magithub/git/trees{/sha}") (statuses_url . "https://api.github.com/repos/vermiculus/magithub/statuses/{sha}") (languages_url . "https://api.github.com/repos/vermiculus/magithub/languages") (stargazers_url . "https://api.github.com/repos/vermiculus/magithub/stargazers") (contributors_url . "https://api.github.com/repos/vermiculus/magithub/contributors") (subscribers_url . "https://api.github.com/repos/vermiculus/magithub/subscribers") (subscription_url . "https://api.github.com/repos/vermiculus/magithub/subscription") (commits_url . "https://api.github.com/repos/vermiculus/magithub/commits{/sha}") (git_commits_url . "https://api.github.com/repos/vermiculus/magithub/git/commits{/sha}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/comments{/number}") (issue_comment_url . "https://api.github.com/repos/vermiculus/magithub/issues/comments{/number}") (contents_url . "https://api.github.com/repos/vermiculus/magithub/contents/{+path}") (compare_url . "https://api.github.com/repos/vermiculus/magithub/compare/{base}...{head}") (merges_url . "https://api.github.com/repos/vermiculus/magithub/merges") (archive_url . "https://api.github.com/repos/vermiculus/magithub/{archive_format}{/ref}") (downloads_url . "https://api.github.com/repos/vermiculus/magithub/downloads") (issues_url . "https://api.github.com/repos/vermiculus/magithub/issues{/number}") (pulls_url . "https://api.github.com/repos/vermiculus/magithub/pulls{/number}") (milestones_url . "https://api.github.com/repos/vermiculus/magithub/milestones{/number}") (notifications_url . "https://api.github.com/repos/vermiculus/magithub/notifications{?since,all,participating}") (labels_url . "https://api.github.com/repos/vermiculus/magithub/labels{/name}") (releases_url . "https://api.github.com/repos/vermiculus/magithub/releases{/id}") (deployments_url . "https://api.github.com/repos/vermiculus/magithub/deployments") (created_at . "2016-09-16T04:32:34Z") (updated_at . "2018-03-12T01:16:24Z") (pushed_at . "2018-03-07T12:49:29Z") (git_url . "git://github.com/vermiculus/magithub.git") (ssh_url . "git@github.com:vermiculus/magithub.git") (clone_url . "https://github.com/vermiculus/magithub.git") (svn_url . "https://github.com/vermiculus/magithub") (homepage . "") (size . 2423) (stargazers_count . 375) (watchers_count . 375) (language . "Emacs Lisp") (has_issues . t) (has_projects . t) (has_downloads . t) (has_wiki . t) (has_pages) (forks_count . 46) (mirror_url) (archived) (open_issues_count . 61) (license (key . "gpl-3.0") (name . "GNU General Public License v3.0") (spdx_id . "GPL-3.0") (url . "https://api.github.com/licenses/gpl-3.0")) (forks . 46) (open_issues . 61) (watchers . 375) (default_branch . "master") (permissions (admin) (push) (pull . t)) (network_count . 46) (subscribers_count . 15))))))) (((url . "https://api.github.com/repos/vermiculus/magithub/issues/298") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/298/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/298/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/298/events") (html_url . "https://github.com/vermiculus/magithub/issues/298") (id . 303123489) (number . 298) (title . "Offline mode header still mentions old key binding") (user (login . "tarsius") (id . 25046) (avatar_url . "https://avatars2.githubusercontent.com/u/25046?v=4") (gravatar_id . "") (url . "https://api.github.com/users/tarsius") (html_url . "https://github.com/tarsius") (followers_url . "https://api.github.com/users/tarsius/followers") (following_url . "https://api.github.com/users/tarsius/following{/other_user}") (gists_url . "https://api.github.com/users/tarsius/gists{/gist_id}") (starred_url . "https://api.github.com/users/tarsius/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/tarsius/subscriptions") (organizations_url . "https://api.github.com/users/tarsius/orgs") (repos_url . "https://api.github.com/users/tarsius/repos") (events_url . "https://api.github.com/users/tarsius/events{/privacy}") (received_events_url . "https://api.github.com/users/tarsius/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t)) ((id . 847877340) (url . "https://api.github.com/repos/vermiculus/magithub/labels/documentation") (name . "documentation") (color . "5319e7") (default)) ((id . 811244213) (url . "https://api.github.com/repos/vermiculus/magithub/labels/easy") (name . "easy") (color . "9de045") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-03-07T14:39:08Z") (updated_at . "2018-03-07T15:36:21Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "```
OFFLINE; use C-p g to refresh GitHub content or H O to go back online
```

`H O` is no more, right?")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/297") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/297/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/297/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/297/events") (html_url . "https://github.com/vermiculus/magithub/issues/297") (id . 302732874) (number . 297) (title . "Address code review comments") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 727559842) (url . "https://api.github.com/repos/vermiculus/magithub/labels/usability") (name . "usability") (color . "ffeabf") (default))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2018-03-06T14:55:39Z") (updated_at . "2018-03-06T14:55:39Z") (closed_at) (author_association . "OWNER") (body . "https://github.com/vermiculus/magithub/commit/8d935103206b11ca87254655bfddf85f996a5595")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/288") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/288/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/288/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/288/events") (html_url . "https://github.com/vermiculus/magithub/issues/288") (id . 298852683) (number . 288) (title . "feature request: show base and head branches for PR") (user (login . "agzam") (id . 1091022) (avatar_url . "https://avatars1.githubusercontent.com/u/1091022?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agzam") (html_url . "https://github.com/agzam") (followers_url . "https://api.github.com/users/agzam/followers") (following_url . "https://api.github.com/users/agzam/following{/other_user}") (gists_url . "https://api.github.com/users/agzam/gists{/gist_id}") (starred_url . "https://api.github.com/users/agzam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agzam/subscriptions") (organizations_url . "https://api.github.com/users/agzam/orgs") (repos_url . "https://api.github.com/users/agzam/repos") (events_url . "https://api.github.com/users/agzam/events{/privacy}") (received_events_url . "https://api.github.com/users/agzam/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-02-21T06:08:08Z") (updated_at . "2018-02-21T12:58:42Z") (closed_at) (author_association . "NONE") (body . "Would be awesome to see PR's branches, if possible in both PR buffer and magit-status buffer. Thank you!
Maybe then later it would be even possible to make it so one could checkout the relevant branch right from PR.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/286") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/286/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/286/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/286/events") (html_url . "https://github.com/vermiculus/magithub/issues/286") (id . 298109320) (number . 286) (title . "Void magithub-completion-enable on commit") (user (login . "humitos") (id . 244656) (avatar_url . "https://avatars1.githubusercontent.com/u/244656?v=4") (gravatar_id . "") (url . "https://api.github.com/users/humitos") (html_url . "https://github.com/humitos") (followers_url . "https://api.github.com/users/humitos/followers") (following_url . "https://api.github.com/users/humitos/following{/other_user}") (gists_url . "https://api.github.com/users/humitos/gists{/gist_id}") (starred_url . "https://api.github.com/users/humitos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/humitos/subscriptions") (organizations_url . "https://api.github.com/users/humitos/orgs") (repos_url . "https://api.github.com/users/humitos/repos") (events_url . "https://api.github.com/users/humitos/events{/privacy}") (received_events_url . "https://api.github.com/users/humitos/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t)) ((id . 811244213) (url . "https://api.github.com/repos/vermiculus/magithub/labels/easy") (name . "easy") (color . "9de045") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-02-18T19:09:58Z") (updated_at . "2018-02-21T13:12:52Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Hi! Thanks!

Thanks again!

I'm using `magithub` from `master` branch. Yesterday I found that I'm not able to make a commit because when I `c c` from a magit status buffer an error is reported.

Log error from `magit-process`:

```
Waiting for Emacs...
*ERROR*: Symbol’s function definition is void: magithub-completion-enable
error: There was a problem with the editor '/usr/bin/emacsclient --socket-name=/tmp/emacs1000/server'.
```

I don't know what's happening and I didn't find anything wrong in my setup (I've using magithub for some months now without issues).

I don't have experience with `toggle-debug-on-error` -nothing was shown. So, let me know if I need to do something extra or that log is enough for now.

My solution for the moment was to disable magithub :(")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/284") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/284/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/284/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/284/events") (html_url . "https://github.com/vermiculus/magithub/issues/284") (id . 297947337) (number . 284) (title . "support org-links") (user (login . "agzam") (id . 1091022) (avatar_url . "https://avatars1.githubusercontent.com/u/1091022?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agzam") (html_url . "https://github.com/agzam") (followers_url . "https://api.github.com/users/agzam/followers") (following_url . "https://api.github.com/users/agzam/following{/other_user}") (gists_url . "https://api.github.com/users/agzam/gists{/gist_id}") (starred_url . "https://api.github.com/users/agzam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agzam/subscriptions") (organizations_url . "https://api.github.com/users/agzam/orgs") (repos_url . "https://api.github.com/users/agzam/repos") (events_url . "https://api.github.com/users/agzam/events{/privacy}") (received_events_url . "https://api.github.com/users/agzam/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2018-02-16T23:06:18Z") (updated_at . "2018-02-21T12:59:03Z") (closed_at) (author_association . "NONE") (body . "Would be nice to be able to `org-store-link` to a PR, issue, comment")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/280") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/280/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/280/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/280/events") (html_url . "https://github.com/vermiculus/magithub/issues/280") (id . 295589058) (number . 280) (title . "Browse to webpage matching file in current buffer") (user (login . "aspiers") (id . 100738) (avatar_url . "https://avatars0.githubusercontent.com/u/100738?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aspiers") (html_url . "https://github.com/aspiers") (followers_url . "https://api.github.com/users/aspiers/followers") (following_url . "https://api.github.com/users/aspiers/following{/other_user}") (gists_url . "https://api.github.com/users/aspiers/gists{/gist_id}") (starred_url . "https://api.github.com/users/aspiers/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aspiers/subscriptions") (organizations_url . "https://api.github.com/users/aspiers/orgs") (repos_url . "https://api.github.com/users/aspiers/repos") (events_url . "https://api.github.com/users/aspiers/events{/privacy}") (received_events_url . "https://api.github.com/users/aspiers/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2018-02-08T16:57:00Z") (updated_at . "2018-02-20T16:02:13Z") (closed_at) (author_association . "NONE") (body . "If I have a file from a GitHub repository already open in the current buffer, it's often useful to be able to grab a hyperlink to the equivalent view of that file in GitHub's web UI, e.g. in order to share it with someone else.  So it would be great if `magithub-browse-thing` or some other similarly named function was available to open up that page in the browser.  Forgive me if this is already possible but I looked and can't find it.

Of course, if the locally checked out version corresponds to some upstream branch then it would make sense for the URL being opened in the browser to point to that upstream branch.  Obviously here there is room for ambiguity, because the upstream branch could be calculated from the remote currently set, or the pushRemote currently set.  I'd suggest that pushRemote should take precedence over normal remote, if it's set.

This seems somewhat related to, but distinct from, #215 and #173.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/279") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/279/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/279/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/279/events") (html_url . "https://github.com/vermiculus/magithub/issues/279") (id . 295481211) (number . 279) (title . "Set default repo for cloning if browse-url-url-at-point/lm-homepage looks like github repo URL") (user (login . "a13") (id . 251267) (avatar_url . "https://avatars3.githubusercontent.com/u/251267?v=4") (gravatar_id . "") (url . "https://api.github.com/users/a13") (html_url . "https://github.com/a13") (followers_url . "https://api.github.com/users/a13/followers") (following_url . "https://api.github.com/users/a13/following{/other_user}") (gists_url . "https://api.github.com/users/a13/gists{/gist_id}") (starred_url . "https://api.github.com/users/a13/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/a13/subscriptions") (organizations_url . "https://api.github.com/users/a13/orgs") (repos_url . "https://api.github.com/users/a13/repos") (events_url . "https://api.github.com/users/a13/events{/privacy}") (received_events_url . "https://api.github.com/users/a13/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-02-08T11:42:59Z") (updated_at . "2018-02-08T13:50:28Z") (closed_at) (author_association . "NONE") (body . "It would be great if `magithub-clone--get-repo` looked if `(browse-url-url-at-point)` or `(lm-homepage)`
matches typical github repository url, e.g. https://github.com/vermiculus/magithub and set a default prompt to it.

Something based on:
```
(or (magithub--url->repo (browse-url-url-at-point))
    (magithub--url->repo (lm-homepage)))
```

Thanks!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/271") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/271/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/271/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/271/events") (html_url . "https://github.com/vermiculus/magithub/issues/271") (id . 294169547) (number . 271) (title . "Fetch/show commits for pull requests in status buffer") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-02-04T04:39:06Z") (updated_at . "2018-02-04T04:39:06Z") (closed_at) (author_association . "OWNER") (body . "There should probably be a keybinding to actually fetch the pull request -- hopefully Magit has a function to do the heavy lifting of getting the commits onto an appropriate remote.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/267") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/267/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/267/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/267/events") (html_url . "https://github.com/vermiculus/magithub/issues/267") (id . 294134356) (number . 267) (title . "Allow magithub-edit buffers to invoke popups upon submission") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2018-02-03T18:35:23Z") (updated_at . "2018-02-03T20:29:24Z") (closed_at) (author_association . "OWNER") (body . "From #264.

Right now, this is a little complicated.  Once a popup is invoked, control returns back to the top-level while the popup waits for user input.  As this happens (i.e., immediately when `magit-invoke-popup` returns), `magithub-edit-submit` closes the buffer and tries to get every buffer back to the way it was.

We could work around this limitation by using a special return symbol in the callback to avoid all this.  This will be...complicated.

@tarsius -- re transient.el, I don't expect you'll be changing this behavior from magit-popup into transient.el, but I'd thought I'd ask.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/264") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/264/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/264/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/264/events") (html_url . "https://github.com/vermiculus/magithub/issues/264") (id . 294076516) (number . 264) (title . "PR workflow improvement ideas") (user (login . "aaronjensen") (id . 8588) (avatar_url . "https://avatars3.githubusercontent.com/u/8588?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aaronjensen") (html_url . "https://github.com/aaronjensen") (followers_url . "https://api.github.com/users/aaronjensen/followers") (following_url . "https://api.github.com/users/aaronjensen/following{/other_user}") (gists_url . "https://api.github.com/users/aaronjensen/gists{/gist_id}") (starred_url . "https://api.github.com/users/aaronjensen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aaronjensen/subscriptions") (organizations_url . "https://api.github.com/users/aaronjensen/orgs") (repos_url . "https://api.github.com/users/aaronjensen/repos") (events_url . "https://api.github.com/users/aaronjensen/events{/privacy}") (received_events_url . "https://api.github.com/users/aaronjensen/received_events") (type . "User") (site_admin)) (labels ((id . 604594346) (url . "https://api.github.com/repos/vermiculus/magithub/labels/discussion") (name . "discussion") (color . "0052cc") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 9) (created_at . "2018-02-03T02:40:41Z") (updated_at . "2018-02-06T22:05:45Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "As I mentioned in my other PR, I've been using magit-gh-pulls to create PRs. Its workflow is pretty slim and as such, very fast and nice. Magithub appears to take the tact of asking for confirmation for everything I do. It'd be great if I could set a var skip confirmations.

The current flow is something like:

1. `@ p`
1.  Ask for remote (this is fine, but it'd be great if the choice were remembered).
1.  Ask for Head branch (this is a confusing name to me, maybe \"Your branch\" may be less confusing? It defaults to the current branch which is good.
1.  Base branch (this defaults to `HEAD` for me, which allows me to go through attempting to create a PR but it then tells me the PR already exists. It'd be great if it defaulted to the default branch on GH or if it defaulted to the last thing I chose, or if it were configurable)
1. Ask if I'm sure? (please allow this to be skipped, I can always cancel on the PR message entry if things look wrong)
1. Edit message
1. `C-c C-c`
1. Ask if I'm sure? (please allow this to be skipped, I don't think I've ever accidentally hit `C-c C-c`)
1. Ask if I want to allow owner modifications? (this is cool, though I'd prefer if I could set a default for this and maybe toggle it while on the PR message rather than being asked).

I hope that's not too many requests all in one issue 😄

Thanks!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/254") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/254/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/254/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/254/events") (html_url . "https://github.com/vermiculus/magithub/issues/254") (id . 293019687) (number . 254) (title . "Smoother workflow for creating pull requests for issues") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-31T03:31:58Z") (updated_at . "2018-01-31T04:36:05Z") (closed_at) (author_association . "OWNER") (body . "I find that I'm usually opening pull requests to fix/address issues (duh). This workflow should be smoothed out a bit.

See https://developer.github.com/v3/pulls/#alternative-input – this might be able to help.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/243") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/243/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/243/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/243/events") (html_url . "https://github.com/vermiculus/magithub/issues/243") (id . 291976009) (number . 243) (title . "Automatically replace `symbol' with `symbol` in pull request body") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-26T17:34:17Z") (updated_at . "2018-01-26T17:34:26Z") (closed_at) (author_association . "OWNER") (body . "#239 introduced behavior to copy in the commit message if only one commit is being proposed for merge.  Lisp convention is to use `` `symbol' `` for symbols, but this is not proper markdown.

A hook could be introduced for commit message washing to replace `` `symbol' `` with `` `symbol` ``.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/242") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/242/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/242/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/242/events") (html_url . "https://github.com/vermiculus/magithub/issues/242") (id . 291801348) (number . 242) (title . "New command to create an issue for current line/region") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-26T05:07:56Z") (updated_at . "2018-01-26T14:34:34Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/240") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/240/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/240/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/240/events") (html_url . "https://github.com/vermiculus/magithub/issues/240") (id . 291796277) (number . 240) (title . "Formalize/stabilize release process") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 817041384) (url . "https://api.github.com/repos/vermiculus/magithub/labels/process") (name . "process") (color . "e99695") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-01-26T04:20:55Z") (updated_at . "2018-01-26T14:35:06Z") (closed_at) (author_association . "OWNER") (body . "Right now, my approach to releases is pretty...ill-defined.  I tend to tag a release when I feel the code has both made significant strides since the last release *and* the code is relatively stable.

Anybody who purports their releases are bug-free is either dishonest to their clients or to themselves, so bug-free is not the goal.  However, a few dumb mistakes keep getting made:

- version numbers aren't updated in package headers
- documentation isn't up-to-date
- released functionality has unreleased dependencies

I'd propose a makefile target is created that will prepare the worktree for a given release.  This phony target could either take the role of a linter -- reporting errors to be fixed manually -- or maybe something more.

Related to #219.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/236") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/236/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/236/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/236/events") (html_url . "https://github.com/vermiculus/magithub/issues/236") (id . 291163018) (number . 236) (title . "Improve cloning workflow") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 5) (created_at . "2018-01-24T10:49:02Z") (updated_at . "2018-01-26T08:15:19Z") (closed_at) (author_association . "OWNER") (body . "I'm imagining a workflow that involves choosing a username from a list of 'favorites' with a match not required.  Then, the current repositories of this user are loaded for completion.

With a prefix argument, we can keep the current behavior.  This will keep the function usable for users with many repositories.  If we can parse the input as a sparse repository, we should assume it's a URL and use that; otherwise we can use the `user/repo` format like we do today.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/235") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/235/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/235/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/235/events") (html_url . "https://github.com/vermiculus/magithub/issues/235") (id . 291156975) (number . 235) (title . "Allow features to be removed") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 811244213) (url . "https://api.github.com/repos/vermiculus/magithub/labels/easy") (name . "easy") (color . "9de045") (default)) ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-24T10:29:18Z") (updated_at . "2018-01-24T10:29:18Z") (closed_at) (author_association . "OWNER") (body . "This can be done with `magit-remove-popup-key`.  I'm not sure how I missed this function before!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/234") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/234/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/234/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/234/events") (html_url . "https://github.com/vermiculus/magithub/issues/234") (id . 290710562) (number . 234) (title . "When finishing a post, the view buffer should be displayed in the same window the edit buffer used to occupy") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-23T05:05:34Z") (updated_at . "2018-01-23T05:05:34Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/232") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/232/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/232/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/232/events") (html_url . "https://github.com/vermiculus/magithub/issues/232") (id . 290703876) (number . 232) (title . "Notifications when an open repository's status changes") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-23T04:15:58Z") (updated_at . "2018-01-23T04:15:58Z") (closed_at) (author_association . "OWNER") (body . "Investigate if there's a generic notifications library in Emacs.  If there is, it would be super neat if we could periodically poll the API to see if any non-success statuses have been updated.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/231") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/231/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/231/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/231/events") (html_url . "https://github.com/vermiculus/magithub/issues/231") (id . 290702459) (number . 231) (title . "CI header in the status buffer should just use HEAD") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 447696472) (url . "https://api.github.com/repos/vermiculus/magithub/labels/performance") (name . "performance") (color . "e99695") (default))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2018-01-23T04:05:21Z") (updated_at . "2018-01-23T04:46:33Z") (closed_at) (author_association . "OWNER") (body . "There's a lot of acrobatics going on in `magithub-ci-status--get-default-ref`.  In most cases (at least all cases I can think of at the moment), it's appropriate to use `HEAD`.  This would certainly be easier.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/224") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/224/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/224/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/224/events") (html_url . "https://github.com/vermiculus/magithub/issues/224") (id . 290230618) (number . 224) (title . "Copy link to clipboard") (user (login . "aaronjensen") (id . 8588) (avatar_url . "https://avatars3.githubusercontent.com/u/8588?v=4") (gravatar_id . "") (url . "https://api.github.com/users/aaronjensen") (html_url . "https://github.com/aaronjensen") (followers_url . "https://api.github.com/users/aaronjensen/followers") (following_url . "https://api.github.com/users/aaronjensen/following{/other_user}") (gists_url . "https://api.github.com/users/aaronjensen/gists{/gist_id}") (starred_url . "https://api.github.com/users/aaronjensen/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/aaronjensen/subscriptions") (organizations_url . "https://api.github.com/users/aaronjensen/orgs") (repos_url . "https://api.github.com/users/aaronjensen/repos") (events_url . "https://api.github.com/users/aaronjensen/events{/privacy}") (received_events_url . "https://api.github.com/users/aaronjensen/received_events") (type . "User") (site_admin)) (labels ((id . 811244213) (url . "https://api.github.com/repos/vermiculus/magithub/labels/easy") (name . "easy") (color . "9de045") (default)) ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2018-01-20T22:59:24Z") (updated_at . "2018-01-20T23:17:59Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "After creating a pull request, gh-pulls copies a link to the PR to your clipboard. This is super handy and would be great if magithub did the same. Thanks!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/222") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/222/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/222/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/222/events") (html_url . "https://github.com/vermiculus/magithub/issues/222") (id . 290216149) (number . 222) (title . "Reconsider 'offline mode' header") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t)) ((id . 727559842) (url . "https://api.github.com/repos/vermiculus/magithub/labels/usability") (name . "usability") (color . "ffeabf") (default))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/2") (html_url . "https://github.com/vermiculus/magithub/milestone/2") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/2/labels") (id . 3050550) (number . 2) (title . "0.2") (description . "Bugs that should be addressed before 0.2 is released.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 4) (closed_issues . 6) (state . "open") (created_at . "2018-01-20T18:52:01Z") (updated_at . "2018-02-17T13:33:02Z") (due_on . "2018-03-31T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2018-01-20T19:18:54Z") (updated_at . "2018-01-20T19:20:25Z") (closed_at) (author_association . "OWNER") (body . "From #175.  Perhaps we don't need the header -- it may make sense just in the popup.

Related to c1e612634f29b931465d3bf2db64e993da75dee4.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/221") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/221/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/221/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/221/events") (html_url . "https://github.com/vermiculus/magithub/issues/221") (id . 290215858) (number . 221) (title . "Revamp dispatch popup") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/2") (html_url . "https://github.com/vermiculus/magithub/milestone/2") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/2/labels") (id . 3050550) (number . 2) (title . "0.2") (description . "Bugs that should be addressed before 0.2 is released.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 4) (closed_issues . 6) (state . "open") (created_at . "2018-01-20T18:52:01Z") (updated_at . "2018-02-17T13:33:02Z") (due_on . "2018-03-31T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2018-01-20T19:14:41Z") (updated_at . "2018-01-20T19:20:25Z") (closed_at) (author_association . "OWNER") (body . "Details in #175.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/219") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/219/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/219/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/219/events") (html_url . "https://github.com/vermiculus/magithub/issues/219") (id . 290215191) (number . 219) (title . "Fix MELPA-Stable") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534445) (url . "https://api.github.com/repos/vermiculus/magithub/labels/help%20wanted") (name . "help wanted") (color . "128A0C") (default . t)) ((id . 817041384) (url . "https://api.github.com/repos/vermiculus/magithub/labels/process") (name . "process") (color . "e99695") (default))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/2") (html_url . "https://github.com/vermiculus/magithub/milestone/2") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/2/labels") (id . 3050550) (number . 2) (title . "0.2") (description . "Bugs that should be addressed before 0.2 is released.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 4) (closed_issues . 6) (state . "open") (created_at . "2018-01-20T18:52:01Z") (updated_at . "2018-02-17T13:33:02Z") (due_on . "2018-03-31T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2018-01-20T19:05:38Z") (updated_at . "2018-01-26T05:08:53Z") (closed_at) (author_association . "OWNER") (body . "There are several issues that will be resolved once all dependencies are released to MELPA.  I'm opening this issue to link the other issues together (and to close them all as duplicates of this core problem).

In the past, I haven't prioritized MELPA-Stable since I don't use it, but clearly a process should be created so folks who *do* use 'stable' versions aren't forgotten.  I don't know what such a process would look like, yet -- a process made more difficult with functional dependencies on other projects continually enhanced with the needs of the present one in mind.  I've considered adding a matrix variable to Travis CI testing, but I don't believe this will work well with the tags necessary to make MELPA-Stable work.  (If I'm wrong, please let me know!  This could be an ideal approach.)")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/215") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/215/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/215/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/215/events") (html_url . "https://github.com/vermiculus/magithub/issues/215") (id . 290200632) (number . 215) (title . "magithub-browse on a pull request branch should open the pull request") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-20T15:38:22Z") (updated_at . "2018-01-20T15:38:22Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/214") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/214/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/214/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/214/events") (html_url . "https://github.com/vermiculus/magithub/issues/214") (id . 290200572) (number . 214) (title . "Close/reopen issues and pull requests") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-20T15:37:29Z") (updated_at . "2018-01-20T15:37:30Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/213") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/213/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/213/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/213/events") (html_url . "https://github.com/vermiculus/magithub/issues/213") (id . 290200527) (number . 213) (title . "Show status checks for PR on PR view page") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2018-01-20T15:36:52Z") (updated_at . "2018-01-20T15:36:52Z") (closed_at) (author_association . "OWNER") (body . "")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/197") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/197/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/197/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/197/events") (html_url . "https://github.com/vermiculus/magithub/issues/197") (id . 288320108) (number . 197) (title . "Customize the way how issue list is displayed") (user (login . "xuchunyang") (id . 4550353) (avatar_url . "https://avatars0.githubusercontent.com/u/4550353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/xuchunyang") (html_url . "https://github.com/xuchunyang") (followers_url . "https://api.github.com/users/xuchunyang/followers") (following_url . "https://api.github.com/users/xuchunyang/following{/other_user}") (gists_url . "https://api.github.com/users/xuchunyang/gists{/gist_id}") (starred_url . "https://api.github.com/users/xuchunyang/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/xuchunyang/subscriptions") (organizations_url . "https://api.github.com/users/xuchunyang/orgs") (repos_url . "https://api.github.com/users/xuchunyang/repos") (events_url . "https://api.github.com/users/xuchunyang/events{/privacy}") (received_events_url . "https://api.github.com/users/xuchunyang/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 7) (created_at . "2018-01-13T10:52:42Z") (updated_at . "2018-01-20T19:08:01Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "It would be nice if user can customize the way how issue list is displayed, for example, I want to put the issue labels right after the issue title:

    issue-id issue-title issue-labels")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/179") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/179/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/179/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/179/events") (html_url . "https://github.com/vermiculus/magithub/issues/179") (id . 281858189) (number . 179) (title . "Feature request: Add author name next to PR/Issue in the list") (user (login . "agzam") (id . 1091022) (avatar_url . "https://avatars1.githubusercontent.com/u/1091022?v=4") (gravatar_id . "") (url . "https://api.github.com/users/agzam") (html_url . "https://github.com/agzam") (followers_url . "https://api.github.com/users/agzam/followers") (following_url . "https://api.github.com/users/agzam/following{/other_user}") (gists_url . "https://api.github.com/users/agzam/gists{/gist_id}") (starred_url . "https://api.github.com/users/agzam/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/agzam/subscriptions") (organizations_url . "https://api.github.com/users/agzam/orgs") (repos_url . "https://api.github.com/users/agzam/repos") (events_url . "https://api.github.com/users/agzam/events{/privacy}") (received_events_url . "https://api.github.com/users/agzam/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 3) (created_at . "2017-12-13T18:55:25Z") (updated_at . "2017-12-13T19:46:54Z") (closed_at) (author_association . "NONE") (body . "It would be nice to be able to see author's handler in the list of PRs/Issues. \"Idiomatic\" way probably would be to use `magit-margin` - the one that can be toggled by `L L`

![image](https://user-images.githubusercontent.com/1091022/33956664-18429e80-dff4-11e7-9d02-50c3e27e2431.png) ")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/176") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/176/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/176/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/176/events") (html_url . "https://github.com/vermiculus/magithub/issues/176") (id . 278798064) (number . 176) (title . "CI status bug") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/2") (html_url . "https://github.com/vermiculus/magithub/milestone/2") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/2/labels") (id . 3050550) (number . 2) (title . "0.2") (description . "Bugs that should be addressed before 0.2 is released.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 4) (closed_issues . 6) (state . "open") (created_at . "2018-01-20T18:52:01Z") (updated_at . "2018-02-17T13:33:02Z") (due_on . "2018-03-31T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2017-12-03T16:53:04Z") (updated_at . "2018-01-20T18:53:22Z") (closed_at) (author_association . "OWNER") (body . "> - When the push-remote is configured but the branch by the push-target branch doesn't exist yet:
>
> ```
>   error(\"Invalid branch name %s\" \"tarsius/master\")
>   magit-split-branch-name(\"tarsius/master\")
>   magithub-ci-status--get-default-ref()
>   magithub-insert-ci-status-header()
>   magithub-maybe-insert-ci-status-header()
> ```

From #175")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/173") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/173/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/173/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/173/events") (html_url . "https://github.com/vermiculus/magithub/issues/173") (id . 277152878) (number . 173) (title . "FR: browse raw files without cloning") (user (login . "treyharris") (id . 97895) (avatar_url . "https://avatars3.githubusercontent.com/u/97895?v=4") (gravatar_id . "") (url . "https://api.github.com/users/treyharris") (html_url . "https://github.com/treyharris") (followers_url . "https://api.github.com/users/treyharris/followers") (following_url . "https://api.github.com/users/treyharris/following{/other_user}") (gists_url . "https://api.github.com/users/treyharris/gists{/gist_id}") (starred_url . "https://api.github.com/users/treyharris/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/treyharris/subscriptions") (organizations_url . "https://api.github.com/users/treyharris/orgs") (repos_url . "https://api.github.com/users/treyharris/repos") (events_url . "https://api.github.com/users/treyharris/events{/privacy}") (received_events_url . "https://api.github.com/users/treyharris/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 2) (created_at . "2017-11-27T20:11:39Z") (updated_at . "2017-11-27T20:54:53Z") (closed_at) (author_association . "NONE") (body . "As requested by @vermiculus on Gitter, filing this as an issue.

# Feature Request: Browse GitHub and Gist files directly

I often crib bits of configuration from _init.el_ files on GitHub. (For instance, to find the best `use-package` incantation for a new package I haven't used before). In these cases, I need the raw file (so e3w and other web browsers are less desirable since they can add or remove whitespace and do other mangling), but I don't want to clone the repo (since this is a one-off use).

Another common case of this is Gists—cloning a Gist can be painful, and you rarely actually need to make modifications.

For these cases, a way to open the raw file content in a (by default) read-only buffer (of the correct auto mode) would be _very_ useful.

## Suggested UI

I can think of three frequent entry points:

1. You've searched up a code snippet and are staring at it in a browser. You have a full blob URL like `https://github.com/vermiculus/magithub/blob/master/README.md`, and perhaps from a search, one with a branch, commit, and/or line number (`https://github.com/vermiculus/magithub/blob/e5c7e2d99dec14ad74f52be85db94d1c175856f7/test/mock-data/get/repos.d/vermiculus.d/magithub#L13`).
2. You have a Gist and would like to browse its files (probably just one, but sometimes a tree) using only the Gist identifier or URL.
3. You have the username/repo pair, a filename, and perhaps a branch if not _master._ So, `vermiculus/magithub??notmaster??/README.md`, with `??` representing \"some relatively easy-to-type separator.\"

Specific interactives seem like the right choice for the first (e.g., `M-x magithub-browse-url RET https://github.com/vermiculus/magithub/blob/master/README.md RET`) and second (e.g., <tt>M-x magithub-browse-gist RET _gist-url-or-id_ RET</tt>).

(For the second and possibly the first as well, if the result is a directory tree containing a single file—as will often be the case with Gists—I think the behavior should be to auto-open the single file; I can't think of a case where browsing a dired containing a single file would be useful.)

I would suggest a TRAMP hook as being ideal for the third case, except I don't know if the GitHub API is sufficient for the kinds of requests oft-used packages like Helm will automatically do to allow for completion and displaying sibling nodes interactively.

As an alternative, though, an interactive with some way to enter a file name from the POV of the package—without having to deal with `blob/master` and such—would be a good compromise.

(Regardless, this feature would need to deal with tree discovery, since you'll have cases like the second Gist case above where the result will be a dired buffer.)

Perhaps a trailing `#N` should be captured by magithub and translated into a request to place point on that line.

## Obvious extensions of functionality for later

- The ability, while visiting a buffer in this way, to do file-oriented operations, including
	- Cloning and/or forking the repo containing the buffer's content, and perhaps adding it as a submodule to an existing repo magit is tracking
	- Viewing a dired of the buffer content's sibling or parent nodes
	- Perhaps, in addition to `C-x C-w` to write out the file locally, a way to write it and immediately commit it to your own repo.
- The ability to make the buffer read-write (in the usual way, toggling `C-x C-q`) modify it, and \"save\" directly into a new commit on GitHub, a la \"Edit\" in GitHub's web browsing interface. (Provided you have permission to do so, of course.)
- Hooks/customization to use gitlab, bitbucket, and other non-GitHub sources.

Thanks very much!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/166") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/166/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/166/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/166/events") (html_url . "https://github.com/vermiculus/magithub/issues/166") (id . 273923676) (number . 166) (title . "Limit number of issues / PR retrieved on magit-status") (user (login . "humitos") (id . 244656) (avatar_url . "https://avatars1.githubusercontent.com/u/244656?v=4") (gravatar_id . "") (url . "https://api.github.com/users/humitos") (html_url . "https://github.com/humitos") (followers_url . "https://api.github.com/users/humitos/followers") (following_url . "https://api.github.com/users/humitos/following{/other_user}") (gists_url . "https://api.github.com/users/humitos/gists{/gist_id}") (starred_url . "https://api.github.com/users/humitos/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/humitos/subscriptions") (organizations_url . "https://api.github.com/users/humitos/orgs") (repos_url . "https://api.github.com/users/humitos/repos") (events_url . "https://api.github.com/users/humitos/events{/privacy}") (received_events_url . "https://api.github.com/users/humitos/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 16) (created_at . "2017-11-14T20:00:56Z") (updated_at . "2017-12-23T18:23:34Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "Hi! This is not a bug or something that is not working properly, but a kind of question/feature request.

Is is possible to limit the number of issues / PR retrieved when magit-status is loaded? For example, with the RTD project (https://github.com/rtfd/readthedocs.org) it's very slow to open the magit-status buffer and it's very annoying.

* Recent commits (48) is 48 lines.
* Pull Request (26) is 274 lines.
* Issues (491) is 6557 lines.

I'm not sure, but I suppose that rendering all of those issues/pr takes a lot of time (not sure how to measure this properly, anyway)

I've being using this in other small projects and I never had this issue. Thanks!")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/163") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/163/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/163/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/163/events") (html_url . "https://github.com/vermiculus/magithub/issues/163") (id . 273770295) (number . 163) (title . "Merging PR on Github") (user (login . "se7entyse7en") (id . 5599208) (avatar_url . "https://avatars1.githubusercontent.com/u/5599208?v=4") (gravatar_id . "") (url . "https://api.github.com/users/se7entyse7en") (html_url . "https://github.com/se7entyse7en") (followers_url . "https://api.github.com/users/se7entyse7en/followers") (following_url . "https://api.github.com/users/se7entyse7en/following{/other_user}") (gists_url . "https://api.github.com/users/se7entyse7en/gists{/gist_id}") (starred_url . "https://api.github.com/users/se7entyse7en/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/se7entyse7en/subscriptions") (organizations_url . "https://api.github.com/users/se7entyse7en/orgs") (repos_url . "https://api.github.com/users/se7entyse7en/repos") (events_url . "https://api.github.com/users/se7entyse7en/events{/privacy}") (received_events_url . "https://api.github.com/users/se7entyse7en/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-11-14T12:11:13Z") (updated_at . "2018-01-18T04:12:56Z") (closed_at) (author_association . "NONE") (body . "Hi! Is it possibile to actually merge a PR on github? Initially I thought that `magithub-pull-request-merge` merges the PR on github but it actually merges it locally. Is it even possibile?
")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/160") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/160/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/160/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/160/events") (html_url . "https://github.com/vermiculus/magithub/issues/160") (id . 272637168) (number . 160) (title . "Browsing support") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 1) (created_at . "2017-11-09T16:55:33Z") (updated_at . "2018-02-10T23:44:17Z") (closed_at) (author_association . "OWNER") (body . "It'd be nifty to have a dashboard-like buffer that can view repository information without cloning. ")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/158") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/158/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/158/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/158/events") (html_url . "https://github.com/vermiculus/magithub/issues/158") (id . 271313703) (number . 158) (title . "Standardized issue detail headers") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-11-05T20:59:58Z") (updated_at . "2017-11-05T21:00:21Z") (closed_at) (author_association . "OWNER") (body . "Right now, we're prefixing the headers in the status buffer with a common prefix padding for alignment.  If we want to standardize these headers for issue-viewing, we'll have to find a way to avoid doing this prefix in buffers that aren't lists of issues.

One way to do this might be margin manipulation, but I'm not sure.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/152") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/152/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/152/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/152/events") (html_url . "https://github.com/vermiculus/magithub/issues/152") (id . 268083141) (number . 152) (title . "Performance Problems for magithub-issue-insert-section") (user (login . "jgkamat") (id . 4349709) (avatar_url . "https://avatars2.githubusercontent.com/u/4349709?v=4") (gravatar_id . "") (url . "https://api.github.com/users/jgkamat") (html_url . "https://github.com/jgkamat") (followers_url . "https://api.github.com/users/jgkamat/followers") (following_url . "https://api.github.com/users/jgkamat/following{/other_user}") (gists_url . "https://api.github.com/users/jgkamat/gists{/gist_id}") (starred_url . "https://api.github.com/users/jgkamat/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/jgkamat/subscriptions") (organizations_url . "https://api.github.com/users/jgkamat/orgs") (repos_url . "https://api.github.com/users/jgkamat/repos") (events_url . "https://api.github.com/users/jgkamat/events{/privacy}") (received_events_url . "https://api.github.com/users/jgkamat/received_events") (type . "User") (site_admin)) (labels ((id . 447696472) (url . "https://api.github.com/repos/vermiculus/magithub/labels/performance") (name . "performance") (color . "e99695") (default))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 10) (created_at . "2017-10-24T15:41:21Z") (updated_at . "2018-01-20T19:09:44Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "I always noticed on semi-large repostiories, magithub would slow down magit-status a lot. After seeing this in offline mode, I realized this is actually mostly performance problems, and not waiting for api calls.

I took a stacktrace of magit-status called repeatedly for `qutebrowser/qutebrowser` (with 400 issues, and about 20 prs)`

```
- command-execute                                                9119  93%
 - call-interactively                                            9119  93%
  - apply                                                        9119  93%
   - call-interactively@ido-cr+-record-current-command               9119  93%
    - apply                                                      9119  93%
     - #<subr call-interactively>                                9119  93%
      - funcall-interactively                                    9103  93%
       - magit-status                                            8574  88%
        - magit-status-internal                                  8574  88%
         - magit-mode-setup                                      8574  88%
          - magit-mode-setup-internal                            8574  88%
           - magit-refresh-buffer                                8423  86%
            - apply                                              8376  85%
             - magit-status-refresh-buffer                       8112  83%
              - magit-run-section-hook                           8032  82%
               - run-hooks                                       8032  82%
                - magithub-issue--insert-issue-section               7346  75%
                 - magithub-issue-insert-sections                7332  75%
                  - mapcar                                       7332  75%
                   - #<compiled 0x30199e9>                       7332  75%
                    - magithub-issue-insert-section               7300  74%
                     - run-hook-with-args                        6616  67%
                      - magithub-issue-detail-insert-body-preview               1432  14%
                       + s-word-wrap                             1220  12%
                       + #<compiled 0x1fbe465>                     56   0%
                         generate-new-buffer                       36   0%
                       + s-trim                                    32   0%
                         replace-regexp-in-string                   8   0%
                      + magithub-issue-detail-insert-labels                331   3%
                      + magithub-issue-detail-insert-assignees                190   1%
                      + magithub-issue-detail-insert-author                145   1%
                       magit-get-section                           32   0%
                     + magit-insert-heading                        20   0%
                     + run-hook-with-args-until-success                  8   0%
                 + magithub-issues                                  6   0%
                + magithub-issue--insert-pr-section                260   2%
                + magit-insert-status-headers                     131   1%
                + magit-insert-merge-log                           11   0%
                + magit-insert-unpulled-from-upstream                  4   0%
                + magit-insert-unpulled-from-pushremote                  4   0%
                + magit-insert-staged-changes                       4   0%
              + magit-section-show                                 68   0%
           + magit-display-buffer                                  53   0%
           + magit-status-mode                                     41   0%
           + run-hooks                                             20   0%
       + smex                                                     529   5%
      + byte-code                                                  16   0%
+ ...                                                             558   5%
+ redisplay_internal (C function)                                  44   0%
+ timer-event-handler                                               8   0%
+ sp--save-pre-command-state                                        5   0%
+ evil-repeat-pre-hook                                              4   0%
+ erc-server-filter-function                                        4   0%
```

It turns out 75% of time is spent generating the details for issues (which I feel can be optimized down).

Right away [I saw a possible improvement](https://github.com/vermiculus/magithub/blob/master/magithub-issue.el#L255-L281) where we can trim the string description before wrapping it (rather than after), as 12% of time is spent wrapping long descriptions (that are never used later)

`run-hook-with-args` seems to be taking a huge chunk of time itself, I'm not entirely sure why. I'm going to play with making that hook a function instead, and seeing if that improves performance (or gives me a better profile to look at).

I'm more than happy to work on this, because I like this kind of thing a lot :). It might be a while before I can work on it though.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/149") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/149/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/149/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/149/events") (html_url . "https://github.com/vermiculus/magithub/issues/149") (id . 267409813) (number . 149) (title . "List issues by project") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-10-21T20:00:46Z") (updated_at . "2017-11-27T20:55:13Z") (closed_at) (author_association . "OWNER") (body . "We could do this in a very similar way that the dashboard currently works.  This project view could be reachable by the dashboard, too.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/146") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/146/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/146/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/146/events") (html_url . "https://github.com/vermiculus/magithub/issues/146") (id . 264255845) (number . 146) (title . "Make it impossible to mess up a pull request") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 727559842) (url . "https://api.github.com/repos/vermiculus/magithub/labels/usability") (name . "usability") (color . "ffeabf") (default)) ((id . 461310658) (url . "https://api.github.com/repos/vermiculus/magithub/labels/waiting") (name . "waiting") (color . "5319e7") (default))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 1) (created_at . "2017-10-10T14:43:52Z") (updated_at . "2018-01-20T19:09:44Z") (closed_at) (author_association . "OWNER") (body . "From #137.

It seems to still be possible to select something like `origin/master` when choosing a base branch for the pull request. This is probably being added because it's the calculated default (even though it's not in the list of branches).

Figure out why this is happening and make it impossible to make a mistake when submitting pull requests. As a stop-gap, it might be wise to put a hold on calculating defaults here.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/135") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/135/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/135/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/135/events") (html_url . "https://github.com/vermiculus/magithub/issues/135") (id . 254118600) (number . 135) (title . "Avoid adding a remote if it already exists under a different name") (user (login . "ericdanan") (id . 11611353) (avatar_url . "https://avatars3.githubusercontent.com/u/11611353?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ericdanan") (html_url . "https://github.com/ericdanan") (followers_url . "https://api.github.com/users/ericdanan/followers") (following_url . "https://api.github.com/users/ericdanan/following{/other_user}") (gists_url . "https://api.github.com/users/ericdanan/gists{/gist_id}") (starred_url . "https://api.github.com/users/ericdanan/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ericdanan/subscriptions") (organizations_url . "https://api.github.com/users/ericdanan/orgs") (repos_url . "https://api.github.com/users/ericdanan/repos") (events_url . "https://api.github.com/users/ericdanan/events{/privacy}") (received_events_url . "https://api.github.com/users/ericdanan/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 1) (created_at . "2017-08-30T20:03:25Z") (updated_at . "2018-01-20T18:49:16Z") (closed_at) (author_association . "CONTRIBUTOR") (body . "If I make a PR in a repo of mine, then magithub will add the repo as a new remote with my username although it is the same as the origin remote. Could this be avoided? Perhaps by testing whether a remote with the same url already exists?")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/134") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/134/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/134/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/134/events") (html_url . "https://github.com/vermiculus/magithub/issues/134") (id . 253824609) (number . 134) (title . "Don't clobber branch sections that have `.magithub` in the name") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2017-08-29T22:30:02Z") (updated_at . "2018-01-20T18:49:16Z") (closed_at) (author_association . "OWNER") (body . "From #133.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/131") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/131/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/131/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/131/events") (html_url . "https://github.com/vermiculus/magithub/issues/131") (id . 253172314) (number . 131) (title . "magithub-clone should handle cloning forks") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 6) (created_at . "2017-08-27T15:56:06Z") (updated_at . "2018-01-26T13:29:17Z") (closed_at) (author_association . "OWNER") (body . "From #130. When cloning a fork, we should in fact clone the source repository and then add the fork as a remote (and set up defaults, etc.) One question that remains is whether to use the `parent` repo (that repo from which the current repo was forked) or the `source` repo (that repo from which all forks originate).")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/124") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/124/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/124/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/124/events") (html_url . "https://github.com/vermiculus/magithub/issues/124") (id . 249791018) (number . 124) (title . "Ability to define multiple views of issues") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-08-12T05:50:30Z") (updated_at . "2017-08-20T15:02:36Z") (closed_at) (author_association . "OWNER") (body . "From a yet-undeveloped issue browser, having definable views of issues and pull requests would be good. A view would just be a saved-off collection of filters. ")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/121") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/121/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/121/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/121/events") (html_url . "https://github.com/vermiculus/magithub/issues/121") (id . 249292429) (number . 121) (title . "magithub-github-repository-p only checks \"origin\" as the single possible GitHub remote name") (user (login . "whirm") (id . 529494) (avatar_url . "https://avatars1.githubusercontent.com/u/529494?v=4") (gravatar_id . "") (url . "https://api.github.com/users/whirm") (html_url . "https://github.com/whirm") (followers_url . "https://api.github.com/users/whirm/followers") (following_url . "https://api.github.com/users/whirm/following{/other_user}") (gists_url . "https://api.github.com/users/whirm/gists{/gist_id}") (starred_url . "https://api.github.com/users/whirm/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/whirm/subscriptions") (organizations_url . "https://api.github.com/users/whirm/orgs") (repos_url . "https://api.github.com/users/whirm/repos") (events_url . "https://api.github.com/users/whirm/events{/privacy}") (received_events_url . "https://api.github.com/users/whirm/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-08-10T09:52:11Z") (updated_at . "2017-08-11T10:47:43Z") (closed_at) (author_association . "NONE") (body . "It would be great if magithub checked all remotes, I often don't have an \"origin\" remote on local repos.

")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/115") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/115/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/115/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/115/events") (html_url . "https://github.com/vermiculus/magithub/issues/115") (id . 248180031) (number . 115) (title . "API availability check doesn't work for multiple hosts") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534442) (url . "https://api.github.com/repos/vermiculus/magithub/labels/bug") (name . "bug") (color . "ee0701") (default . t)) ((id . 665500410) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enterprise") (name . "enterprise") (color . "d4c5f9") (default))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2017-08-05T11:26:13Z") (updated_at . "2018-01-20T18:50:15Z") (closed_at) (author_association . "OWNER") (body . "Found by #112 (/cc @kamidon).

> However, it does not address a problem when multiple different github
hosts are in use (e.g. github.com and an enterprise github instance)
and the API works on one of them but not the other. For that, the
cache implementation will have to be enhanced to understand multiple
hosts.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/100") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/100/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/100/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/100/events") (html_url . "https://github.com/vermiculus/magithub/issues/100") (id . 228917844) (number . 100) (title . "Help-echo for issue references") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T05:18:54Z") (updated_at . "2017-05-16T05:18:54Z") (closed_at) (author_association . "OWNER") (body . "It'd also be nice if throwing point on the bug reference would echo its title in the minibuffer.

Related to #99.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/97") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/97/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/97/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/97/events") (html_url . "https://github.com/vermiculus/magithub/issues/97") (id . 228914610) (number . 97) (title . "View recent activity") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:50:42Z") (updated_at . "2017-05-16T04:50:42Z") (closed_at) (author_association . "OWNER") (body . "From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/95") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/95/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/95/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/95/events") (html_url . "https://github.com/vermiculus/magithub/issues/95") (id . 228914424) (number . 95) (title . "Edit dates/descriptions on milestones") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:49:18Z") (updated_at . "2017-05-16T04:49:29Z") (closed_at) (author_association . "OWNER") (body . "Related #93.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/94") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/94/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/94/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/94/events") (html_url . "https://github.com/vermiculus/magithub/issues/94") (id . 228914359) (number . 94) (title . "Add/remove issues to/from milestones") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:48:34Z") (updated_at . "2017-05-16T04:48:34Z") (closed_at) (author_association . "OWNER") (body . "From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/93") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/93/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/93/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/93/events") (html_url . "https://github.com/vermiculus/magithub/issues/93") (id . 228914264) (number . 93) (title . "Create milestones") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:47:32Z") (updated_at . "2017-05-16T04:47:32Z") (closed_at) (author_association . "OWNER") (body . "From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/92") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/92/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/92/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/92/events") (html_url . "https://github.com/vermiculus/magithub/issues/92") (id . 228914231) (number . 92) (title . "List issues by milestone") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:47:11Z") (updated_at . "2017-05-16T04:47:45Z") (closed_at) (author_association . "OWNER") (body . "I'm imaging another type of status buffer that lists milestones as sections and child issues/PRs under those sections.

From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/91") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/91/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/91/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/91/events") (html_url . "https://github.com/vermiculus/magithub/issues/91") (id . 228914032) (number . 91) (title . "Formally review pull requests") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2017-05-16T04:45:21Z") (updated_at . "2018-01-23T04:21:56Z") (closed_at) (author_association . "OWNER") (body . "This is possible [per the API](https://developer.github.com/v3/pulls/reviews/#create-a-pull-request-review), but it will be a relatively massive project (and a *huge* boon to functionality).

From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/90") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/90/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/90/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/90/events") (html_url . "https://github.com/vermiculus/magithub/issues/90") (id . 228913829) (number . 90) (title . "Apply labels en masse") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:43:14Z") (updated_at . "2017-05-16T04:47:45Z") (closed_at) (author_association . "OWNER") (body . "Related to #86. I'm imagining a list of issues/PRs and being able to mark them for various actions.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/87") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/87/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/87/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/87/events") (html_url . "https://github.com/vermiculus/magithub/issues/87") (id . 228913158) (number . 87) (title . "Workflow for creating new labels") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2017-05-16T04:37:04Z") (updated_at . "2017-05-16T04:37:04Z") (closed_at) (author_association . "OWNER") (body . "From #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/86") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/86/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/86/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/86/events") (html_url . "https://github.com/vermiculus/magithub/issues/86") (id . 228912991) (number . 86) (title . "Better workflow for adding labels") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 0) (created_at . "2017-05-16T04:35:26Z") (updated_at . "2017-10-16T05:53:40Z") (closed_at) (author_association . "OWNER") (body . "`L` right now can both remove and add labels. It would be more useful to have `L` just *add* labels where `C-u L` can update them completely.

Written from #72.")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/81") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/81/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/81/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/81/events") (html_url . "https://github.com/vermiculus/magithub/issues/81") (id . 228695741) (number . 81) (title . "Gitlab support ?") (user (login . "nlamirault") (id . 29233) (avatar_url . "https://avatars0.githubusercontent.com/u/29233?v=4") (gravatar_id . "") (url . "https://api.github.com/users/nlamirault") (html_url . "https://github.com/nlamirault") (followers_url . "https://api.github.com/users/nlamirault/followers") (following_url . "https://api.github.com/users/nlamirault/following{/other_user}") (gists_url . "https://api.github.com/users/nlamirault/gists{/gist_id}") (starred_url . "https://api.github.com/users/nlamirault/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/nlamirault/subscriptions") (organizations_url . "https://api.github.com/users/nlamirault/orgs") (repos_url . "https://api.github.com/users/nlamirault/repos") (events_url . "https://api.github.com/users/nlamirault/events{/privacy}") (received_events_url . "https://api.github.com/users/nlamirault/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2017-05-15T12:17:29Z") (updated_at . "2017-10-14T20:37:25Z") (closed_at) (author_association . "NONE") (body . "First, thanks for this package !
Now that magithub no longer depends on HUB, can we consider a Gitlab support ? Using [glab](https://gitlab.com/tarsius/glab) client ?")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/76") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/76/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/76/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/76/events") (html_url . "https://github.com/vermiculus/magithub/issues/76") (id . 217995832) (number . 76) (title . "Show CI status for recent commits in log view") (user (login . "ChrisBlom") (id . 1045624) (avatar_url . "https://avatars2.githubusercontent.com/u/1045624?v=4") (gravatar_id . "") (url . "https://api.github.com/users/ChrisBlom") (html_url . "https://github.com/ChrisBlom") (followers_url . "https://api.github.com/users/ChrisBlom/followers") (following_url . "https://api.github.com/users/ChrisBlom/following{/other_user}") (gists_url . "https://api.github.com/users/ChrisBlom/gists{/gist_id}") (starred_url . "https://api.github.com/users/ChrisBlom/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/ChrisBlom/subscriptions") (organizations_url . "https://api.github.com/users/ChrisBlom/orgs") (repos_url . "https://api.github.com/users/ChrisBlom/repos") (events_url . "https://api.github.com/users/ChrisBlom/events{/privacy}") (received_events_url . "https://api.github.com/users/ChrisBlom/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone) (comments . 3) (created_at . "2017-03-29T20:15:15Z") (updated_at . "2017-10-16T05:52:58Z") (closed_at) (author_association . "NONE") (body . "Showing the CI status for the current commit is really useful, i'd love to also be able to inspect the CI status of commits in the log view of magit.
Currently I have a binding to open the relevant CI url to inspect this, but i'd prefer to view it within emacs.

I've tried to add a simple lookup to `magit-log-wash-rev` in magic-log.el to display the CI status after the commit, but is quite slow because it calls `hub ci-status` for each commit.

Is there a better way to add the CI status to the log?

```
(defun hub-status (hash)
  (pcase (s-trim (shell-command-to-string (concat \"hub ci-status \" hash)))
    (\"success\"   \"OK  \")
    (\"error\"     \"ERR \")
    (\"failure\"   \"FAIL\")
    (\"pending\"   \"... \")
    (\"no status\" \"    \")))

(cl-defun magit-log-wash-rev (style abbrev)
  (when (derived-mode-p 'magit-log-mode)
    (cl-incf magit-log-count))
  (looking-at (pcase style
                (`log        magit-log-heading-re)
                (`cherry     magit-log-cherry-re)
                (`module     magit-log-module-re)
                (`reflog     magit-log-reflog-re)
                (`stash      magit-log-stash-re)
                (`bisect-vis magit-log-bisect-vis-re)
                (`bisect-log magit-log-bisect-log-re)))
  (magit-bind-match-strings
      (hash msg refs graph author date gpg cherry _ refsub side) nil
    (let ((align (not (member \"--stat\" (cadr magit-refresh-args))))
          (non-graph-re (if (eq style 'bisect-vis)
                            magit-log-bisect-vis-re
                          magit-log-heading-re)))
      (magit-delete-line)
      ;; `git reflog show' output sometimes ends with an incomplete
      ;; element (which has no basis in the data stored in the file).
      (when (and (eq style 'reflog) (not date))
        (cl-return-from magit-log-wash-rev t))
      (magit-insert-section section
        (commit hash)
        (pcase style
          (`stash      (setf (magit-section-type section) 'stash))
          (`module     (setf (magit-section-type section) 'module-commit))
          (`bisect-log (setq hash (magit-rev-parse \"--short\" hash))))
        (when cherry
          (when (and (derived-mode-p 'magit-refs-mode)
                     magit-refs-show-commit-count)
            (insert (make-string magit-refs-indent-cherry-lines ?\\s)))
          (insert (propertize cherry 'face (if (string= cherry \"-\")
                                               'magit-cherry-equivalent
                                             'magit-cherry-unmatched)))
          (insert ?\\s))
        (when side
          (insert (propertize side 'face (if (string= side \"<\")
                                             'magit-cherry-equivalent
                                           'magit-cherry-unmatched)))
          (insert ?\\s))
        (when align
          (insert (propertize hash 'face 'magit-hash) ?\\s))
        (when graph
          (insert graph))
        (unless align
          (insert (propertize hash 'face 'magit-hash) ?\\s))
        (insert
         (propertize (hub-status hash) 'face 'magit-hash))
        (when (and refs (not magit-log-show-refname-after-summary))
          (insert (magit-format-ref-labels refs) ?\\s))
        (when refsub
          (insert (format \"%-2s \" (1- magit-log-count)))
          (insert (magit-reflog-format-subject
                   (substring refsub 0 (if (string-match-p \":\" refsub) -2 -1)))))
        (when msg
          (insert (propertize msg 'face
                              (pcase (and gpg (aref gpg 0))
                                (?G 'magit-signature-good)
                                (?B 'magit-signature-bad)
                                (?U 'magit-signature-untrusted)
                                (?X 'magit-signature-expired)
                                (?Y 'magit-signature-expired-key)
                                (?R 'magit-signature-revoked)
                                (?E 'magit-signature-error)))))
        (when (and refs magit-log-show-refname-after-summary)
          (insert ?\\s)
          (insert (magit-format-ref-labels refs)))
        (insert ?\\n)
        (when (memq style '(log reflog stash))
          (goto-char (line-beginning-position))
          (when (and refsub
                     (string-match \"\\\\`\\\\([^ ]\\\\) \\\\+\\\\(..\\\\)\\\\(..\\\\)\" date))
            (setq date (+ (string-to-number (match-string 1 date))
                          (* (string-to-number (match-string 2 date)) 60 60)
                          (* (string-to-number (match-string 3 date)) 60))))
          (save-excursion
            (backward-char)
            (magit-log-format-margin author date)))
        (when (and (eq style 'cherry)
                   (magit-buffer-margin-p))
          (save-excursion
            (backward-char)
            (apply #'magit-log-format-margin
                   (split-string (magit-rev-format \"%aN%x00%ct\") \"\\0\"))))
        (when (and graph
                   (not (eobp))
                   (not (looking-at non-graph-re)))
          (when (looking-at \"\")
            (magit-insert-heading)
            (delete-char 1)
            (magit-insert-section (commit-header)
              (forward-line)
              (magit-insert-heading)
              (re-search-forward \"\")
              (backward-delete-char 1)
              (forward-char)
              (insert ?\\n))
            (delete-char 1))
          (if (looking-at \"^\\\\(---\\\\|\\n\\s\\\\|\\ndiff\\\\)\")
              (let ((limit (save-excursion
                             (and (re-search-forward non-graph-re nil t)
                                  (match-beginning 0)))))
                (unless (magit-section-content magit-insert-section--current)
                  (magit-insert-heading))
                (delete-char (if (looking-at \"\\n\") 1 4))
                (magit-diff-wash-diffs (list \"--stat\") limit))
            (when align
              (setq align (make-string (1+ abbrev) ? )))
            (when (and (not (eobp)) (not (looking-at non-graph-re)))
              (when align
                (setq align (make-string (1+ abbrev) ? )))
              (while (and (not (eobp)) (not (looking-at non-graph-re)))
                (when align
                  (save-excursion (insert align)))
                (magit-make-margin-overlay)
                (forward-line))
              ;; When `--format' is used and its value isn't one of the
              ;; predefined formats, then `git-log' does not insert a
              ;; separator line.
              (save-excursion
                (forward-line -1)
                (looking-at \"[-_/|\\\\*o. ]*\"))
              (setq graph (match-string 0))
              (unless (string-match-p \"[/\\\\]\" graph)
                (insert graph ?\\n))))))))
  t)
```")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/67") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/67/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/67/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/67/events") (html_url . "https://github.com/vermiculus/magithub/issues/67") (id . 207001682) (number . 67) (title . "some simple prioritisation rules for PRs and issues") (user (login . "fommil") (id . 1914041) (avatar_url . "https://avatars2.githubusercontent.com/u/1914041?v=4") (gravatar_id . "") (url . "https://api.github.com/users/fommil") (html_url . "https://github.com/fommil") (followers_url . "https://api.github.com/users/fommil/followers") (following_url . "https://api.github.com/users/fommil/following{/other_user}") (gists_url . "https://api.github.com/users/fommil/gists{/gist_id}") (starred_url . "https://api.github.com/users/fommil/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/fommil/subscriptions") (organizations_url . "https://api.github.com/users/fommil/orgs") (repos_url . "https://api.github.com/users/fommil/repos") (events_url . "https://api.github.com/users/fommil/events{/privacy}") (received_events_url . "https://api.github.com/users/fommil/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 2) (created_at . "2017-02-11T19:18:03Z") (updated_at . "2017-02-12T19:40:34Z") (closed_at) (author_association . "NONE") (body . "e.g. filter by assignee or a tag?")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/37") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/37/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/37/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/37/events") (html_url . "https://github.com/vermiculus/magithub/issues/37") (id . 180427485) (number . 37) (title . "Async loading") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 3) (created_at . "2016-10-01T00:31:01Z") (updated_at . "2017-08-07T16:42:12Z") (closed_at) (author_association . "OWNER") (body . "Migrated from #36 -- this text copied from @Silex's latest response:

> > > I don't have a gitter account
> >
> > No such thing; it uses GitHub. To each their own though; I'm fine like this.
>
> Well, went there and it said \"Sign in to start talking\". I guess I can sign in with my github account, but I didn't quite see the advantage compared to discussing it here.
>
> > > but I imagine something like magit-status-hook starts an async task that when done finds the magit-status buffer and adds the relevant section.
> >
> > Harder than you might think – I'd have to hook into magit-section's internal data structure to make navigation work right…
>
> Well, you know better than me but from a quick look at the code, it looks like you could change `(add-hook 'magit-status-sections-hook #'magithub-issue--insert-section t)` into something like `(add-hook 'magit-status-sections-hook #'magithub-issue--insert-section-only-if-data-are-ready t)` and have the async task refresh the magit status buffer when it is done.
>
> Of course, refreshing the magit status buffer is maybe not desirable, because maybe it messes with what the user started doing while magithub was refreshing. I don't know how well magit preserves scrolling & sections, etc.
>
> > > That or you always display the section with a text like \"refreshing...\" and when the async task is done you refresh the status buffer.
> >
> > …but that could be a workable idea. We could use that 'refreshing…' text with a special marker for the sentinel to find it again. We still run into the problem of interfacing into magit-section, but at least we're already in our own section at that point and can't mess anything up
>
> It also makes more sense interface wise, because we know we can expect something to appear there. Again, I'm not familiar enough with magit-section to really see how difficult it is... I just assume each section is refreshable independently, if you want better advice you should ask tarsius he's usually very helpful with guidance on how to do achieve certain things.

---

Both options are workable, but the first proposal does seem easier.
")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/35") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/35/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/35/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/35/events") (html_url . "https://github.com/vermiculus/magithub/issues/35") (id . 180219496) (number . 35) (title . "Local CI-Status") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone) (comments . 0) (created_at . "2016-09-30T04:51:49Z") (updated_at . "2016-09-30T04:51:49Z") (closed_at) (author_association . "OWNER") (body . "Teach Magithub (or find appropriate packages that teach Emacs) how to run CI scripts and test for success/failure.
")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/28") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/28/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/28/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/28/events") (html_url . "https://github.com/vermiculus/magithub/issues/28") (id . 178936188) (number . 28) (title . "Settings console") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (assignees ((login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin))) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2016-09-23T17:52:56Z") (updated_at . "2016-09-23T17:52:56Z") (closed_at) (author_association . "OWNER") (body . "We're using a few `git config` settings, now. It would be stellar if we had a general settings console (for Magithub settings) like the one described in #22.
")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/24") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/24/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/24/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/24/events") (html_url . "https://github.com/vermiculus/magithub/issues/24") (id . 178623740) (number . 24) (title . "Collapse full 40-char commit hashes into something more readable") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2016-09-22T14:21:17Z") (updated_at . "2016-09-22T16:52:53Z") (closed_at) (author_association . "OWNER") (body . "GitHub does this and I think it's a good idea for the issue/PR-edit buffer to do so as well.
")) ((url . "https://api.github.com/repos/vermiculus/magithub/issues/17") (repository_url . "https://api.github.com/repos/vermiculus/magithub") (labels_url . "https://api.github.com/repos/vermiculus/magithub/issues/17/labels{/name}") (comments_url . "https://api.github.com/repos/vermiculus/magithub/issues/17/comments") (events_url . "https://api.github.com/repos/vermiculus/magithub/issues/17/events") (html_url . "https://github.com/vermiculus/magithub/issues/17") (id . 178247023) (number . 17) (title . "Investigate undercover.el") (user (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (labels ((id . 443534444) (url . "https://api.github.com/repos/vermiculus/magithub/labels/enhancement") (name . "enhancement") (color . "84b6eb") (default . t))) (state . "open") (locked) (assignee) (assignees) (milestone (url . "https://api.github.com/repos/vermiculus/magithub/milestones/1") (html_url . "https://github.com/vermiculus/magithub/milestone/1") (labels_url . "https://api.github.com/repos/vermiculus/magithub/milestones/1/labels") (id . 2022115) (number . 1) (title . "1.0") (description . "Issues that should be addressed before the first stable, major version.") (creator (login . "vermiculus") (id . 2082195) (avatar_url . "https://avatars3.githubusercontent.com/u/2082195?v=4") (gravatar_id . "") (url . "https://api.github.com/users/vermiculus") (html_url . "https://github.com/vermiculus") (followers_url . "https://api.github.com/users/vermiculus/followers") (following_url . "https://api.github.com/users/vermiculus/following{/other_user}") (gists_url . "https://api.github.com/users/vermiculus/gists{/gist_id}") (starred_url . "https://api.github.com/users/vermiculus/starred{/owner}{/repo}") (subscriptions_url . "https://api.github.com/users/vermiculus/subscriptions") (organizations_url . "https://api.github.com/users/vermiculus/orgs") (repos_url . "https://api.github.com/users/vermiculus/repos") (events_url . "https://api.github.com/users/vermiculus/events{/privacy}") (received_events_url . "https://api.github.com/users/vermiculus/received_events") (type . "User") (site_admin)) (open_issues . 9) (closed_issues . 13) (state . "open") (created_at . "2016-09-22T14:22:57Z") (updated_at . "2018-02-04T01:33:49Z") (due_on . "2018-07-04T07:00:00Z") (closed_at)) (comments . 0) (created_at . "2016-09-21T05:02:51Z") (updated_at . "2017-02-12T19:40:34Z") (closed_at) (author_association . "OWNER") (body . "It's used by a couple of other packages for test coverage.  It seems like a good idea to implement, but is probably not necessary right now.  Writing this issue for tracking.

As an aside, `H i c` is making it a lot easier to actually be diligent about writing this stuff up :)
")))))
